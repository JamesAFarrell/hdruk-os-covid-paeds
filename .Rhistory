by = c("patient_id", "date_period")
) %>%
replace_na(list(n = 0)) %>%
group_by(across(all_of(.group))) %>%
summarise(
date = .x,
n_count = n(),
x_boot = list(Hmisc::smean.cl.boot(n, B = B))
) %>%
unnest_wider(x_boot)
}
)
}
plot_admissions = function(.index_date, .data_cohort,
.data_admissions, .group = NULL){
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_admissions = .data_admissions,
.group = .group,
.f = function(.x, .y, .data_admissions, .group = .group){
boot_admissions(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_admissions = .data_admissions
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean bed-days per month per patient",
x = NULL
)
}
plot_outpatient = function(.index_date, .data_cohort,
.data_outpatient, .group = NULL){
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_outpatient = .data_outpatient,
.group = .group,
.f = function(.x, .y, .data_outpatient, .group = .group){
boot_outpatient(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_outpatient = .data_outpatient
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean outpatient contact (days per month per patient)",
x = NULL
)
}
plot_gp = function(.index_date, .data_cohort,
.data_gp, .group = NULL){
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_gp = .data_gp,
.group = .group,
.f = function(.x, .y, .data_gp, .group = .group){
boot_gp(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_gp = .data_gp
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean healthcare contact (days per month per patient)",
x = NULL
)
}
plot_gp(.index_date = index_date,
.data_cohort = data_cohort,
.data_gp = data_gp,
.group = NULL)
plot_outpatient(.index_date = index_date,
.data_cohort = data_cohort,
.data_outpatient = data_outpatient,
.group = "covid_status_tp")
plot_gp(.index_date = index_date,
.data_cohort = data_cohort,
.data_gp = data_gp,
.group = "covid_status_tp")
data_patient$sex %>% labels()
data_patient %>% labels(which = "sex")
labels(data_patient, which = "sex")
labels(data_patient, which = sex)
attr(data_patient, "labels")
attr(data_patient, 'labels')
attr(data_patient$sex, 'labels')
labels(data_patient, which = sex)
labels(data_patient, which = sex)[[2]]
labels(data_patient)[[2]]
label(data_patient)
labels(data_patient)
?finalfit
extract_variable_label(data_patient)
x = extract_variable_label(data_patient)
x
x["covid_discrepant_test"]
x["covid_status_tp"]
x["covid_status_tp"]
if(is.null(.group)){
group_lab = NULL
} else if (is.null(group_lab)) {
group_lab = extract_variable_label(
.data_cohort[[1]])[.group]
}
plot_gp = function(.index_date, .data_cohort,
.data_gp, .group = NULL,
group_lab = NULL){
if(is.null(.group)){
group_lab = NULL
} else if (is.null(group_lab)) {
group_lab = extract_variable_label(
.data_cohort[[1]])[.group]
}
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_gp = .data_gp,
.group = .group,
.f = function(.x, .y, .data_gp, .group = .group){
boot_gp(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_gp = .data_gp
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean healthcare contact (days per month per patient)",
x = NULL, colour = group_lab, fill = group_lab
)
}
plot_gp(.index_date = index_date,
.data_cohort = data_cohort,
.data_gp = data_gp,
.group = NULL)
plot_outpatient(.index_date = index_date,
.data_cohort = data_cohort,
.data_outpatient = data_outpatient,
.group = "covid_status_tp")
plot_gp(.index_date = index_date,
.data_cohort = data_cohort,
.data_gp = data_gp,
.group = "covid_status_tp")
plot_gp = function(.index_date, .data_cohort,
.data_gp, .group = NULL,
group_lab = NULL){
if(is.null(.group)){
group_lab = NULL
} else if (is.null(group_lab)) {
group_lab = extract_variable_label(
.data_cohort[[1]])[.group]
}
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_gp = .data_gp,
.group = .group,
.f = function(.x, .y, .data_gp, .group = .group){
boot_gp(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_gp = .data_gp
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean healthcare contact (days per month per patient)",
x = NULL, colour = group_lab, fill = group_lab
) +
theme(
legend.position = "bottom"
)
}
plot_gp(.index_date = index_date,
.data_cohort = data_cohort,
.data_gp = data_gp,
.group = "covid_status_tp")
boot_admissions = function(.data_patient, .data_admissions,
start_date, end_date, unit = "month",
.group = NULL, B = 10){
periods = seq(start_date, end_date, by = unit)
admission_counts = .data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates) %>%
mutate(date_period = floor_date(dates, unit = unit)) %>%
count(patient_id, date_period)
map_df(
.x = periods,
.data_patient = .data_patient,
.admission_counts = admission_counts,
B = B, .group = .group,
.f = function(.x, .data_patient, .admission_counts, B, .group){
.data_patient %>%
select(patient_id, all_of(.group)) %>%
mutate(
date_period = .x,
) %>%
left_join(
.admission_counts,
by = c("patient_id", "date_period")
) %>%
replace_na(list(n = 0)) %>%
group_by(across(.group)) %>%
summarise(
date = .x,
n_count = n(),
x_boot = list(Hmisc::smean.cl.boot(n, B = B))
) %>%
unnest_wider(x_boot)
}
)
}
boot_outpatient = function(.data_patient, .data_outpatient,
start_date, end_date, unit = "month",
.group = NULL, B = 10){
periods = seq(start_date, end_date, by = unit)
outpatient_counts = .data_outpatient %>%
mutate(date_period = floor_date(outpatient_date, unit = unit)) %>%
count(patient_id, date_period)
map_df(
.x = periods,
.data_patient = .data_patient,
.outpatient_counts = outpatient_counts,
B = B, .group = .group,
.f = function(.x, .data_patient, .outpatient_counts, B, .group){
.data_patient %>%
select(patient_id, all_of(.group)) %>%
mutate(
date_period = .x,
) %>%
left_join(
.outpatient_counts,
by = c("patient_id", "date_period")
) %>%
replace_na(list(n = 0)) %>%
group_by(across(all_of(.group))) %>%
summarise(
date = .x,
n_count = n(),
x_boot = list(Hmisc::smean.cl.boot(n, B = B))
) %>%
unnest_wider(x_boot)
}
)
}
boot_gp = function(.data_patient, .data_gp,
start_date, end_date, unit = "month",
.group = NULL, B = 10){
periods = seq(start_date, end_date, by = unit)
gp_counts = .data_gp %>%
mutate(date_period = floor_date(gp_date, unit = unit)) %>%
count(patient_id, date_period)
map_df(
.x = periods,
.data_patient = .data_patient,
.gp_counts = gp_counts,
B = B, .group = .group,
.f = function(.x, .data_patient, .gp_counts, B, .group){
.data_patient %>%
select(patient_id, all_of(.group)) %>%
mutate(
date_period = .x,
) %>%
left_join(
.gp_counts,
by = c("patient_id", "date_period")
) %>%
replace_na(list(n = 0)) %>%
group_by(across(all_of(.group))) %>%
summarise(
date = .x,
n_count = n(),
x_boot = list(Hmisc::smean.cl.boot(n, B = B))
) %>%
unnest_wider(x_boot)
}
)
}
plot_admissions = function(.index_date, .data_cohort,
.data_admissions, .group = NULL,
group_lab = NULL){
if(is.null(.group)){
group_lab = NULL
} else if (is.null(group_lab)) {
group_lab = extract_variable_label(
.data_cohort[[1]])[.group]
}
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_admissions = .data_admissions,
.group = .group,
.f = function(.x, .y, .data_admissions, .group = .group){
boot_admissions(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_admissions = .data_admissions
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean bed-days per month per patient",
x = NULL
) +
theme(
legend.position = "bottom"
)
}
plot_outpatient = function(.index_date, .data_cohort,
.data_outpatient, .group = NULL,
group_lab = NULL){
if(is.null(.group)){
group_lab = NULL
} else if (is.null(group_lab)) {
group_lab = extract_variable_label(
.data_cohort[[1]])[.group]
}
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_outpatient = .data_outpatient,
.group = .group,
.f = function(.x, .y, .data_outpatient, .group = .group){
boot_outpatient(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_outpatient = .data_outpatient
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean outpatient contact (days per month per patient)",
x = NULL
) +
theme(
legend.position = "bottom"
)
}
plot_gp = function(.index_date, .data_cohort,
.data_gp, .group = NULL,
group_lab = NULL){
if(is.null(.group)){
group_lab = NULL
} else if (is.null(group_lab)) {
group_lab = extract_variable_label(
.data_cohort[[1]])[.group]
}
plot_data = map2(
.x = .index_date,
.y = .data_cohort,
.data_gp = .data_gp,
.group = .group,
.f = function(.x, .y, .data_gp, .group = .group){
boot_gp(
start_date = .x,
end_date = min(ceiling_date(.x, "year") - days(1), study_end_date) - days(1),
unit = "month",
.group = .group,
.data_patient = .y,
.data_gp = .data_gp
)
}
) %>%
bind_rows()
plot_data %>%
mutate(date = date + days(14)) %>%
ggplot(aes_string("date", "Mean", colour = .group, fill = .group)) +
geom_line() + geom_point(size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, linetype = "dashed", size = 0.2) +
labs(
y = "Mean healthcare contact (days per month per patient)",
x = NULL, colour = group_lab, fill = group_lab
) +
theme(
legend.position = "bottom"
)
}
data_patient %>% colnames()
data_cohort[[1]] %>% colnames()
plot_gp(.index_date = index_date,
.data_cohort = data_cohort,
.data_gp = data_gp,
.group = "age_group_indexed")
View(data_criteria)
flowchart = data_criteria %>%
map(
function(.data_criteria){
## Create inclusion flowchart ----
flowchart = .data_criteria %>%
transmute(
patient_id,
cohort,
c0 = TRUE,
c1 = c0 & isnot_nosocomial,
c2 = c1 & isnot_descrepant_result,
c3 = c2 & is_alive,
c4 = c3 & (is_age_4_or_more & is_age_under_18),
) %>%
select(-patient_id) %>%
group_by(cohort) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-cohort,
names_to="criteria",
values_to="n"
) %>%
group_by(cohort) %>%
mutate(
n = n %>% plyr::round_any(10)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >1 and <18 years on 01 January 2019",
crit == "c1" ~ "-  with no probable nosocomial infection",
crit == "c2" ~ "-  with no same-day discrepent RT-PCR test result",
crit == "c3" ~ paste("-  is alive on 1st January", cohort),
crit == "c4" ~ "-  with age between 4 and 17 years inclusive",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
}
) %>%
bind_rows()
flowchart %>%
select(cohort, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
group_by(cohort) %>%
mutate(cohort = if_else(row_number() == 1, cohort %>% as.character(), "")) %>%
kable(
col.names = c("Cohort", "Criteria", "Count (n)",
"Excluded (n)", "% of extract", "% excluded (step)"),
align = c("l", "l", "r", "r", "r","r")
)
