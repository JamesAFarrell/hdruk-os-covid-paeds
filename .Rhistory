## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
# Create factors and label variables -----
data_patient = data_patient %>%
mutate(
date_of_birth = if_else(is.na(date_of_birth),
NA_character_,
paste0(date_of_birth, "-15")) %>%
as.Date(),
age_2019 = as.numeric((ymd("2019-01-01") - date_of_birth)/365.25) %>%
ff_label("Age on 1st Jan 2019 (years)"),
age_2020 = as.numeric((ymd("2020-01-01") - date_of_birth)/365.25) %>%
ff_label("Age on 1st Jan 2020 (years)"),
age_2021 = as.numeric((ymd("2021-01-01") - date_of_birth)/365.25) %>%
ff_label("Age on 1st Jan 2021 (years)"),
age_2019_factor = cut(age_2019,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label("Age group on 1st Jan 2019 (years)"),
age_2020_factor = cut(age_2020,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label("Age group on 1st Jan 2020 (years)"),
age_2021_factor = cut(age_2021,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label("Age group on 1st Jan 2021 (years)"),
sex = case_when(
sex == "F" ~ "Female",
sex == "M" ~ "Male",
TRUE ~ NA_character_
) %>%
factor() %>%
ff_label("Sex"),
ethnicity_gp = case_when(
ethnicity_gp == "1" ~ "White",
ethnicity_gp == "4" ~ "Black",
ethnicity_gp == "3" ~ "South Asian",
ethnicity_gp == "2" ~ "Mixed",
ethnicity_gp == "5" ~ "Other",
TRUE ~ NA_character_
) %>%
factor() %>%
ff_label("Ethnicity (primary care)"),
ethnicity_6_sus = case_when(
ethnicity_6_sus == "1" ~ "White",
ethnicity_6_sus == "4" ~ "Black",
ethnicity_6_sus == "3" ~ "South Asian",
ethnicity_6_sus == "2" ~ "Mixed",
ethnicity_6_sus == "5" ~ "Other",
TRUE ~ NA_character_
) %>%
factor() %>%
ff_label("Ethnicity (SUS)"),
ethnicity = coalesce(ethnicity_gp, ethnicity_6_sus) %>%
ff_label("Ethnicity"),
region_2019 = region_2019 %>%
factor() %>%
ff_label("Region"),
region_2020 = region_2020 %>%
factor() %>%
ff_label("Region"),
region_2021 = region_2021 %>%
factor() %>%
ff_label("Region"),
imd_Q5_2019 = case_when(
(imd_2019 >=1)          & (imd_2019 < 32844*1/5) ~ "(most deprived) 1",
(imd_2019 >= 32844*1/5) & (imd_2019 < 32844*2/5) ~ "2",
(imd_2019 >= 32844*2/5) & (imd_2019 < 32844*3/5) ~ "3",
(imd_2019 >= 32844*3/5) & (imd_2019 < 32844*4/5) ~ "4",
(imd_2019 >= 32844*4/5)                          ~ "(least deprived) 5",
TRUE ~ NA_character_
) %>%
factor(levels = c("(most deprived) 1", "2", "3", "4", "(least deprived) 5")) %>%
ff_label("Multiple deprivation quintile"),
imd_Q5_2020 = case_when(
(imd_2020 >=1)          & (imd_2020 < 32844*1/5) ~ "(most deprived) 1",
(imd_2020 >= 32844*1/5) & (imd_2020 < 32844*2/5) ~ "2",
(imd_2020 >= 32844*2/5) & (imd_2020 < 32844*3/5) ~ "3",
(imd_2020 >= 32844*3/5) & (imd_2020 < 32844*4/5) ~ "4",
(imd_2020 >= 32844*4/5)                          ~ "(least deprived) 5",
TRUE ~ NA_character_
) %>%
factor(levels = c("(most deprived) 1", "2", "3", "4", "(least deprived) 5")) %>%
ff_label("Multiple deprivation quintile"),
imd_Q5_2021 = case_when(
(imd_2021 >=1)          & (imd_2021 < 32844*1/5) ~ "(most deprived) 1",
(imd_2021 >= 32844*1/5) & (imd_2021 < 32844*2/5) ~ "2",
(imd_2021 >= 32844*2/5) & (imd_2021 < 32844*3/5) ~ "3",
(imd_2021 >= 32844*3/5) & (imd_2021 < 32844*4/5) ~ "4",
(imd_2021 >= 32844*4/5)                          ~ "(least deprived) 5",
TRUE ~ NA_character_
) %>%
factor(levels = c("(most deprived) 1", "2", "3", "4", "(least deprived) 5")) %>%
ff_label("Multiple deprivation quintile"),
rural_urban_2019 = case_when(
rural_urban_2019 %in% c(1,2)     ~ "Urban conurbation",
rural_urban_2019 %in% c(3,4)     ~ "Urban city or town",
rural_urban_2019 %in% c(5,6,7,8) ~ "Rural town or village",
TRUE                             ~ NA_character_
) %>%
factor() %>%
ff_label("Rural-urban classification"),
rural_urban_2020 = case_when(
rural_urban_2020 %in% c(1,2)     ~ "Urban conurbation",
rural_urban_2020 %in% c(3,4)     ~ "Urban city or town",
rural_urban_2020 %in% c(5,6,7,8) ~ "Rural town or village",
TRUE                             ~ NA_character_
) %>%
factor() %>%
ff_label("Rural-urban classification"),
rural_urban_2021 = case_when(
rural_urban_2021 %in% c(1,2)     ~ "Urban conurbation",
rural_urban_2021 %in% c(3,4)     ~ "Urban city or town",
rural_urban_2021 %in% c(5,6,7,8) ~ "Rural town or village",
TRUE                             ~ NA_character_
) %>%
factor() %>%
ff_label("Rural-urban classification"),
)
# Covid status, counts and test dates ----
## First positive test date ----
data_patient = data_patient %>%
left_join(
data_testing %>%
filter(result == "positive") %>%
group_by(patient_id) %>%
filter(row_number() == 1) %>%
select(patient_id, covid_pos_test_date_1 = test_date),
by = "patient_id"
)
## Count tests by result by period ----
data_patient = data_patient %>%
left_join(
data_testing %>%
mutate(
result_abr = if_else(result == "positive", "pos", "neg"),
test_period = case_when(
test_date < tp_start_date ~ NA_character_,
test_date <= tp_end_date  ~ "tp", # Testing period
test_date <= study_end_date ~ "fup", # Follow-up period
TRUE ~ NA_character_
),
result_period = paste0(result_abr, "_", test_period)
) %>%
group_by(patient_id) %>%
count(result_period) %>%
pivot_wider(
names_from = result_period,
names_glue = "covid_test_{result_period}_count",
values_from = n,
),
by = "patient_id"
) %>%
replace_na(
list(covid_test_neg_tp_count = 0,
covid_test_pos_tp_count = 0,
covid_test_neg_fup_count = 0,
covid_test_pos_fup_count = 0)
) %>%
mutate(
covid_test_neg_tp_count = covid_test_neg_tp_count %>%
ff_label("Negative covid test count (testing period)"),
covid_test_pos_tp_count = covid_test_pos_tp_count %>%
ff_label("Positive covid test count (testing period)"),
covid_test_neg_fup_count = covid_test_neg_fup_count %>%
ff_label("Negative covid test count (follow-up period)"),
covid_test_pos_fup_count = covid_test_pos_fup_count %>%
ff_label("Positive covid test count (follow-up period)")
)
## Assign covid status ----
data_patient = data_patient %>%
mutate(covid_status = case_when(
covid_test_pos_tp_count > 0 ~ "Positive",
covid_test_neg_tp_count > 0 ~ "Negative",
TRUE ~ "Untested") %>%
factor() %>%
ff_label("SARS-CoV-2 status"),
)
# Exclusion criteria variables ----
## Potential nosocomial infection ----
## Defined as a positive covid test after day 7 in hospital and on or before 7th
##  day following discharge
data_patient = data_patient %>%
left_join(
data_admissions %>%
left_join(
data_patient %>%
select(patient_id, covid_pos_test_date_1),
by = "patient_id") %>%
mutate(
covid_nosocomial = case_when(
# Length of stay less than 7 days: Not nosocomial
(discharge_date - admission_date) < 7 ~ NA_character_,
# Length of stay 7+ days: Nosocomial if positive after day 7 in hospital
# and on or before day 7 following discharge, otherwise not nosocomial
(admission_date + days(7) < covid_pos_test_date_1) &
(discharge_date + days(7) >= covid_pos_test_date_1) ~ "Yes",
TRUE ~ NA_character_
) %>%
ff_label("Nosocomial infection")) %>%
filter(covid_nosocomial == "Yes") %>%
select(patient_id, covid_nosocomial) %>%
group_by(patient_id) %>%
slice(1) %>%
ungroup(),
by = "patient_id"
) %>%
replace_na(list(covid_nosocomial = "No"))
## Discrepant test result ----
data_patient = data_patient %>%
left_join(
data_testing %>%
group_by(patient_id) %>%
mutate(
covid_test_pos_1 = first(test_date[result == "positive"])
) %>%
ungroup() %>%
filter(test_date == covid_test_pos_1 & result == "negative") %>%
mutate(covid_discrepant_test = "Yes") %>%
select(patient_id, covid_discrepant_test),
by = "patient_id"
) %>%
replace_na(list(covid_discrepant_test = "No"))
# Save data as rds ----
write_rds(data_patient,
here::here("output", "data", "data_patient.rds"),
compress="gz")
data_patient$covid_status
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load datasets ----
data_patient = readRDS(here::here("output", "data", "data_patient.rds"))
# Cohort criteria ----
criteria_2019 = data_patient %>%
transmute(
patient_id = patient_id,
covid_status = covid_status,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age_2019 >= 4,
is_age_under_18 = age_2019 < 18,
include = isnot_nosocomial & isnot_descrepant_result &
is_age_4_or_more_2019 & is_age_under_18_2019
)
data_cohort_2019 = criteria_2019 %>%
filter(include) %>%
select(patient_id) %>%
left_join(data_patient, by="patient_id") %>%
droplevels()
data_flowchart <-
criteria_2019 %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-vax3_type,
names_to="criteria",
values_to="n"
)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load datasets ----
data_patient = readRDS(here::here("output", "data", "data_patient.rds"))
# Cohort criteria ----
criteria_2019 = data_patient %>%
transmute(
patient_id = patient_id,
covid_status = covid_status,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age_2019 >= 4,
is_age_under_18 = age_2019 < 18,
include = isnot_nosocomial & isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
data_cohort_2019 = criteria_2019 %>%
filter(include) %>%
select(patient_id) %>%
left_join(data_patient, by="patient_id") %>%
droplevels()
data_flowchart <-
criteria_2019 %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-vax3_type,
names_to="criteria",
values_to="n"
)
data_inclusioncriteria <- criteria_2019 %>%
transmute(
patient_id,
vax3_type,
c0 = vax1_afterfirstvaxdate & vax3_afterstartdate & vax3_beforeenddate & has_expectedvax3type,
c1 = c0 & (has_age & has_sex & has_imd & has_ethnicity & has_region),
c2 = c1 & (has_vaxgap12 & has_vaxgap23 & has_knownvax1 & has_knownvax2 & vax12_homologous),
c3 = c2 & (isnot_hscworker ),
c4 = c3 & (isnot_carehomeresident & isnot_endoflife & isnot_housebound),
c5 = c4 & (has_norecentcovid),
c6 = c5 & (isnot_inhospitalunplanned),
) %>%
filter(c0)
data_flowchart <-
criteria_2019 %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
)
data_flowchart
data_inclusioncriteria = criteria_2019 %>%
transmute(
patient_id,
covid_status,
c0 = isnot_nosocomial,
c1 = c0 & (isnot_descrepant_result),
c2 = c1 & (is_age_4_or_more & is_age_under_18),
) %>%
filter(c0)
View(data_inclusioncriteria)
data_flowchart <-
data_inclusioncriteria %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
)
View(data_flowchart)
data_inclusioncriteria = criteria_2019 %>%
transmute(
patient_id,
covid_status,
c0 = TRUE,
c1 = c0 & isnot_nosocomial,
c2 = c1 & (isnot_descrepant_result),
c3 = c2 & (is_age_4_or_more & is_age_under_18),
)
data_flowchart <-
data_inclusioncriteria %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status) %>%
mutate(
n_exclude = lag(n) - n,
pct_exclude = n_exclude/lag(n),
pct_all = n / first(n),
pct_step = n / lag(n),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "Alive, registered with GP and age between 1 and 18 years on 01 January 2019",
crit == "c1" ~ "  with no probable nosocomial infection",
crit == "c2" ~ "  with no same-day discrepent RT-PCR test result"
crit == "c3" ~ "  with age between 4 and 17 years",
TRUE ~ NA_character_
)
) #
data_flowchart <-
data_inclusioncriteria %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status) %>%
mutate(
n_exclude = lag(n) - n,
pct_exclude = n_exclude/lag(n),
pct_all = n / first(n),
pct_step = n / lag(n),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "Alive, registered with GP and age between 1 and 18 years on 01 January 2019",
crit == "c1" ~ "  with no probable nosocomial infection",
crit == "c2" ~ "  with no same-day discrepent RT-PCR test result",
crit == "c3" ~ "  with age between 4 and 17 years",
TRUE ~ NA_character_
)
) #
# Load custom functions ----
source(here::here("analysis", "00_functions.R"))
data_flowchart <-
data_inclusioncriteria %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status) %>%
mutate(
n_exclude = lag(n) - n,
pct_exclude = n_exclude/lag(n),
pct_all = n / first(n),
pct_step = n / lag(n),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "Alive, registered with GP and age between 1 and 18 years on 01 January 2019",
crit == "c1" ~ "  with no probable nosocomial infection",
crit == "c2" ~ "  with no same-day discrepent RT-PCR test result",
crit == "c3" ~ "  with age between 4 and 17 years",
TRUE ~ NA_character_
)
) #
View(data_flowchart)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_functions.R"))
# Load datasets ----
data_patient = readRDS(here::here("output", "data", "data_patient.rds"))
# Cohort criteria ----
criteria_2019 = data_patient %>%
transmute(
patient_id = patient_id,
covid_status = covid_status,
is_alive = is.na(death_date) | death_date > ymd("2019-01-01"),
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age_2019 >= 4,
is_age_under_18 = age_2019 < 18,
include = isnot_nosocomial & isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
data_cohort_2019 = criteria_2019 %>%
filter(include) %>%
select(patient_id) %>%
left_join(data_patient, by="patient_id") %>%
droplevels()
data_inclusioncriteria = criteria_2019 %>%
transmute(
patient_id,
covid_status,
c0 = TRUE,
c1 = c0 & is_alive,
c2 = c1 & isnot_nosocomial,
c3 = c2 & (isnot_descrepant_result),
c4 = c3 & (is_age_4_or_more & is_age_under_18),
)
data_flowchart <-
data_inclusioncriteria %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status) %>%
mutate(
n_exclude = lag(n) - n,
pct_exclude = n_exclude/lag(n),
pct_all = n / first(n),
pct_step = n / lag(n),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP between 1st January 2019 and 1st May 2022, and alive with age between 1 and 18 years on 01 January 2019",
crit == "c1" ~ "  is alive on 1st January 2019",
crit == "c2" ~ "  with no probable nosocomial infection",
crit == "c3" ~ "  with no same-day discrepent RT-PCR test result",
crit == "c4" ~ "  with age between 4 and 17 years",
TRUE ~ NA_character_
)
)
View(data_flowchart)
