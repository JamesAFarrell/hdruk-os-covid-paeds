dir.create(here::here("output", "dtw", "tsclust"),      showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "cv_indicies"),  showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "data_cluster"), showWarnings = FALSE, recursive=TRUE)
# Perform time series clustering ----
ts_cluster = tsclust(series = data_resource_dtw,
k = n_clusters,
distance = "dtw_basic",
type = "partitional",
seed = 43)
## Save time series clustering ----
write_rds(ts_cluster,
here::here("output", "dtw", "tsclust",
paste0("tsclust_", n_clusters, ".rds")))
# Cluster validity indicies ----
cvi_extract = cvi(ts_cluster)
## Make into table ----
tbl_cv_indicies = tibble(
n_cluster = ts_cluster@k,
converged = ts_cluster@converged,
cv_index  = names(cvi_extract),
cv_value  = cvi_extract
)
## Save cluster validity table
write_csv(tbl_cv_indicies,
here::here("output", "dtw", "cv_indicies",
paste0("tbl_cv_indicies_", n_clusters, ".csv")))
# Save cluster assignments ----
data_cluster = tibble(
patient_id = ts_cluster@datalist %>% names() %>% as.integer(),
cluster    = ts_cluster@cluster
)
## Save cluster assignments ----
write_rds(data_cluster,
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
ts_cluster@datalist
ts_cluster@clusinfo
?tsclust
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_tsclust.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script determines patient clusters based on time series clustering of
# healthcare resource use during the follow-up period.
# Load packages ----
library(tidyverse)
library(lubridate)
library(dtwclust)
library(tictoc)
# Load function files ----
source(here::here("analysis", "11_0_DTW_functions.R"))
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
n_clusters = 5
} else{
n_clusters = args[[1]] %>% as.integer()
}
# Load data ----
data_resource_dtw = read_rds(here::here("output", "data", "data_resource_dtw.rds"))
# Create output directories ----
dir.create(here::here("output", "dtw", "tsclust"),      showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "cv_indicies"),  showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "data_cluster"), showWarnings = FALSE, recursive=TRUE)
# Perform time series clustering ----
ts_cluster = tsclust(series = data_resource_dtw,
k = n_clusters,
distance = "dtw_basic",
type = "partitional",
seed = 43)
## Save time series clustering ----
write_rds(ts_cluster,
here::here("output", "dtw", "tsclust",
paste0("tsclust_", n_clusters, ".rds")))
# Cluster validity indicies ----
cvi_extract = cvi(ts_cluster)
## Make into table ----
tbl_cv_indicies = tibble(
n_cluster = ts_cluster@k,
converged = ts_cluster@converged,
cv_index  = names(cvi_extract),
cv_value  = cvi_extract
)
## Save cluster validity table
write_csv(tbl_cv_indicies,
here::here("output", "dtw", "cv_indicies",
paste0("tbl_cv_indicies_", n_clusters, ".csv")))
# Save cluster assignments ----
data_cluster = tibble(
patient_id = ts_cluster@datalist %>% names() %>% as.integer(),
cluster    = ts_cluster@cluster
)
## Save cluster assignments ----
write_rds(data_cluster,
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_tsclust.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script determines patient clusters based on time series clustering of
# healthcare resource use during the follow-up period.
# Load packages ----
library(tidyverse)
library(lubridate)
library(dtwclust)
library(tictoc)
# Load function files ----
source(here::here("analysis", "11_0_DTW_functions.R"))
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
n_clusters = 6
} else{
n_clusters = args[[1]] %>% as.integer()
}
# Load data ----
data_resource_dtw = read_rds(here::here("output", "data", "data_resource_dtw.rds"))
# Create output directories ----
dir.create(here::here("output", "dtw", "tsclust"),      showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "cv_indicies"),  showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "data_cluster"), showWarnings = FALSE, recursive=TRUE)
# Perform time series clustering ----
ts_cluster = tsclust(series = data_resource_dtw,
k = n_clusters,
distance = "dtw_basic",
type = "partitional",
seed = 43)
## Save time series clustering ----
write_rds(ts_cluster,
here::here("output", "dtw", "tsclust",
paste0("tsclust_", n_clusters, ".rds")))
# Cluster validity indicies ----
cvi_extract = cvi(ts_cluster)
## Make into table ----
tbl_cv_indicies = tibble(
n_cluster = ts_cluster@k,
converged = ts_cluster@converged,
cv_index  = names(cvi_extract),
cv_value  = cvi_extract
)
## Save cluster validity table
write_csv(tbl_cv_indicies,
here::here("output", "dtw", "cv_indicies",
paste0("tbl_cv_indicies_", n_clusters, ".csv")))
# Save cluster assignments ----
data_cluster = tibble(
patient_id = ts_cluster@datalist %>% names() %>% as.integer(),
cluster    = ts_cluster@cluster
)
## Save cluster assignments ----
write_rds(data_cluster,
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_tsclust.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script determines patient clusters based on time series clustering of
# healthcare resource use during the follow-up period.
# Load packages ----
library(tidyverse)
library(lubridate)
library(dtwclust)
library(tictoc)
# Load function files ----
source(here::here("analysis", "11_0_DTW_functions.R"))
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
n_clusters = 7
} else{
n_clusters = args[[1]] %>% as.integer()
}
# Load data ----
data_resource_dtw = read_rds(here::here("output", "data", "data_resource_dtw.rds"))
# Create output directories ----
dir.create(here::here("output", "dtw", "tsclust"),      showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "cv_indicies"),  showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "data_cluster"), showWarnings = FALSE, recursive=TRUE)
# Perform time series clustering ----
ts_cluster = tsclust(series = data_resource_dtw,
k = n_clusters,
distance = "dtw_basic",
type = "partitional",
seed = 43)
## Save time series clustering ----
write_rds(ts_cluster,
here::here("output", "dtw", "tsclust",
paste0("tsclust_", n_clusters, ".rds")))
# Cluster validity indicies ----
cvi_extract = cvi(ts_cluster)
## Make into table ----
tbl_cv_indicies = tibble(
n_cluster = ts_cluster@k,
converged = ts_cluster@converged,
cv_index  = names(cvi_extract),
cv_value  = cvi_extract
)
## Save cluster validity table
write_csv(tbl_cv_indicies,
here::here("output", "dtw", "cv_indicies",
paste0("tbl_cv_indicies_", n_clusters, ".csv")))
# Save cluster assignments ----
data_cluster = tibble(
patient_id = ts_cluster@datalist %>% names() %>% as.integer(),
cluster    = ts_cluster@cluster
)
## Save cluster assignments ----
write_rds(data_cluster,
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_tsclust.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script determines patient clusters based on time series clustering of
# healthcare resource use during the follow-up period.
# Load packages ----
library(tidyverse)
library(lubridate)
library(dtwclust)
library(tictoc)
# Load function files ----
source(here::here("analysis", "11_0_DTW_functions.R"))
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
n_clusters = 8
} else{
n_clusters = args[[1]] %>% as.integer()
}
# Load data ----
data_resource_dtw = read_rds(here::here("output", "data", "data_resource_dtw.rds"))
# Create output directories ----
dir.create(here::here("output", "dtw", "tsclust"),      showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "cv_indicies"),  showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "dtw", "data_cluster"), showWarnings = FALSE, recursive=TRUE)
# Perform time series clustering ----
ts_cluster = tsclust(series = data_resource_dtw,
k = n_clusters,
distance = "dtw_basic",
type = "partitional",
seed = 43)
## Save time series clustering ----
write_rds(ts_cluster,
here::here("output", "dtw", "tsclust",
paste0("tsclust_", n_clusters, ".rds")))
# Cluster validity indicies ----
cvi_extract = cvi(ts_cluster)
## Make into table ----
tbl_cv_indicies = tibble(
n_cluster = ts_cluster@k,
converged = ts_cluster@converged,
cv_index  = names(cvi_extract),
cv_value  = cvi_extract
)
## Save cluster validity table
write_csv(tbl_cv_indicies,
here::here("output", "dtw", "cv_indicies",
paste0("tbl_cv_indicies_", n_clusters, ".csv")))
# Save cluster assignments ----
data_cluster = tibble(
patient_id = ts_cluster@datalist %>% names() %>% as.integer(),
cluster    = ts_cluster@cluster
)
## Save cluster assignments ----
write_rds(data_cluster,
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_selection.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script summarises the cluster validity indices for each k-clustering to
# aid in the selection of the optimum number of clusters (k).
# Load packages ----
library(tidyverse)
library(dtwclust)
## Create output directories ----
dir.create(here::here("output", "dtw", "selection"), showWarnings = FALSE, recursive=TRUE)
# Plot theme ----
theme_set(theme_bw())
# Time series clustering files ----
cvi_files = list.files(here::here("output", "dtw", "cv_indicies"),
pattern = "tbl_cv_indicies_\\d+.csv")
# Cluster validity indicies ----
## Extract values from files, create table ----
tbl_cluster_validity = cvi_files %>%
map(function(cvi_file){
# Load cvi files ----
cv_indicies = read_csv(here::here("output", "dtw", "cv_indicies", cvi_file))
}) %>%
bind_rows()
## Save table of cluster validity indicies
write_csv(tbl_cluster_validity,
here::here("output", "dtw", "selection", "tbl_cluster_validity.csv"))
# Plot cluster validity indicies ----
plot_cluster_validity = tbl_cluster_validity %>%
ggplot(aes(x = n_cluster, y = cv_value, shape = converged)) +
geom_point() + geom_line() +
facet_wrap(~ cv_index, scales = "free_y") +
labs(x = "Number of clusters", y = NULL,
shape = "Converged")
## Save plot ----
ggsave(filename = here::here("output", "dtw", "selection",
paste0("plot_cluster_validity.jpeg")),
plot = plot_cluster_validity,
height = 7, width = 8, units = "in")
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_results.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script takes the allocated clusters determined by time series clustering
# and calculates patient summary tables and resource-use summaries stratified by
# cluster.
# Load packages ----
library(tidyverse)
library(finalfit)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
n_clusters = 8 # will hard code n_clusters = 3 to 8 in .yaml
} else{
n_clusters = args[[1]]
}
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Disclosure control parameters ----
count_round  = global_var$disclosure_count_round
count_redact = global_var$disclosure_redact
# Create output directories ----
dir.create(here::here("output", "dtw", "results"), showWarnings = FALSE, recursive=TRUE)
# Bootstrap samples
B = 10
# Load data ----
data_resource  = read_rds(here::here("output", "data", "data_resource_dtw.rds"))
data_positives = read_rds(here::here("output", "data", "data_positives.rds"))
data_cluster   = read_rds(
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
# Add label ----
data_cluster = data_cluster %>%
mutate(
cluster = cluster %>% factor() %>% ff_label("Cluster")
)
# Add clustering assignment to patient and resource data ----
data_resource = data_resource %>%
left_join(data_cluster, by = "patient_id")
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 11_DTW_results.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script takes the allocated clusters determined by time series clustering
# and calculates patient summary tables and resource-use summaries stratified by
# cluster.
# Load packages ----
library(tidyverse)
library(finalfit)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
n_clusters = 8 # will hard code n_clusters = 3 to 8 in .yaml
} else{
n_clusters = args[[1]]
}
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Disclosure control parameters ----
count_round  = global_var$disclosure_count_round
count_redact = global_var$disclosure_redact
# Create output directories ----
dir.create(here::here("output", "dtw", "results"), showWarnings = FALSE, recursive=TRUE)
# Bootstrap samples
B = 10
# Load data ----
data_resource  = read_rds(here::here("output", "data", "data_resource.rds"))
data_positives = read_rds(here::here("output", "data", "data_positives.rds"))
data_cluster   = read_rds(
here::here("output", "dtw", "data_cluster",
paste0("data_cluster_", n_clusters, ".rds")))
# Add label ----
data_cluster = data_cluster %>%
mutate(
cluster = cluster %>% factor() %>% ff_label("Cluster")
)
# Add clustering assignment to patient and resource data ----
data_resource = data_resource %>%
left_join(data_cluster, by = "patient_id")
data_positives = data_positives %>%
left_join(data_cluster, by = "patient_id")
# Resource use by cluster ----
##
tbl_resource_use_cluster = data_resource %>%
group_by(date_indexed, cluster) %>%
summarise(
n_patient = n(),
critical_care = list(Hmisc::smean.cl.boot(n_critical_care,
conf.int = 0.95,
B = B)),
beddays = list(Hmisc::smean.cl.boot(n_beddays,
conf.int = 0.95,
B = B)),
outpatient = list(Hmisc::smean.cl.boot(n_outpatient,
conf.int = 0.95,
B = B)),
gp = list(Hmisc::smean.cl.boot(n_gp,
conf.int = 0.95,
B = B)),
)
## Tidy up table and resource factor levels ----
tbl_resource_use_cluster = tbl_resource_use_cluster %>%
unnest_wider(c(critical_care, beddays, outpatient, gp),
names_sep = "_") %>%
pivot_longer(-c(date_indexed, n_patient, cluster),
names_to = c("resource_type", "statistic"),
names_pattern = "(.*)_([[:alpha:]]+)$") %>%
pivot_wider(names_from = statistic, values_from = value) %>%
mutate(resource_type = resource_type %>%
fct_relevel("gp", "outpatient", "beddays", "critical_care") %>%
fct_recode("Healthcare episode contact-days" = "gp",
"Outpatient appointments" = "outpatient",
"Inpatient bed-days" = "beddays",
"Critical care bed-days" = "critical_care"))
## Save table ----
write_csv(tbl_resource_use_cluster,
here::here("output", "dtw", "results",
paste0("tbl_resource_use_cluster_", n_clusters, ".csv")))
# Plot resource use by type and cluster ----
plot_resource_use_cluster = tbl_resource_use_cluster %>%
ggplot(aes(x = date_indexed, y = Mean, ymin = Lower, ymax = Upper)) +
geom_line() +
geom_ribbon(alpha = 0.2, linetype = 2, size = 0.25) +
facet_grid(resource_type ~ cluster, scales = "free_y") +
scale_y_continuous(limits = c(0, NA)) +
labs(x = "Follow-up period (days)", y = "Counts per person-day")
## Save plot ----
ggsave(here::here("output", "dtw", "results", paste0("plot_resource_use_cluster_",
n_clusters, ".jpeg")),
plot = plot_resource_use_cluster,
height = 8, width = 15, units = "in")
# Table of patient characteristics by cluster ----
dependent_var = "cluster"
explanatory_var = c(
# Follow-up
"follow_up_days",
# Demographics
"age", "age_group", "sex", "ethnicity", "imd_Q5_2019", "region_2019",
"rural_urban_2019",
# Shielding
"shielding",
# Comorbidities
"comorbidity_count_factor",
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Vaccination status
"vaccination_status",
# Illness severity 2 weeks after positive test
"illness_severity_2wks", "pims_ts",
"n_gp_2wks_post_covid", "n_outpatient_2wks_post_covid",
"n_beddays_2wks_post_covid", "n_critical_care_2wks_post_covid",
# Previous healthcare use
"ntile_gp_pre_covid_1yr", "n_gp_pre_covid_1yr",
"ntile_outpatient_pre_covid_1yr", "n_outpatient_pre_covid_1yr",
"ntile_beddays_pre_covid_1yr", "n_beddays_pre_covid_1yr"
)
## Summary factorlist ----
tbl_summary = data_positives %>%
summary_factorlist(
dependent = dependent_var,
explanatory = explanatory_var,
cont = "median",
total_col = FALSE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts(count_round) %>%
ff_redact_counts(count_redact)
## Save patient summary table ----
write_csv(tbl_summary,
here::here("output", "dtw", "results",
paste0("tbl_summary_", n_clusters, ".csv")))
