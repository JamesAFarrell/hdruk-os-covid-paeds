data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
data_outpatient = read_rds(here::here("output", "data", "data_outpatient.rds"))
data_gp = read_rds(here::here("output", "data", "data_gp.rds"))
list_cohort = ymd(c("2019-01-01",
"2020-01-01",
"2021-01-01",
"2022-01-01")
) %>%
map(
function(index_date, .data){
.data = .data %>% mutate(
index_date = index_date,
age = ((index_date - date_of_birth)/365.25) %>%
as.numeric() %>%
ff_label(paste0("Age on ", format(index_date, "%d %b %Y"), " (years)")),
age_group = cut(age,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label(paste0("Age group on ", format(index_date, "%d %b %Y"), " (years)")),
)
},
.data = data_patient
)
list_criteria = list_cohort %>%
map(
function(.data){
## Criteria for cohort inclusion ----
data_criteria = .data %>%
transmute(
patient_id = patient_id,
index_date = index_date,
covid_status_tp = covid_status_tp,
is_alive = is.na(death_date) | death_date > index_date,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age >= 4,
is_age_under_18 = age < 18,
include = is_alive &
isnot_nosocomial &
isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
return(data_criteria)
}
)
list_cohort = list_criteria %>%
map(
function(.list_criteria, .data_patient){
data_cohort = data_criteria %>%
filter(include) %>%
select(patient_id, index_date) %>%
left_join(data_patient, by="patient_id")
},
.data_patient = data_patient
)
knitr::opts_chunk$set(echo = FALSE, message=FALSE,
warning=FALSE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
library(scales)
library(zoo)
library(knitr)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_lookup_tables.R"))
# Plot theme
theme_set(theme_bw())
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Load datasets
data_patient = read_rds(here::here("output", "data", "data_patient.rds"))
data_testing = read_rds(here::here("output", "data", "data_testing.rds"))
data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
data_outpatient = read_rds(here::here("output", "data", "data_outpatient.rds"))
data_gp = read_rds(here::here("output", "data", "data_gp.rds"))
list_cohort = ymd(c("2019-01-01",
"2020-01-01",
"2021-01-01",
"2022-01-01")
) %>%
map(
function(index_date, .data){
.data = .data %>% mutate(
index_date = index_date,
age = ((index_date - date_of_birth)/365.25) %>%
as.numeric() %>%
ff_label(paste0("Age on ", format(index_date, "%d %b %Y"), " (years)")),
age_group = cut(age,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label(paste0("Age group on ", format(index_date, "%d %b %Y"), " (years)")),
)
},
.data = data_patient
)
list_criteria = list_cohort %>%
map(
function(.data){
## Criteria for cohort inclusion ----
data_criteria = .data %>%
transmute(
patient_id = patient_id,
index_date = index_date,
covid_status_tp = covid_status_tp,
is_alive = is.na(death_date) | death_date > index_date,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age >= 4,
is_age_under_18 = age < 18,
include = is_alive &
isnot_nosocomial &
isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
return(data_criteria)
}
)
list_cohort = list_criteria %>%
map(
function(.data_criteria, .data_patient){
data_cohort = .data_criteria %>%
filter(include) %>%
select(patient_id, index_date) %>%
left_join(.data_patient, by="patient_id")
},
.data_patient = data_patient
)
list_flowchart = list_criteria %>%
map(
function(.data_criteria){
## Create inclusion flowchart ----
flowchart = .data_criteria %>%
transmute(
patient_id,
covid_status,
c0 = TRUE,
c1 = c0 & is_alive,
c2 = c1 & isnot_nosocomial,
c3 = c2 & isnot_descrepant_result,
c4 = c3 & (is_age_4_or_more & is_age_under_18),
) %>%
select(-patient_id) %>%
group_by(covid_status) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status) %>%
mutate(
n = n %>% plyr::round_any(10)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >1 and <18 years on 01 January 2019",
crit == "c1" ~ "-  is alive on 1st January 2019",
crit == "c2" ~ "-  with no probable nosocomial infection",
crit == "c3" ~ "-  with no same-day discrepent RT-PCR test result",
crit == "c4" ~ "-  with age between 4 and 17 years inclusive",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
}
)
knitr::opts_chunk$set(echo = FALSE, message=FALSE,
warning=FALSE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
library(scales)
library(zoo)
library(knitr)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_lookup_tables.R"))
# Plot theme
theme_set(theme_bw())
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Load datasets
data_patient = read_rds(here::here("output", "data", "data_patient.rds"))
data_testing = read_rds(here::here("output", "data", "data_testing.rds"))
data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
data_outpatient = read_rds(here::here("output", "data", "data_outpatient.rds"))
data_gp = read_rds(here::here("output", "data", "data_gp.rds"))
list_cohort = ymd(c("2019-01-01",
"2020-01-01",
"2021-01-01",
"2022-01-01")
) %>%
map(
function(index_date, .data){
.data = .data %>% mutate(
index_date = index_date,
age = ((index_date - date_of_birth)/365.25) %>%
as.numeric() %>%
ff_label(paste0("Age on ", format(index_date, "%d %b %Y"), " (years)")),
age_group = cut(age,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label(paste0("Age group on ", format(index_date, "%d %b %Y"), " (years)")),
)
},
.data = data_patient
)
list_criteria = list_cohort %>%
map(
function(.data){
## Criteria for cohort inclusion ----
data_criteria = .data %>%
transmute(
patient_id = patient_id,
index_date = index_date,
covid_status_tp = covid_status_tp,
is_alive = is.na(death_date) | death_date > index_date,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age >= 4,
is_age_under_18 = age < 18,
include = is_alive &
isnot_nosocomial &
isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
return(data_criteria)
}
)
list_cohort = list_criteria %>%
map(
function(.data_criteria, .data_patient){
data_cohort = .data_criteria %>%
filter(include) %>%
select(patient_id, index_date) %>%
left_join(.data_patient, by="patient_id")
},
.data_patient = data_patient
)
list_flowchart = list_criteria %>%
map(
function(.data_criteria){
## Create inclusion flowchart ----
flowchart = .data_criteria %>%
transmute(
patient_id,
covid_status_tp,
c0 = TRUE,
c1 = c0 & is_alive,
c2 = c1 & isnot_nosocomial,
c3 = c2 & isnot_descrepant_result,
c4 = c3 & (is_age_4_or_more & is_age_under_18),
) %>%
select(-patient_id) %>%
group_by(covid_status_tp) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status_tp,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status_tp) %>%
mutate(
n = n %>% plyr::round_any(10)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >1 and <18 years on 01 January 2019",
crit == "c1" ~ "-  is alive on 1st January 2019",
crit == "c2" ~ "-  with no probable nosocomial infection",
crit == "c3" ~ "-  with no same-day discrepent RT-PCR test result",
crit == "c4" ~ "-  with age between 4 and 17 years inclusive",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
}
)
list_flowchart[[1]] %>%
select(covid_status, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
kable(
col.names = c("Covid status", "Criteria", "Count (n)",
"Excluded (n)", "% of extract", "% excluded (step)"),
align = c("l", "l", "r", "r", "r","r")
)
list_flowchart[[1]] %>%
select(covid_status_tp, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
kable(
col.names = c("Covid status", "Criteria", "Count (n)",
"Excluded (n)", "% of extract", "% excluded (step)"),
align = c("l", "l", "r", "r", "r","r")
)
list_flowchart[[2]] %>%
select(covid_status_tp, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
kable(
col.names = c("Covid status", "Criteria", "Count (n)",
"Excluded (n)", "% of extract", "% excluded (step)"),
align = c("l", "l", "r", "r", "r","r")
)
list_flowchart = list_criteria %>%
map(
function(.data_criteria){
## Create inclusion flowchart ----
flowchart = .data_criteria %>%
transmute(
patient_id,
covid_status_tp,
c0 = TRUE,
c1 = c0 & is_alive,
c2 = c1 & isnot_nosocomial,
c3 = c2 & isnot_descrepant_result,
c4 = c3 & (is_age_4_or_more & is_age_under_18),
) %>%
select(-patient_id) %>%
group_by(covid_status_tp) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-covid_status_tp,
names_to="criteria",
values_to="n"
) %>%
group_by(covid_status_tp) %>%
mutate(
n = n %>% plyr::round_any(10)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >1 and <18 years on 01 January 2019",
crit == "c1" ~ "-  is alive on 1st January",
crit == "c2" ~ "-  with no probable nosocomial infection",
crit == "c3" ~ "-  with no same-day discrepent RT-PCR test result",
crit == "c4" ~ "-  with age between 4 and 17 years inclusive",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
}
)
list_flowchart[[2]] %>%
select(covid_status_tp, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
kable(
col.names = c("Covid status", "Criteria", "Count (n)",
"Excluded (n)", "% of extract", "% excluded (step)"),
align = c("l", "l", "r", "r", "r","r")
)
list_flowchart[[4]] %>%
select(covid_status_tp, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
kable(
col.names = c("Covid status", "Criteria", "Count (n)",
"Excluded (n)", "% of extract", "% excluded (step)"),
align = c("l", "l", "r", "r", "r","r")
)
list_cohort = ymd(c("2019-01-01",
"2020-01-01",
"2021-01-01",
"2022-01-01")
) %>%
map(
function(index_date, .data){
.data = .data %>% mutate(
cohort = year(index_date),
index_date = index_date,
age = ((index_date - date_of_birth)/365.25) %>%
as.numeric() %>%
ff_label(paste0("Age on 1st January (years)")),
age_group = cut(age,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label(paste0("Age group on 1st January (years)")),
)
},
.data = data_patient
)
list_criteria = list_cohort %>%
map(
function(.data){
## Criteria for cohort inclusion ----
data_criteria = .data %>%
transmute(
patient_id,
cohort,
index_date,
covid_status_tp,
is_alive = is.na(death_date) | death_date > index_date,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age >= 4,
is_age_under_18 = age < 18,
include = is_alive &
isnot_nosocomial &
isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
return(data_criteria)
}
)
list_cohort = list_criteria %>%
map(
function(.data_criteria, .data_patient){
data_cohort = .data_criteria %>%
filter(include) %>%
select(patient_id, cohort, index_date) %>%
left_join(.data_patient, by="patient_id")
},
.data_patient = data_patient
)
list_cohort = map2(list_criteria, list_cohort,
function(.data_criteria, .data_patient){
data_cohort = .data_criteria %>%
filter(include) %>%
select(patient_id, cohort, index_date) %>%
left_join(.data_patient, by="patient_id")
}
)
z = list_cohort %>% bind_rows()
View(z)
list_cohort = ymd(c("2019-01-01",
"2020-01-01",
"2021-01-01",
"2022-01-01")
) %>%
map(
function(index_date, .data){
.data = .data %>% mutate(
cohort = year(index_date),
index_date = index_date,
age = ((index_date - date_of_birth)/365.25) %>%
as.numeric() %>%
ff_label(paste0("Age on 1st January (years)")),
age_group = cut(age,
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+"))%>%
ff_label(paste0("Age group on 1st January (years)")),
)
},
.data = data_patient
)
list_criteria = list_cohort %>%
map(
function(.data){
## Criteria for cohort inclusion ----
data_criteria = .data %>%
transmute(
patient_id,
cohort,
index_date,
covid_status_tp,
is_alive = is.na(death_date) | death_date > index_date,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age >= 4,
is_age_under_18 = age < 18,
include = is_alive &
isnot_nosocomial &
isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
return(data_criteria)
}
)
list_cohort = map2(list_criteria, list_cohort,
function(.data_criteria, .data_patient){
data_cohort = .data_criteria %>%
filter(include) %>%
select(patient_id, cohort, index_date) %>%
left_join(.data_patient, by=c("patient_id", "cohort", "index_date"))
}
)
z = list_cohort %>% bind_rows()
View(z)
