) %>%
factor() %>%
ff_label("Rural-urban classification"),
asthma = if_else(is.na(asthma_date), "No", "Yes") %>%
factor() %>%
ff_label("Asthma"),
cancer = if_else(is.na(cancer_date), "No", "Yes") %>%
factor() %>%
ff_label("Cancer"),
diabetes = if_else(is.na(diabetes_date), "No", "Yes") %>%
factor() %>%
ff_label("Diabetes"),
epilepsy = if_else(is.na(epilepsy_date), "No", "Yes") %>%
factor() %>%
ff_label("Epilepsy"),
severe_mental_illness = if_else(is.na(severe_mental_illness_date), "No", "Yes") %>%
factor() %>%
ff_label("Severe mental illness"),
cerebral_palsy = if_else(is.na(cerebral_palsy_date), "No", "Yes") %>%
factor() %>%
ff_label("Cerebral palsy"),
chronic_infections = if_else(is.na(chronic_infections_date), "No", "Yes") %>%
factor() %>%
ff_label("Chronic infections"),
devices_and_stomas = if_else(is.na(devices_and_stomas_date), "No", "Yes") %>%
factor() %>%
ff_label("Devices and stomas"),
endocrine_disorders = if_else(is.na(endocrine_disorders_date), "No", "Yes") %>%
factor() %>%
ff_label("Endocrine disorders"),
gastrointestinal_disorders = if_else(is.na(gastrointestinal_disorders_date), "No", "Yes") %>%
factor() %>%
ff_label("Gastrointestinal disorders"),
haematological_disorders = if_else(is.na(haematological_disorders_date), "No", "Yes") %>%
factor() %>%
ff_label("Haematological disorders"),
immunological_disorders = if_else(is.na(immunological_disorders_date), "No", "Yes") %>%
factor() %>%
ff_label("Immunological disorders"),
learning_and_behaviour_difficulties = if_else(is.na(learning_and_behaviour_difficulties_date), "No", "Yes") %>%
factor() %>%
ff_label("Learning and behavioural difficulties"),
mental_illness = if_else(is.na(mental_illness_date), "No", "Yes") %>%
factor() %>%
ff_label("Mental illness"),
musculoskeletal_and_rheum = if_else(is.na(musculoskeletal_and_rheum_date), "No", "Yes") %>%
factor() %>%
ff_label("Musculoskeletal and rheumatic diseases"),
transplant = if_else(is.na(transplant_date), "No", "Yes") %>%
factor() %>%
ff_label("Transplant"),
)
# Covid status, counts and test dates ----
## First positive test date ----
data_patient = data_patient %>%
left_join(
data_testing %>%
filter(result == "Positive") %>%
group_by(patient_id) %>%
filter(row_number() == 1) %>%
select(patient_id, covid_pos_test_date_1 = test_date),
by = "patient_id"
)
## Count tests by result by period ----
data_patient = data_patient %>%
left_join(
data_testing %>%
mutate(
result_abr = if_else(result == "Positive", "pos", "neg"),
test_period = case_when(
test_date < tp_start_date ~ NA_character_,
test_date <= tp_end_date  ~ "tp", # Testing period
test_date <= study_end_date ~ "fup", # Follow-up period
TRUE ~ NA_character_
),
result_period = paste0(result_abr, "_", test_period)
) %>%
group_by(patient_id) %>%
count(result_period) %>%
pivot_wider(
names_from = result_period,
names_glue = "covid_test_{result_period}_count",
values_from = n,
),
by = "patient_id"
) %>%
replace_na(
list(covid_test_neg_tp_count = 0,
covid_test_pos_tp_count = 0,
covid_test_neg_fup_count = 0,
covid_test_pos_fup_count = 0)
) %>%
mutate(
covid_test_neg_tp_count = covid_test_neg_tp_count %>%
ff_label("Negative covid test count (testing period)"),
covid_test_pos_tp_count = covid_test_pos_tp_count %>%
ff_label("Positive covid test count (testing period)"),
covid_test_neg_fup_count = covid_test_neg_fup_count %>%
ff_label("Negative covid test count (follow-up period)"),
covid_test_pos_fup_count = covid_test_pos_fup_count %>%
ff_label("Positive covid test count (follow-up period)")
)
## Assign covid status ----
data_patient = data_patient %>%
mutate(
covid_status_tp = case_when(
covid_test_pos_tp_count > 0 ~ "Positive",
covid_test_neg_tp_count > 0 ~ "Negative",
TRUE ~ "Untested") %>%
factor() %>%
ff_label("SARS-CoV-2 status (testing period)"),
covid_status_fup = case_when(
covid_test_pos_fup_count > 0 ~ "Positive",
covid_test_neg_fup_count > 0 ~ "Negative",
TRUE ~ "Untested") %>%
factor() %>%
ff_label("SARS-CoV-2 status (follow-up period)"),
)
# Exclusion criteria variables ----
## Potential nosocomial infection ----
## Defined as a positive covid test after day 7 in hospital and on or before 7th
##  day following discharge
data_patient = data_patient %>%
left_join(
data_admissions %>%
left_join(
data_patient %>%
select(patient_id, covid_pos_test_date_1),
by = "patient_id") %>%
mutate(
covid_nosocomial = case_when(
# Length of stay less than 7 days: Not nosocomial
(discharge_date - admission_date) < 7 ~ NA_character_,
# Length of stay 7+ days: Nosocomial if positive after day 7 in hospital
# and on or before day 7 following discharge, otherwise not nosocomial
(admission_date + days(7) < covid_pos_test_date_1) &
(discharge_date + days(7) >= covid_pos_test_date_1) ~ "Yes",
TRUE ~ NA_character_
) %>%
ff_label("Nosocomial infection")) %>%
filter(covid_nosocomial == "Yes") %>%
select(patient_id, covid_nosocomial) %>%
group_by(patient_id) %>%
slice(1) %>%
ungroup(),
by = "patient_id"
) %>%
replace_na(list(covid_nosocomial = "No"))
## Discrepant test result ----
data_patient = data_patient %>%
left_join(
data_testing %>%
group_by(patient_id) %>%
mutate(
covid_test_pos_1 = first(test_date[result == "Positive"])
) %>%
ungroup() %>%
filter(test_date == covid_test_pos_1 & result == "Negative") %>%
mutate(covid_discrepant_test = "Yes") %>%
select(patient_id, covid_discrepant_test),
by = "patient_id"
) %>%
replace_na(list(covid_discrepant_test = "No"))
# Save data as rds ----
write_rds(data_patient,
here::here("output", "data", "data_patient.rds"),
compress="gz")
?crr
??crr
library(cmprsk)
library(cmprsk)
# simulated data to test
set.seed(10)
ftime <- rexp(200)
fstatus <- sample(0:2,200,replace=TRUE)
cov <- matrix(runif(600),nrow=200)
dimnames(cov)[[2]] <- c('x1','x2','x3')
print(z <- crr(ftime,fstatus,cov))
summary(z)
z.p <- predict(z,rbind(c(.1,.5,.8),c(.1,.5,.2)))
plot(z.p,lty=1,color=2:3)
crr(ftime,fstatus,cov,failcode=2)
# quadratic in time for first cov
crr(ftime,fstatus,cov,cbind(cov[,1],cov[,1]),function(Uft) cbind(Uft,Uft^2))
#additional examples in test.R
library(cmprsk)
# simulated data to test
set.seed(10)
ftime <- rexp(200)
fstatus <- sample(0:2,200,replace=TRUE)
cov <- matrix(runif(600),nrow=200)
dimnames(cov)[[2]] <- c('x1','x2','x3')
print(z <- crr(ftime,fstatus,cov))
summary(z)
library(cmprsk)
# simulated data to test
set.seed(10)
ftime <- rexp(200)
fstatus <- sample(0:2,200,replace=TRUE)
cov <- matrix(runif(600),nrow=200)
dimnames(cov)[[2]] <- c('x1','x2','x3')
z = crr(ftime,fstatus,cov)
summary(z)
library(cmprsk)
# simulated data to test
set.seed(10)
ftime <- rexp(200)
fstatus <- sample(0:2,200,replace=TRUE)
cov <- matrix(runif(600),nrow=200)
dimnames(cov)[[2]] <- c('x1','x2','x3')
z = crr(ftime,fstatus,cov)
summary(z)
# linear in time for first cov
z_t = crr(ftime,fstatus,cov,cbind(cov[,1]),function(Uft) cbind(Uft))
summary(z_t)
# linear in time for first cov
cov2 = cov[,1]
z_t = crr(ftime,fstatus,cov,cov2,function(Uft) cbind(Uft))
summary(z_t)
tf = function(Uft, ...){Uft}
z_t = crr(ftime,fstatus,cov,cov2, tf = tf)
summary(z_t)
tf = function(Uft, ...){Uft*x}
z_t = crr(ftime,fstatus,cov,cov2, tf = tf, x = 10)
z_t = crr(ftime,fstatus,cov,cov2, tf = tf)
x = 10
z_t = crr(ftime,fstatus,cov,cov2, tf = tf)
summary(z_t)
x = 0
x = 0
z_t = crr(ftime,fstatus,cov,cov2, tf = tf)
View(crr)
??survfit
MGUS
mgus2
mgus2
mgus2 = mgus2
mgus2 = mgus2
View(mgus2)
cfit1 <- coxph(Surv(etime, event) ~ age + sex + mspike, mgus2, id=id)
etime <- with(mgus2, ifelse(pstat==0, futime, ptime))
event <- with(mgus2, ifelse(pstat==0, 2*death, 1))
event <- factor(event, 0:2, labels=c("censor", "pcm", "death"))
table(event)
cfit1 <- coxph(Surv(etime, event) ~ age + sex + mspike, mgus2, id=id)
summary(cfit1)
cfit1 <- coxph(Surv(etime, event) ~ age + sex + mspike, mgus2)
event
library(cmprsk)
library(finalfit)
library(survival)
library(tidyverse)
melanoma
boot::melanoma
finalfit::melanoma
finalfit::melanoma_clean
library(cmprsk)
library(finalfit)
library(survival)
library(tidyverse)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour")
)
explanatory = c("age", "sex", "thickness", "ulcer")
dependent_dss = "Surv(time, status_dss)"
dependent_crr = "Surv(time, status_crr)"
model_crr = melanoma %>%
crrmulti(dependent_crr, explanatory)
library(cmprsk)
library(finalfit)
library(survival)
library(tidyverse)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour")
)
explanatory = c("age", "sex", "thickness", "ulcer")
dependent_dss = "Surv(time, status_dss)"
dependent_crr = "Surv(time, status_crr)"
model_crr = melanoma %>%
crrmulti(dependent_crr, explanatory)
summary(model_crr)
cfit1 <- coxph(Surv(time, status_crr) ~ age + sex + thickness + ulcer, melanoma, id=id)
summary(cfit1)
View(melanoma)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour")
id = row_number()
)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour"),
id = row_number()
)
cfit1 <- coxph(Surv(time, status_crr) ~ age + sex + thickness + ulcer, melanoma, id=id)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
status_crr.factor = status_crr %>% factor(),
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour"),
id = row_number()
)
cfit1 <- coxph(Surv(time, status_crr.factor) ~ age + sex + thickness + ulcer, melanoma, id=id)
summary(cfit1)
summary(model_crr)
summary(cfit1)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
status_crr.factor = status_crr %>%
factor() %>%
fct_recode("Censor" = "0", "Melanoma" = "1", "Other" = "2"),
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour"),
id = row_number()
)
library(cmprsk)
library(finalfit)
library(survival)
library(tidyverse)
melanoma = boot::melanoma %>%
mutate(
# Overall survival
status_os = ifelse(status == 2, 0, # "still alive"
1), # "died of melanoma" or "died of other causes"
# Diease-specific survival
status_dss = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~  0),     # "died of other causes is censored"
# Competing risks regression
status_crr = case_when(
status == 2 ~ 0, # "still alive"
status == 1 ~ 1, # "died of melanoma"
TRUE ~ 2),       # "died of other causes"
status_crr.factor = status_crr %>%
factor() %>%
fct_recode("Censor" = "0", "Melanoma" = "1", "Other" = "2"),
# Label and recode other variables
age = ff_label(age, "Age (years)"), # ff_label to make table friendly var labels
thickness = ff_label(thickness, "Tumour thickness (mm)"), # ff_label to make table friendly var labels
sex = factor(sex) %>%
fct_recode("Male" = "1",
"Female" = "0") %>%
ff_label("Sex"),
ulcer = factor(ulcer) %>%
fct_recode("No" = "0",
"Yes" = "1") %>%
ff_label("Ulcerated tumour"),
id = row_number()
)
explanatory = c("age", "sex", "thickness", "ulcer")
dependent_dss = "Surv(time, status_dss)"
dependent_crr = "Surv(time, status_crr)"
model_crr = melanoma %>%
crrmulti(dependent_crr, explanatory)
summary(model_crr)
cfit1 <- coxph(Surv(time, status_crr.factor) ~ age + sex + thickness + ulcer, melanoma, id=id)
summary(cfit1)
summary(model_crr)
summary(cfit1)
model_cox = melanoma %>%
coxphmulti(dependent_crr, explanatory)
model_cox = melanoma %>%
coxphmulti("Surv(time, status_crr.factor)", explanatory)
model_cox = melanoma %>%
coxphmulti("Surv(time, status_crr.factor)", explanatory, id=id)
?coxphmulti
?coxphmulti
view(coxphmulti)
View(coxphmulti())
View(coxphmulti
)
View(ff_eval)
?coxph
