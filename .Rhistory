distinct(patient_id, gp_date) %>%
count(patient_id) %>%
rename(n_gp = n),
by = "patient_id"
) %>%
replace_na(list(n_gp = 0))
# Calculate weighting ----
## Predictors
weight_variables = c(
# Demographics
"age_group", "sex", "ethnicity", "imd_Q5_2019",
"region_2019", "rural_urban_2019",
# Comorbidities
"comorbidity_count.factor",
"asthma", "cancer", "cerebral_palsy", "chronic_infections", "cystic_fibrosis",
"devices_and_stomas", "diabetes", "endocrine_disorders",
"epilepsy", "gastrointestinal_disorders", "haematological_disorders",
"immunological_disorders", "learning_and_behaviour_difficulties",
"mental_illness", "musculoskeletal_and_rheum",
"severe_mental_illness", "transplant",
# Resource use and covid testing
"n_covid_tests",
"n_beddays", "n_outpatient", "n_gp"
)
## Model forumla ----
model_formula = paste0("covid_status_tp ~ ",
paste(weight_variables, collapse = " + ")) %>%
as.formula()
## Using WeightIt to generate weights with multinomial logistic regression ----
data_weights = weightit(model_formula,
data = data_matched,
method = "ps",
use.mlogit = FALSE)
data_weights$weights[1:20]
data_weights = weightit(model_formula,
data = data_matched,
method = "ps",
use.mlogit = TRUE)
install.packages("mlogit")
?---------------------------
Question
---------------------------
Do you want to install from sources the packages which need compilation?
---------------------------
Yes   No   Cancel
---------------------------No
View(weightit)
library(dplyr)
# ICD-10 ----
## Asthma ----
codelist_icd10_asthma = read.csv(
"analysis/codelists/icd10_asthma.csv"
)
View(codelist_icd10_asthma)
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
# Load .csv codelists
# 00_load_codelists.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
#
# This script loads .csv codelists into the R environment
library(dplyr)
# 1. Mental health disorders ----
## Mental illness ----
codelist_icd10_mental_illness = read.csv("analysis/codelists/icd10_mental_illness.csv") %>%
pull(code)
## Severe mental illness ----
codelist_icd10_severe_mental_illness = read.csv("analysis/codelists/icd10_severe_mental_illness.csv") %>%
pull(code)
# 2. Neurodevelopmental and behavioural conditions ----
codelist_icd10_behavioural_and_developmental_including_autism =
read.csv("analysis/codelists/icd10_behavioural_and_developmental_including_autism.csv") %>%
pull(code)
# 3. Asthma ----
codelist_icd10_asthma = read.csv("analysis/codelists/icd10_asthma.csv") %>%
pull(code)
# 4. Cystic fibrosis ----
codelist_icd10_cystic_fibrosis = read.csv("analysis/codelists/icd10_cystic_fibrosis.csv") %>%
pull(code)
# 5. Other respiratory ----
## Congenital respiratory conditions ----
codelist_icd10_resp_congenital = read.csv("analysis/codelists/icd10_resp_congenital.csv") %>%
pull(code)
## Respiratory devices ----
codelist_icd10_resp_devices = read.csv("analysis/codelists/icd10_resp_devices.csv") %>%
pull(code)
## Respiratory (not asthma or cystic fibrosis) ----
codelist_icd10_respiratory_not_asthma_or_cf =
read.csv("analysis/codelists/icd10_respiratory_not_asthma_or_cf.csv") %>%
pull(code)
# 6. Cardiovascular conditions ----
## Cardiovascular congenital ----
codelist_icd10_cardiovascular_congenital =
read.csv("analysis/codelists/icd10_cardiovascular_congenital.csv") %>%
pull(code)
## Cardiovascular devices ----
codelist_icd10_cardiovascular_devices =
read.csv("analysis/codelists/icd10_cardiovascular_devices.csv") %>%
pull(code)
## Cardiovascular (non-congenital) ----
codelist_icd10_cardiovascular_non_congenital =
read.csv("analysis/codelists/icd10_cardiovascular_non_congenital.csv") %>%
pull(code)
# 7. Epilepsy ----
codelist_icd10_epilepsy =
read.csv("analysis/codelists/icd10_epilepsy.csv") %>%
pull(code)
# 8. Headaches ----
codelist_icd10_headaches =
read.csv("analysis/codelists/icd10_headaches.csv") %>%
pull(code)
# 9. Other neurological ----
## Cerebral palsy or paralysis ----
codelist_icd10_cerebral_palsy_paralysis =
read.csv("analysis/codelists/icd10_cerebral_palsy_paralysis.csv") %>%
pull(code)
## Congenital neuro ----
codelist_icd10_congenital_neuro =
read.csv("analysis/codelists/icd10_congenital_neuro.csv") %>%
pull(code)
## Neuro devices ----
codelist_icd10_neuro_devices =
read.csv("analysis/codelists/icd10_neuro_devices.csv") %>%
pull(code)
## Neurological (no epilepsy, cp or headaches) ----
codelist_icd10_neurological_no_epilepsy_or_cp_headaches =
read.csv("analysis/codelists/icd10_neurological_no_epilepsy_or_cp_headaches.csv") %>%
pull(code)
# 10. Gastrointestinal conditions ----
## Gastrointestinal (non-device) ----
codelist_icd10_gastrointestinal =
read.csv("analysis/codelists/icd10_gastrointestinal.csv") %>%
pull(code)
## Gastrointestinal (devices) ----
codelist_icd10_gastrointestinal_devices =
read.csv("analysis/codelists/icd10_gastrointestinal_devices.csv") %>%
pull(code)
# 11. Genitourinary conditions ----
## Congenital renal ----
codelist_icd10_congenital_renal =
read.csv("analysis/codelists/icd10_congenital_renal.csv") %>%
pull(code)
## Congenital urogenital ----
codelist_icd10_congenital_urogenital =
read.csv("analysis/codelists/icd10_congenital_urogenital.csv") %>%
pull(code)
## Genitourinary non congenital ----
codelist_icd10_genitourinary_non_congenital =
read.csv("analysis/codelists/icd10_genitourinary_non_congenital.csv") %>%
pull(code)
## Renal devices ----
codelist_icd10_renal_devices =
read.csv("analysis/codelists/icd10_renal_devices.csv") %>%
pull(code)
# 12. Cancer ----
codelist_icd10_cancer =
read.csv("analysis/codelists/icd10_cancer.csv") %>%
pull(code)
# 13. Non-malignant haematological conditions ----
codelist_icd10_haematology =
read.csv("analysis/codelists/icd10_haematology.csv") %>%
pull(code)
# 14. Immunological conditions ----
codelist_icd10_immunological =
read.csv("analysis/codelists/icd10_immunological.csv") %>%
pull(code)
# 15. Chronic infections ----
codelist_icd10_chronic_infections =
read.csv("analysis/codelists/icd10_chronic_infections.csv") %>%
pull(code)
# 16. Rheumatology ----
codelist_icd10_rheumatology =
read.csv("analysis/codelists/icd10_rheumatology.csv") %>%
pull(code)
# 17. Other congenital multisystem syndromes and chromosomal abnormalities ----
codelist_icd10_congenital_malformation_syndromes_and_chromosomal =
read.csv("analysis/codelists/icd10_congenital_malformation_syndromes_and_chromosomal.csv") %>%
pull(code)
# 18. Diabetes ----
codelist_icd10_diabetes =
read.csv("analysis/codelists/icd10_diabetes.csv") %>%
pull(code)
# 19. Other endocrine ----
## Congenital endocrine ----
codelist_icd10_congenital_endocrine =
read.csv("analysis/codelists/icd10_congenital_endocrine.csv") %>%
pull(code)
## Endocrine (no dm) ----
codelist_icd10_endocrine_no_dm =
read.csv("analysis/codelists/icd10_endocrine_no_dm.csv") %>%
pull(code)
# 20. Metabolic conditions ----
codelist_icd10_metabolic =
read.csv("analysis/codelists/icd10_metabolic.csv") %>%
pull(code)
# 21. Obesity ----
codelist_icd10_obesity =
read.csv("analysis/codelists/icd10_obesity.csv") %>%
pull(code)
# 22. Transplant ----
codelist_icd10_transplant =
read.csv("analysis/codelists/icd10_transplant.csv") %>%
pull(code)
# 23. Palliative care ----
codelist_icd10_palliative_care =
read.csv("analysis/codelists/icd10_palliative_care.csv") %>%
pull(code)
## All in list ----
icd_10_codelist = list(
asthma = codelist_icd10_asthma,
behavioural_and_developmental_including_autism = codelist_icd10_behavioural_and_developmental_including_autism,
cancer = codelist_icd10_cancer,
cardiovascular_congenital = codelist_icd10_cardiovascular_congenital,
cardiovascular_devices = codelist_icd10_cardiovascular_devices,
cardiovascular_non_congenital = codelist_icd10_cardiovascular_non_congenital,
cerebral_palsy_paralysis = codelist_icd10_cerebral_palsy_paralysis,
chronic_infections = codelist_icd10_chronic_infections,
congenital_endocrine = codelist_icd10_congenital_endocrine,
congenital_malformation_syndromes_and_chromosomal = codelist_icd10_congenital_malformation_syndromes_and_chromosomal,
congenital_neuro = codelist_icd10_congenital_neuro,
congenital_renal = codelist_icd10_congenital_renal,
congenital_urogenital = codelist_icd10_congenital_urogenital,
cystic_fibrosis = codelist_icd10_cystic_fibrosis,
diabetes = codelist_icd10_diabetes,
endocrine_no_dm = codelist_icd10_endocrine_no_dm,
epilepsy = codelist_icd10_epilepsy,
gastrointestinal_devices = codelist_icd10_gastrointestinal_devices,
gastrointestinal = codelist_icd10_gastrointestinal,
genitourinary_non_congenital = codelist_icd10_genitourinary_non_congenital,
haematology = codelist_icd10_haematology,
headaches = codelist_icd10_headaches,
immunological = codelist_icd10_immunological,
mental_illness = codelist_icd10_mental_illness,
neuro_devices = codelist_icd10_neuro_devices,
neurological_no_epilepsy_or_cp_headaches = codelist_icd10_neurological_no_epilepsy_or_cp_headaches,
palliative_care = codelist_icd10_palliative_care,
renal_devices = codelist_icd10_renal_devices,
resp_congenital = codelist_icd10_resp_congenital,
resp_devices = codelist_icd10_resp_devices,
respiratory_not_asthma_or_cf = codelist_icd10_respiratory_not_asthma_or_cf,
rheumatology = codelist_icd10_rheumatology,
severe_mental_illness = codelist_icd10_severe_mental_illness,
transplant = codelist_icd10_transplant
)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_load_codelists.R"))
# Load patient data from csv file ----
data_patient = here::here("output", "input.csv.gz") %>%
read_csv(col_types = read_column_type(.))
# Load admission and testing datasets ----
data_admissions = readRDS(here::here("output", "data", "data_admissions.rds"))
data_testing    = readRDS(here::here("output", "data", "data_testing.rds"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
# Update first and last comorbidity dates with info from admissions data ----
data_patient = icd_10_codelist %>%
map2(as.list(names(icd_10_codelist)), function(.icd_10_codelist, .comorb_vars){
# Filter for admissions with primary diagnosis in codelist ----
icd_10_first_last_dates = data_admissions %>%
filter(primary_diagnosis %in% .icd_10_codelist) %>%
group_by(patient_id) %>%
# Extract first/last ----
summarise(
icd10_first_date = first(admission_date),
icd10_last_date = last(admission_date)
)
# Comorbidity first and last date variable names
snomed_first_date = paste0(.comorb_vars, "_first_date")
snomed_last_date  = paste0(.comorb_vars, "_last_date")
data_patient %>%
select(patient_id, snomed_first_date = all_of(snomed_first_date),
snomed_last_date = all_of(snomed_last_date)) %>%
left_join(icd_10_first_last_dates, by = "patient_id") %>%
mutate(
# Select minimum first date and max for last date
new_first_date = pmin(snomed_first_date, icd10_first_date, na.rm = TRUE),
new_last_date  = pmax(snomed_last_date,  icd10_last_date,  na.rm = TRUE),
) %>%
select(-c(snomed_first_date, snomed_last_date, icd10_first_date, icd10_last_date)) %>%
rename({{snomed_first_date}} := new_first_date,
{{snomed_last_date}} := new_last_date)
}) %>%
reduce(full_join, by = "patient_id") %>%
right_join(
data_patient %>%
select(-contains(names(icd_10_codelist))),
by = "patient_id"
)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_load_codelists.R"))
# Load patient data from csv file ----
data_patient = here::here("output", "input.csv.gz") %>%
read_csv(col_types = read_column_type(.))
# Load admission and testing datasets ----
data_admissions = readRDS(here::here("output", "data", "data_admissions.rds"))
data_testing    = readRDS(here::here("output", "data", "data_testing.rds"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
# Update first and last comorbidity dates with info from admissions data ----
data_patient = icd_10_codelist %>%
map2(as.list(names(icd_10_codelist)), function(.icd_10_codelist, .comorb_vars){
# Filter for admissions with primary diagnosis in codelist ----
icd_10_first_last_dates = data_admissions %>%
filter(primary_diagnosis %in% .icd_10_codelist) %>%
group_by(patient_id) %>%
# Extract first/last ----
summarise(
icd10_first_date = first(admission_date),
icd10_last_date = last(admission_date)
)
# Comorbidity first and last date variable names
snomed_first_date = paste0(.comorb_vars, "_first_date")
snomed_last_date  = paste0(.comorb_vars, "_last_date")
data_patient %>%
select(patient_id, snomed_first_date = all_of(snomed_first_date),
snomed_last_date = all_of(snomed_last_date)) %>%
left_join(icd_10_first_last_dates, by = "patient_id") %>%
mutate(
# Select minimum first date and max for last date
new_first_date = pmin(snomed_first_date, icd10_first_date, na.rm = TRUE),
new_last_date  = pmax(snomed_last_date,  icd10_last_date,  na.rm = TRUE),
) %>%
select(-c(snomed_first_date, snomed_last_date, icd10_first_date, icd10_last_date)) %>%
rename({{snomed_first_date}} := new_first_date,
{{snomed_last_date}} := new_last_date)
}) %>%
reduce(full_join, by = "patient_id") %>%
right_join(
data_patient %>%
select(-contains(names(icd_10_codelist))),
by = "patient_id"
)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_load_codelists.R"))
# Load patient data from csv file ----
data_patient = here::here("output", "input.csv.gz") %>%
read_csv(col_types = read_column_type(.))
# Load admission and testing datasets ----
data_admissions = readRDS(here::here("output", "data", "data_admissions.rds"))
data_testing    = readRDS(here::here("output", "data", "data_testing.rds"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
# Update first and last comorbidity dates with info from admissions data ----
data_patient = icd_10_codelist %>%
map2(as.list(names(icd_10_codelist)), function(.icd_10_codelist, .comorb_vars){
# Filter for admissions with primary diagnosis in codelist ----
icd_10_first_last_dates = data_admissions %>%
filter(primary_diagnosis %in% .icd_10_codelist) %>%
group_by(patient_id) %>%
# Extract first/last ----
summarise(
icd10_first_date = first(admission_date),
icd10_last_date = last(admission_date)
)
# Comorbidity first and last date variable names
snomed_first_date = paste0(.comorb_vars, "_first_date")
snomed_last_date  = paste0(.comorb_vars, "_last_date")
data_patient %>%
select(patient_id, snomed_first_date = all_of(snomed_first_date),
snomed_last_date = all_of(snomed_last_date)) %>%
left_join(icd_10_first_last_dates, by = "patient_id") %>%
mutate(
# Select minimum first date and max for last date
new_first_date = pmin(snomed_first_date, icd10_first_date, na.rm = TRUE),
new_last_date  = pmax(snomed_last_date,  icd10_last_date,  na.rm = TRUE),
) %>%
select(-c(snomed_first_date, snomed_last_date, icd10_first_date, icd10_last_date)) %>%
rename({{snomed_first_date}} := new_first_date,
{{snomed_last_date}} := new_last_date)
}) %>%
reduce(full_join, by = "patient_id") %>%
right_join(
data_patient %>%
select(-contains(names(icd_10_codelist))),
by = "patient_id"
)
View(data_admissions)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_load_codelists.R"))
# Load patient data from csv file ----
data_patient = here::here("output", "input.csv.gz") %>%
read_csv(col_types = read_column_type(.))
data_patient %>% filter(patient_id %in% c(4194, 8290)) %>% select(patient_id, asthma_first_date, asthma_last_date)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_load_codelists.R"))
# Load patient data from csv file ----
data_patient = here::here("output", "input.csv.gz") %>%
read_csv(col_types = read_column_type(.))
# Load admission and testing datasets ----
data_admissions = readRDS(here::here("output", "data", "data_admissions.rds"))
data_testing    = readRDS(here::here("output", "data", "data_testing.rds"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
# Update first and last comorbidity dates with info from admissions data ----
data_patient = icd_10_codelist %>%
map2(as.list(names(icd_10_codelist)), function(.icd_10_codelist, .comorb_vars){
# Filter for admissions with primary diagnosis in codelist ----
icd_10_first_last_dates = data_admissions %>%
filter(primary_diagnosis %in% .icd_10_codelist) %>%
group_by(patient_id) %>%
# Extract first/last ----
summarise(
icd10_first_date = first(admission_date),
icd10_last_date = last(admission_date)
)
# Comorbidity first and last date variable names
snomed_first_date = paste0(.comorb_vars, "_first_date")
snomed_last_date  = paste0(.comorb_vars, "_last_date")
data_patient %>%
select(patient_id, snomed_first_date = all_of(snomed_first_date),
snomed_last_date = all_of(snomed_last_date)) %>%
left_join(icd_10_first_last_dates, by = "patient_id") %>%
mutate(
# Select minimum first date and max for last date
new_first_date = pmin(snomed_first_date, icd10_first_date, na.rm = TRUE),
new_last_date  = pmax(snomed_last_date,  icd10_last_date,  na.rm = TRUE),
) %>%
select(-c(snomed_first_date, snomed_last_date, icd10_first_date, icd10_last_date)) %>%
rename({{snomed_first_date}} := new_first_date,
{{snomed_last_date}} := new_last_date)
}) %>%
reduce(full_join, by = "patient_id") %>%
right_join(
data_patient %>%
select(-contains(names(icd_10_codelist))),
by = "patient_id"
)
data_patient %>% filter(patient_id %in% c(4194, 8290)) %>% select(patient_id, asthma_first_date, asthma_last_date)
View(data_admissions)
data_patient %>% filter(patient_id %in% c(4194, 8290, 8967, 9805, 11774, 15137, 18587)) %>% select(patient_id, asthma_first_date, asthma_last_date)
paste0("T", 36:50)
sprintf("%s%02d", "D",  0:49)
"20: External causes (excluding self-harm)" %>%
str_to_lower() %>%
str_replace_all(":", "") %>%
str_replace_all(",", "") %>%
str_replace_all("\\(", "") %>%
str_replace_all("\\)", "") %>%
str_replace_all("-", "_") %>%
str_replace_all(" ", "_")
"19: Injury and poisoning (excluding poisoning by drugs)" %>%
+     str_to_lower() %>%
+     str_replace_all(":", "") %>%
+     str_replace_all(",", "") %>%
+     str_replace_all("\\(", "") %>%
+     str_replace_all("\\)", "") %>%
+     str_replace_all("-", "_") %>%
+     str_replace_all(" ", "_")
"19: Injury and poisoning (excluding poisoning by drugs)" %>%
str_to_lower() %>%
str_replace_all(":", "") %>%
str_replace_all(",", "") %>%
str_replace_all("\\(", "") %>%
str_replace_all("\\)", "") %>%
str_replace_all("-", "_") %>%
str_replace_all(" ", "_")
