...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 100
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 1 + if_else(year == "2020", -0.5, 0) +
if_else(comorb == "Yes", 1, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 100
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 1 + if_else(year == "2020", -0.5, 0) +
if_else(comorb == "Yes", 1, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 1000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 1 + if_else(year == "2020", -0.5, 0) +
if_else(comorb == "Yes", 1, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 1000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 1 + if_else(year == "2020", -0.5, 0) +
if_else(comorb == "Yes", 1, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 10000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 1 + if_else(year == "2020", -0.5, 0) +
if_else(comorb == "Yes", 1, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit %>% summary()
View(df)
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 10000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 1 + if_else(year == "2020", -0.5, 0) +
if_else(comorb == "Yes", 3, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit %>% summary()
fit = glm(contact ~ year*comorb, data = df, family = "poisson")
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 10000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 3 + if_else(year == "2020", -1, 0) +
if_else(comorb == "Yes", 3, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit = glm(contact ~ year*comorb, data = df, family = "poisson")
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 100000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = 3 + if_else(year == "2020", -1, 0) +
if_else(comorb == "Yes", 3, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit = glm(contact ~ year*comorb, data = df, family = "poisson")
fit %>% summary()
View(df)
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 10000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = exp(3 + if_else(year == "2020", -1, 0) +
if_else(comorb == "Yes", 3, 0))
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
#fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit = glm(contact ~ year*comorb, data = df, family = "poisson")
fit %>% summary()
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
library(tidyverse)
n_patient = 1000
df = tibble(
year = sample(c(2019, 2020), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = exp(3 + if_else(year == "2020", -1, 0) +
if_else(comorb == "Yes", 3, 0))
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
#fit = MASS::glm.nb(contact ~ year*comorb, data = df)
fit = glm(contact ~ year*comorb, data = df, family = "poisson")
fit %>% summary()
fit = MASS::glm.nb(contact ~ year*comorb, data = df)
#fit = glm(contact ~ year*comorb, data = df, family = "poisson")
fit %>% summary()
fit_pois = glm(contact ~ year*comorb, data = df, family = "poisson")
fit_MASS = MASS::glm.nb(contact ~ year*comorb, data = df)
fit_pois %>% summary()
fit_MASS %>% summary()
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes"),
eform=TRUE)
View(biostat3::format_perc())
View(biostat3::format_perc)
format_perc = function (probs, digits){
paste(format(100 * probs, trim = TRUE, scientific = FALSE, digits = digits),
"%")
}
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes"),
eform=TRUE)
linearHypothesis(fit_pois)
car::linearHypothesis(fit_pois)
car::linearHypothesis(fit_pois, c("year = 2020"))
car::linearHypothesis(fit_pois, c("year = 2020", "comorb = Yes"))
car::linearHypothesis(fit_pois, diag(2), c(0,1))
car::linearHypothesis(fit_pois, diag(2), c(1,1))
car::linearHypothesis(fit_pois, diag(3), c(1,1))
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes"))
fit_pois %>% summary()
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes"))
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
format_perc = function (probs, digits){
paste(format(100 * probs, trim = TRUE, scientific = FALSE, digits = digits),
"%")
}
library(tidyverse)
n_patient = 1000
df = tibble(
year = sample(c(2019, 2020, 2021), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = exp(3 + if_else(year == "2020", -1, 0) + if_else(year == "2021", -0.5, 0) +
if_else(comorb == "Yes", 3, 0)) + if_else(year == "2021" & comorb == "Yes", +0.2, 0)
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit_pois = glm(contact ~ year*comorb, data = df, family = "poisson")
fit_MASS = MASS::glm.nb(contact ~ year*comorb, data = df)
fit_pois %>% summary()
fit_MASS %>% summary()
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes"))
# lincom (from biostat3 V0.1.6) - calculate a linear combination of regression parameters.
lincom = function (model, specification, level = 0.95, eform = FALSE,
...)
{
stopifnot(requireNamespace("car"))
if (length(specification) > 1)
return(t(sapply(specification, function(spec) lincom(model,
spec, level, eform, ...))))
x <- car::linearHypothesis(model, specification, ...)
cf <- as.vector(attr(x, "value"))
ses <- sqrt(as.vector(attr(x, "vcov")))
a <- (1 - level)/2
a <- c(a, 1 - a)
pct <- format_perc(a, 3)
fac <- qnorm(a)
ci <- cbind(cf, cf + ses %o% fac)
if (eform)
ci <- exp(ci)
dimnames(ci) <- list(specification, c("Estimate", pct))
cbind(ci, x[-1, 3:4])
}
format_perc = function (probs, digits){
paste(format(100 * probs, trim = TRUE, scientific = FALSE, digits = digits),
"%")
}
library(tidyverse)
n_patient = 1000
df = tibble(
year = sample(c(2019, 2020, 2021), n_patient, replace = TRUE) %>%
factor(),
comorb = sample(c("No", "Yes"), n_patient, replace = TRUE) %>%
factor(),
lambda = exp(3 + if_else(year == "2020", -1, 0) + if_else(year == "2021", -0.5, 0) +
if_else(comorb == "Yes", 3, 0) + if_else(year == "2021" & comorb == "Yes", 0.2, 0))
) %>%
rowwise() %>%
mutate(
contact = rpois(1, lambda)
) %>%
ungroup()
fit_pois = glm(contact ~ year*comorb, data = df, family = "poisson")
fit_MASS = MASS::glm.nb(contact ~ year*comorb, data = df)
fit_pois %>% summary()
fit_MASS %>% summary()
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes"))
lincom(fit_pois, c("year2020+comorbYes+year2020:comorbYes",
"year2021+comorbYes+year2021:comorbYes"))
lincom(fit_MASS, c("year2020+comorbYes+year2020:comorbYes",
"year2021+comorbYes+year2021:comorbYes"))
?lme4::glmer()
View(df)
?furrr::future_map()
interaction(c("a", "b"), c("x", "y"))
interaction(c("a", "a", "b", "b"), c("x", "y", "x", "y"))
