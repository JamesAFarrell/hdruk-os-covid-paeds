# Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Random sample ----
set.seed(4192875)
n_positive_sample = 5000
# Load patient data ----
data_patient    = read_rds(here::here("output", "data", "data_patient.rds"))
# Calculate time dependendt variables on test date
# (age, comorbidity, vaccination, death)
data_patient = data_patient %>%
calc_indexed_variables(data_patient %>% pull(covid_test_date_pos_tp))
# Calculate follow-up/censor dates, duration and events -----
data_patient = data_patient %>%
mutate(
follow_up_start_date = covid_test_date_pos_tp + days(15),
max_follow_up_end_date = follow_up_start_date + days(364),
censor_date = pmin(study_end_date,
max_follow_up_end_date,
death_date,
na.rm = TRUE),
censor_event = case_when(
censor_date == max_follow_up_end_date ~ "Maximum follow-up duration",
censor_date == study_end_date ~ "Study end",
censor_date == death_date ~ "Died",
),
follow_up_days = (censor_date - follow_up_start_date) %>%
as.numeric()
)
# Create inclusion flowchart data ----
data_inclusion = data_patient %>%
transmute(
patient_id,
tested_positive = covid_status_tp == "Positive",
not_nosocomial = covid_nosocomial == "No",
no_discrepant_results = covid_discrepant_test == "No",
age_between_4_and_17 = (age >= 4) & (age < 18),
alive_on_test_date = death == "No",
minimum_90_days_follow_up = follow_up_days >= 90
) %>%
replace_na(
list(age_between_4_and_17 = FALSE,
minimum_90_days_follow_up = FALSE))
View(data_inclusion)
View(data_inclusion)
data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(include_flag = all(value))
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(include_flag = all(value))
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample)
random_sample
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE)
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) #%>%
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE)
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(random_selcted = TRUE)
# Randomly sample from patients satisfying inclusion ----
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(randomly_sampled = TRUE)
randomly_sampled
# Randomly sample from patients satisfying inclusion ----
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(randomly_sampled = TRUE)
data_inclusion = data_inclusion %>%
left_join(random_sample %>%
select(patient_id, randomly_sampled), by = "patient_id")
# Create inclusion flowchart data ----
data_inclusion = data_patient %>%
transmute(
patient_id,
tested_positive = covid_status_tp == "Positive",
not_nosocomial = covid_nosocomial == "No",
no_discrepant_results = covid_discrepant_test == "No",
age_between_4_and_17 = (age >= 4) & (age < 18),
alive_on_test_date = death == "No",
minimum_90_days_follow_up = follow_up_days >= 90
) %>%
replace_na(
list(age_between_4_and_17 = FALSE,
minimum_90_days_follow_up = FALSE))
# Randomly sample from patients satisfying inclusion ----
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(randomly_sampled = TRUE)
data_inclusion = data_inclusion %>%
left_join(random_sample %>%
select(patient_id, randomly_sampled), by = "patient_id") %>%
replace_na(list(randomly_sampled = FALSE))
View(data_inclusion)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
# Output directories ----
dir.create(here::here("output", "data"),
showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "positive_cohort"),
showWarnings = FALSE, recursive=TRUE)
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Random sample ----
set.seed(4192875)
n_positive_sample = 5000
# Load patient data ----
data_patient    = read_rds(here::here("output", "data", "data_patient.rds"))
# Calculate time dependendt variables on test date
# (age, comorbidity, vaccination, death)
data_patient = data_patient %>%
calc_indexed_variables(data_patient %>% pull(covid_test_date_pos_tp))
# Calculate follow-up/censor dates, duration and events -----
data_patient = data_patient %>%
mutate(
follow_up_start_date = covid_test_date_pos_tp + days(15),
max_follow_up_end_date = follow_up_start_date + days(364),
censor_date = pmin(study_end_date,
max_follow_up_end_date,
death_date,
na.rm = TRUE),
censor_event = case_when(
censor_date == max_follow_up_end_date ~ "Maximum follow-up duration",
censor_date == study_end_date ~ "Study end",
censor_date == death_date ~ "Died",
),
follow_up_days = (censor_date - follow_up_start_date) %>%
as.numeric()
)
# Create inclusion flowchart data ----
data_inclusion = data_patient %>%
transmute(
patient_id,
tested_positive = covid_status_tp == "Positive",
not_nosocomial = covid_nosocomial == "No",
no_discrepant_results = covid_discrepant_test == "No",
age_between_4_and_17 = (age >= 4) & (age < 18),
alive_on_test_date = death == "No",
minimum_90_days_follow_up = follow_up_days >= 90
) %>%
replace_na(
list(age_between_4_and_17 = FALSE,
minimum_90_days_follow_up = FALSE))
# Randomly sample from patients satisfying inclusion ----
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(randomly_sampled = TRUE)
data_inclusion = data_inclusion %>%
left_join(random_sample %>%
select(patient_id, randomly_sampled), by = "patient_id") %>%
replace_na(list(randomly_sampled = FALSE))
# Create inclusion flowchart ----
flowchart = data_inclusion %>%
transmute(
patient_id,
c0 = TRUE,
c1 = c0 & tested_positive,
c2 = c1 & not_nosocomial,
c3 = c2 & no_discrepant_results,
c4 = c3 & alive_on_test_date,
c5 = c4 & age_between_4_and_17,
c6 = c5 & minimum_90_days_follow_up,
c7 = c6 & randomly_sampled
) %>%
select(-patient_id) %>%
summarise(across(.fns=sum)) %>%
mutate(pivot_col = "pivot") %>%
pivot_longer(
cols=-pivot_col,
names_to="criteria",
values_to="n"
) %>%
select(-pivot_col) %>%
mutate(
n = n #%>% plyr::round_any(count_round)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% scales::percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% scales::percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >0 and <18 years on 01 January 2019",
crit == "c1" ~ "-  Positive SARS-CoV-2 RT-PCR test during testing period",
crit == "c2" ~ "-  with no probable nosocomial infection",
crit == "c3" ~ "-  with no same-day discrepant RT-PCR test result",
crit == "c4" ~ "-  alive on test date",
crit == "c5" ~ "-  with age between 4 and 17 years inclusive on test date",
crit == "c6" ~ "-  with minimum 90 days follow-up",
crit == "c7" ~ "-  randomly sampled"
TRUE ~ NA_character_
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
# Output directories ----
dir.create(here::here("output", "data"),
showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "positive_cohort"),
showWarnings = FALSE, recursive=TRUE)
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Random sample ----
set.seed(4192875)
n_positive_sample = 5000
# Load patient data ----
data_patient    = read_rds(here::here("output", "data", "data_patient.rds"))
# Calculate time dependendt variables on test date
# (age, comorbidity, vaccination, death)
data_patient = data_patient %>%
calc_indexed_variables(data_patient %>% pull(covid_test_date_pos_tp))
# Calculate follow-up/censor dates, duration and events -----
data_patient = data_patient %>%
mutate(
follow_up_start_date = covid_test_date_pos_tp + days(15),
max_follow_up_end_date = follow_up_start_date + days(364),
censor_date = pmin(study_end_date,
max_follow_up_end_date,
death_date,
na.rm = TRUE),
censor_event = case_when(
censor_date == max_follow_up_end_date ~ "Maximum follow-up duration",
censor_date == study_end_date ~ "Study end",
censor_date == death_date ~ "Died",
),
follow_up_days = (censor_date - follow_up_start_date) %>%
as.numeric()
)
# Create inclusion flowchart data ----
data_inclusion = data_patient %>%
transmute(
patient_id,
tested_positive = covid_status_tp == "Positive",
not_nosocomial = covid_nosocomial == "No",
no_discrepant_results = covid_discrepant_test == "No",
age_between_4_and_17 = (age >= 4) & (age < 18),
alive_on_test_date = death == "No",
minimum_90_days_follow_up = follow_up_days >= 90
) %>%
replace_na(
list(age_between_4_and_17 = FALSE,
minimum_90_days_follow_up = FALSE))
# Randomly sample from patients satisfying inclusion ----
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(randomly_sampled = TRUE)
data_inclusion = data_inclusion %>%
left_join(random_sample %>%
select(patient_id, randomly_sampled), by = "patient_id") %>%
replace_na(list(randomly_sampled = FALSE))
# Create inclusion flowchart ----
flowchart = data_inclusion %>%
transmute(
patient_id,
c0 = TRUE,
c1 = c0 & tested_positive,
c2 = c1 & not_nosocomial,
c3 = c2 & no_discrepant_results,
c4 = c3 & alive_on_test_date,
c5 = c4 & age_between_4_and_17,
c6 = c5 & minimum_90_days_follow_up,
c7 = c6 & randomly_sampled
) %>%
select(-patient_id) %>%
summarise(across(.fns=sum)) %>%
mutate(pivot_col = "pivot") %>%
pivot_longer(
cols=-pivot_col,
names_to="criteria",
values_to="n"
) %>%
select(-pivot_col) %>%
mutate(
n = n #%>% plyr::round_any(count_round)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% scales::percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% scales::percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >0 and <18 years on 01 January 2019",
crit == "c1" ~ "-  Positive SARS-CoV-2 RT-PCR test during testing period",
crit == "c2" ~ "-  with no probable nosocomial infection",
crit == "c3" ~ "-  with no same-day discrepant RT-PCR test result",
crit == "c4" ~ "-  alive on test date",
crit == "c5" ~ "-  with age between 4 and 17 years inclusive on test date",
crit == "c6" ~ "-  with minimum 90 days follow-up",
crit == "c7" ~ "-  randomly sampled",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
## Format flowchart table ----
tbl_flowchart = flowchart %>%
select(criteria, n, n_exclude, pct_all, pct_exclude_step)
## Save flowchart table ----
write_csv(tbl_flowchart,
here::here("output", "descriptives", "positive_cohort",
"tbl_flowchart.csv"))
# Create inclusion flag and append to patient data ----
data_patient = data_patient %>%
left_join(data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(include_flag = all(value)),
by = "patient_id")
# Create positive cohort based on inclusion flag ----
data_positives = data_patient %>%
filter(include_flag)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
# Output directories ----
dir.create(here::here("output", "data"),
showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "positive_cohort"),
showWarnings = FALSE, recursive=TRUE)
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Random sample ----
set.seed(4192875)
n_positive_sample = 5
# Load patient data ----
data_patient    = read_rds(here::here("output", "data", "data_patient.rds"))
# Calculate time dependendt variables on test date
# (age, comorbidity, vaccination, death)
data_patient = data_patient %>%
calc_indexed_variables(data_patient %>% pull(covid_test_date_pos_tp))
# Calculate follow-up/censor dates, duration and events -----
data_patient = data_patient %>%
mutate(
follow_up_start_date = covid_test_date_pos_tp + days(15),
max_follow_up_end_date = follow_up_start_date + days(364),
censor_date = pmin(study_end_date,
max_follow_up_end_date,
death_date,
na.rm = TRUE),
censor_event = case_when(
censor_date == max_follow_up_end_date ~ "Maximum follow-up duration",
censor_date == study_end_date ~ "Study end",
censor_date == death_date ~ "Died",
),
follow_up_days = (censor_date - follow_up_start_date) %>%
as.numeric()
)
# Create inclusion flowchart data ----
data_inclusion = data_patient %>%
transmute(
patient_id,
tested_positive = covid_status_tp == "Positive",
not_nosocomial = covid_nosocomial == "No",
no_discrepant_results = covid_discrepant_test == "No",
age_between_4_and_17 = (age >= 4) & (age < 18),
alive_on_test_date = death == "No",
minimum_90_days_follow_up = follow_up_days >= 90
) %>%
replace_na(
list(age_between_4_and_17 = FALSE,
minimum_90_days_follow_up = FALSE))
# Randomly sample from patients satisfying inclusion ----
random_sample = data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(elegible_for_sample = all(value)) %>%
filter(elegible_for_sample) %>%
slice_sample(n = min(n_positive_sample, nrow(.)), replace = FALSE) %>%
mutate(randomly_sampled = TRUE)
data_inclusion = data_inclusion %>%
left_join(random_sample %>%
select(patient_id, randomly_sampled), by = "patient_id") %>%
replace_na(list(randomly_sampled = FALSE))
# Create inclusion flowchart ----
flowchart = data_inclusion %>%
transmute(
patient_id,
c0 = TRUE,
c1 = c0 & tested_positive,
c2 = c1 & not_nosocomial,
c3 = c2 & no_discrepant_results,
c4 = c3 & alive_on_test_date,
c5 = c4 & age_between_4_and_17,
c6 = c5 & minimum_90_days_follow_up,
c7 = c6 & randomly_sampled
) %>%
select(-patient_id) %>%
summarise(across(.fns=sum)) %>%
mutate(pivot_col = "pivot") %>%
pivot_longer(
cols=-pivot_col,
names_to="criteria",
values_to="n"
) %>%
select(-pivot_col) %>%
mutate(
n = n #%>% plyr::round_any(count_round)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% scales::percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% scales::percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >0 and <18 years on 01 January 2019",
crit == "c1" ~ "-  Positive SARS-CoV-2 RT-PCR test during testing period",
crit == "c2" ~ "-  with no probable nosocomial infection",
crit == "c3" ~ "-  with no same-day discrepant RT-PCR test result",
crit == "c4" ~ "-  alive on test date",
crit == "c5" ~ "-  with age between 4 and 17 years inclusive on test date",
crit == "c6" ~ "-  with minimum 90 days follow-up",
crit == "c7" ~ "-  randomly sampled",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
## Format flowchart table ----
tbl_flowchart = flowchart %>%
select(criteria, n, n_exclude, pct_all, pct_exclude_step)
## Save flowchart table ----
write_csv(tbl_flowchart,
here::here("output", "descriptives", "positive_cohort",
"tbl_flowchart.csv"))
# Create inclusion flag and append to patient data ----
data_patient = data_patient %>%
left_join(data_inclusion %>%
pivot_longer(-patient_id) %>%
group_by(patient_id) %>%
summarise(include_flag = all(value)),
by = "patient_id")
# Create positive cohort based on inclusion flag ----
data_positives = data_patient %>%
filter(include_flag)
