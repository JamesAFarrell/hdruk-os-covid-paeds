) %>%
factor(levels = c("(most deprived) 1", "2", "3", "4", "(least deprived) 5")) %>%
ff_label("Multiple deprivation quintile"),
rural_urban_2019 = case_when(
rural_urban_2019 %in% c(1,2)     ~ "Urban conurbation",
rural_urban_2019 %in% c(3,4)     ~ "Urban city or town",
rural_urban_2019 %in% c(5,6,7,8) ~ "Rural town or village",
TRUE                             ~ NA_character_
) %>%
factor() %>%
ff_label("Rural-urban classification"),
rural_urban_2020 = case_when(
rural_urban_2020 %in% c(1,2)     ~ "Urban conurbation",
rural_urban_2020 %in% c(3,4)     ~ "Urban city or town",
rural_urban_2020 %in% c(5,6,7,8) ~ "Rural town or village",
TRUE                             ~ NA_character_
) %>%
factor() %>%
ff_label("Rural-urban classification"),
rural_urban_2021 = case_when(
rural_urban_2021 %in% c(1,2)     ~ "Urban conurbation",
rural_urban_2021 %in% c(3,4)     ~ "Urban city or town",
rural_urban_2021 %in% c(5,6,7,8) ~ "Rural town or village",
TRUE                             ~ NA_character_
) %>%
factor() %>%
ff_label("Rural-urban classification"),
)
# Covid status, counts and test dates ----
## First positive test date ----
data_patient = data_patient %>%
left_join(
data_testing %>%
filter(result == "Positive") %>%
group_by(patient_id) %>%
filter(row_number() == 1) %>%
select(patient_id, covid_pos_test_date_1 = test_date),
by = "patient_id"
)
## Count tests by result by period ----
data_patient = data_patient %>%
left_join(
data_testing %>%
mutate(
result_abr = if_else(result == "Positive", "pos", "neg"),
test_period = case_when(
test_date < tp_start_date ~ NA_character_,
test_date <= tp_end_date  ~ "tp", # Testing period
test_date <= study_end_date ~ "fup", # Follow-up period
TRUE ~ NA_character_
),
result_period = paste0(result_abr, "_", test_period)
) %>%
group_by(patient_id) %>%
count(result_period) %>%
pivot_wider(
names_from = result_period,
names_glue = "covid_test_{result_period}_count",
values_from = n,
),
by = "patient_id"
) %>%
replace_na(
list(covid_test_neg_tp_count = 0,
covid_test_pos_tp_count = 0,
covid_test_neg_fup_count = 0,
covid_test_pos_fup_count = 0)
) %>%
mutate(
covid_test_neg_tp_count = covid_test_neg_tp_count %>%
ff_label("Negative covid test count (testing period)"),
covid_test_pos_tp_count = covid_test_pos_tp_count %>%
ff_label("Positive covid test count (testing period)"),
covid_test_neg_fup_count = covid_test_neg_fup_count %>%
ff_label("Negative covid test count (follow-up period)"),
covid_test_pos_fup_count = covid_test_pos_fup_count %>%
ff_label("Positive covid test count (follow-up period)")
)
## Assign covid status ----
data_patient = data_patient %>%
mutate(covid_status = case_when(
covid_test_pos_tp_count > 0 ~ "Positive",
covid_test_neg_tp_count > 0 ~ "Negative",
TRUE ~ "Untested") %>%
factor() %>%
ff_label("SARS-CoV-2 status"),
)
# Exclusion criteria variables ----
## Potential nosocomial infection ----
## Defined as a positive covid test after day 7 in hospital and on or before 7th
##  day following discharge
data_patient = data_patient %>%
left_join(
data_admissions %>%
left_join(
data_patient %>%
select(patient_id, covid_pos_test_date_1),
by = "patient_id") %>%
mutate(
covid_nosocomial = case_when(
# Length of stay less than 7 days: Not nosocomial
(discharge_date - admission_date) < 7 ~ NA_character_,
# Length of stay 7+ days: Nosocomial if positive after day 7 in hospital
# and on or before day 7 following discharge, otherwise not nosocomial
(admission_date + days(7) < covid_pos_test_date_1) &
(discharge_date + days(7) >= covid_pos_test_date_1) ~ "Yes",
TRUE ~ NA_character_
) %>%
ff_label("Nosocomial infection")) %>%
filter(covid_nosocomial == "Yes") %>%
select(patient_id, covid_nosocomial) %>%
group_by(patient_id) %>%
slice(1) %>%
ungroup(),
by = "patient_id"
) %>%
replace_na(list(covid_nosocomial = "No"))
## Discrepant test result ----
data_patient = data_patient %>%
left_join(
data_testing %>%
group_by(patient_id) %>%
mutate(
covid_test_pos_1 = first(test_date[result == "Positive"])
) %>%
ungroup() %>%
filter(test_date == covid_test_pos_1 & result == "Negative") %>%
mutate(covid_discrepant_test = "Yes") %>%
select(patient_id, covid_discrepant_test),
by = "patient_id"
) %>%
replace_na(list(covid_discrepant_test = "No"))
# Save data as rds ----
write_rds(data_patient,
here::here("output", "data", "data_patient.rds"),
compress="gz")
knitr::opts_chunk$set(echo = TRUE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load patient IDs
data_id = read_rds(here::here("output", "data", "data_id.rds"))
data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
View(data_admissions)
knitr::opts_chunk$set(echo = TRUE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
data_admissions %>%
ggplot(aes(test_date)) +
geom_histogram(breaks = date_seq(data_admissions$admission_date, by = "month")) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(data_admissions$admission_date, by = "month")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
data_admissions %>%
ggplot(aes(admission_date)) +
geom_histogram(breaks = date_seq(data_admissions$admission_date, by = "month")) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(data_admissions$admission_date, by = "month")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
data_admissions %>%
ggplot(aes_string(x = "admission_date", fill = NULL)) +
geom_histogram()
data_admissions %>%
ggplot(aes_string(x = "admission_date", fill = "admission_method")) +
geom_histogram()
?theme_set
data_admissions %>%
ggplot(aes_string(x = "admission_date",
fill = "admission_method", colour = "black")) +
geom_histogram()
data_admissions %>%
ggplot(aes_string(x = "admission_date",
fill = "admission_method")) +
geom_histogram()
plot_hist_date = function(.data, var, by = "week", breaks_by = "month", week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data[,var], by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data[,var], by = breaks_by)) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
}
plot_hist_date(data_admissions, "admission_date")
data_admissions %>%
ggplot(aes_string(x = "admission_date", fill = NULL)) +
geom_histogram(breaks = date_seq(data_admissions[,"admission_date"], by = "week"))
data_admissions %>%
ggplot(aes_string(x = "admission_date", fill = NULL)) +
geom_histogram()
date_seq(data_admissions[,"admission_date"], by = "week")
data_admissions %>% pull("admission_date")
date_seq(data_admissions %>% pull("admission_date"), by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "month", week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5))
}
plot_hist_date(data_admissions, "admission_date")
theme_set(theme_bw())
plot_hist_date(data_admissions, "admission_date")
plot_hist_date(data_admissions, "admission_date", by = "month")
data_admissions = data_admissions %>% mutate(admission_date = admission_date %>% ff_label("Admission date"))
plot_hist_date(data_admissions, "admission_date", by = "month")
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date(data_admissions, "admission_date", by = "week") + labs(x = "hi")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week") + labs(x = "hi")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=45, vjust = 0)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, hjust = -0.5)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=45, vjust = 0.5, hjust = 0.5)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=45, vjust = 0, hjust = 0)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
?element_text
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=0, vjust = 0, hjust = 0)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b %Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=0, vjust = 0.5, hjust = 0.5)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date = function(.data, var, by = "week", breaks_by = "3 month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b\n%Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=0, vjust = 0.5, hjust = 0.5)) +
labs(
)
}
plot_hist_date(data_admissions, "admission_date", by = "week")
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL)
theme_set(theme_bw)
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
theme_set(theme_bw)
plot_hist_date = function(.data, var, by = "week", breaks_by = "month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b\n%Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=0, vjust = 0.5, hjust = 0.5))
}
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
theme_set(theme_bw())
plot_hist_date = function(.data, var, by = "week", breaks_by = "month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b\n%Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=0, vjust = 0.5, hjust = 0.5))
}
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
View(data_admissions)
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
plot_hist_date(data_admissions, "admission_date", fill = admission_method.factor,
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
plot_hist_date(data_admissions, "admission_date", fill = "admission_method.factor",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(~ admission_method.factor)
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(admission_method.factor ~ .)
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(~ admission_method.factor)
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(admission_method.factor ~ )
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(~ admission_method.factor, ncol = 1)
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(~ admission_method.factor, ncol = 1)
plot_hist_date(data_admissions, "admission_date",
by = "month", breaks_by = "3 months") +
labs(x = NULL, y = "Monthly count")
data_admissions = data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
)
View(data_admissions)
data_admissions = data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter)
knitr::opts_chunk$set(echo = TRUE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load datasets
data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
theme_set(theme_bw())
plot_hist_date = function(.data, var, by = "week", breaks_by = "month",
week_start = 1,
fill = NULL){
.data %>%
ggplot(aes_string(x = var, fill = fill)) +
geom_histogram(breaks = date_seq(.data %>% pull(var), by = by)) +
scale_x_date(labels = scales::date_format("%b\n%Y"),
breaks = date_seq(.data %>% pull(var), by = breaks_by)) +
theme(axis.text.x = element_text(angle=0, vjust = 0.5, hjust = 0.5))
}
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count")
plot_hist_date(data_admissions, "admission_date",
by = "week", breaks_by = "3 months") +
labs(x = NULL, y = "Weekly count") +
facet_wrap(~ admission_method.factor, ncol = 1)
plot_hist_date(data_admissions, "admission_date",
by = "month", breaks_by = "3 months") +
labs(x = NULL, y = "Monthly count")
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter)
library(knitr)
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter) %>%
kable()
data_admissions %>%
count(treatment_function) %>%
kable()
?label_percent
library(scales)
kable()
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter) %>%
mutate(perc = n/sum(n) %>% label_percent()) %>%
kable()
label_percent(5)
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter) %>%
mutate(perc = n/sum(n) %>% percent()) %>%
kable()
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter) %>%
mutate(perc = n/sum(n)) %>%
kable()
percent(5)
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter) %>%
mutate(perc = (n/sum(n)) %>% percent()) %>%
kable()
data_admissions %>%
mutate(
primary_diagnosis_chapter = str_sub(primary_diagnosis, end = 1)
) %>%
count(primary_diagnosis_chapter) %>%
mutate(perc = (n/sum(n)) %>% percent(accuracy = 0.1)) %>%
kable()
data_admissions %>%
count(treatment_function) %>%
mutate(perc = (n/sum(n)) %>% percent(accuracy = 0.1)) %>%
kable()
