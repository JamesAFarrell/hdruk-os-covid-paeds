pivot_wider(
names_from = snomed_tag,
values_from = flag
)
View(data_gp3)
data_gp3 = data_gp2 %>%
pivot_wider(
names_from = snomed_tag,
values_from = flag
) %>%
mutate(
across(-c(patient_id, date), replace_na, replace = 0)
)
data_gp2$patient_id = NA
# Filter out bad patient IDs, pivot longer ----
data_gp2 = map2(
.x = data_gp,
.y = files_gp,
.f = function(.data, .file_list){
.data %>%
filter(patient_id %in% data_id$patient_id) %>%
select(-gp_contact_count) %>%
pivot_longer(
cols = -patient_id,
names_to = c("index"),
names_pattern = "gp_contact_date_(\\d+)",
values_to = "date",
values_drop_na = TRUE
) %>%
select(-index) %>%
mutate(
date = date %>% ymd(),
snomed_tag = .file_list %>%
str_extract(
pattern = "(?<=input_gp_)[a-z_]+(?=_20\\d{2}-\\d{2}-\\d{2}\\.csv\\.gz)")
)
}) %>%
bind_rows() %>%
distinct(patient_id, date, snomed_tag) %>%
mutate(
flag = 1
)
data_gp3 = data_gp2 %>%
pivot_wider(
names_from = snomed_tag,
values_from = flag
) %>%
mutate(
across(-c(patient_id, date), replace_na, replace = 0)
)
View(data_gp3)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "diagnostics"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "data_gp"), showWarnings = FALSE, recursive=TRUE)
# Load patient IDs
data_id = read_rds(here::here("output", "data", "data_id.rds"))
# Data Files ----
files_gp_disorder = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_disorder_20\\d{2}-\\d{2}-\\d{2}.csv.gz"
)
files_gp_finding = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_finding_20\\d{2}-\\d{2}-\\d{2}.csv.gz"
)
files_gp_procedure = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_procedure_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_regime_therapy = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_regime_therapy_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_observable_entity = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_observable_entity_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_specimen = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_specimen_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp = c(files_gp_disorder, files_gp_finding, files_gp_procedure,
files_gp_regime_therapy, files_gp_observable_entity,
files_gp_specimen)
# Read GP data from csv ----
data_gp = here::here("output", "data_weekly", files_gp) %>%
map(function(file){
file %>%
read_csv(col_types = read_column_type(.)) %>%
as_tibble()
})
# Extract diagnostics data  ----
diagnostics_gp = data_gp %>%
map(function(data){
n_row = nrow(data)
n_row_bad_id = data %>%
filter(!patient_id %in% data_id$patient_id) %>%
nrow()
n_col = ncol(data)
n_col_empty = data %>%
select_if(~(all(is.na(.)))) %>%
ncol()
tibble(n_row, n_row_bad_id, n_col, n_col_empty)
}) %>%
bind_rows() %>%
mutate(file = files_gp) %>%
relocate(file)
# Filter out bad patient IDs, pivot longer ----
data_gp = map2(
.x = data_gp,
.y = files_gp,
.f = function(.data, .file_list){
.data %>%
filter(patient_id %in% data_id$patient_id) %>%
select(-gp_contact_count) %>%
pivot_longer(
cols = -patient_id,
names_to = c("index"),
names_pattern = "gp_contact_date_(\\d+)",
values_to = "date",
values_drop_na = TRUE
) %>%
select(-index) %>%
mutate(
date = date %>% ymd()
)
}) %>%
bind_rows() %>%
distinct(patient_id, date)
View(data_gp)
x = c(0,1,0,1)
fct_relabel()
?fct_relabel()
?fct_recode()
x = c(0,1,0,1)
x %>% fct_recode(Yes = 1, No = 0)
x %>% as.character() %>%  fct_recode(Yes = 1, No = 0)
x %>% as.character() %>%  fct_recode(Yes = "1", No = "0")
x %>% as.character() %>%  fct_recode("Yes" = "1", "No" = "0")
knitr::opts_chunk$set(echo = FALSE, message=FALSE,
warning=FALSE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
library(scales)
library(zoo)
library(knitr)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_lookup_tables.R"))
# Plot theme
theme_set(theme_bw())
# Load datasets
data_patient = read_rds(here::here("output", "data", "data_patient.rds"))
data_testing = read_rds(here::here("output", "data", "data_testing.rds"))
data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
data_outpatient = read_rds(here::here("output", "data", "data_outpatient.rds"))
data_gp = read_rds(here::here("output", "data", "data_gp.rds"))
dependent = "covid_status_tp"
explanatory = c(
"age_2019",
"age_2019_factor",
"sex",
"ethnicity",
"imd_Q5_2019",
"region_2019",
"rural_urban_2019",
"covid_status_fup",
"covid_test_neg_tp_count",
"covid_test_pos_tp_count",
"covid_test_neg_fup_count",
"covid_test_pos_fup_count",
"asthma",
"cancer",
"diabetes",
"epilepsy",
"severe_mental_illness"
)
data_patient %>%
summary_factorlist(
dependent = dependent,
explanatory = explanatory,
total_col = TRUE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts() %>%
kable(align = c("l", "r", "r", "r", "r", "r"))
data_testing %>%
mutate(
date = test_date %>% cut(breaks = "week")
) %>%
count(date, result, .drop = FALSE) %>%
group_by(result) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ungroup() %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ result)
# Combine with lookup table ----
## Admissions data ----
### Primary diagnosis ----
data_admissions = data_admissions %>%
left_join(
lookup_icd10 %>%
mutate(
code = code %>% ff_label("Primary diagnosis"),
description_short = description_short %>% ff_label("Primary diagnosis"),
chapter_short = chapter_short %>% ff_label("Primary diagnosis"),
) %>%
select(
primary_diagnosis = code,
primary_diagnosis.description = description_short,
primary_diagnosis.chapter = chapter_short
),
by = "primary_diagnosis"
)
### Treatment function ----
data_admissions = data_admissions %>%
left_join(
lookup_treatment_function %>%
select(
treatment_function = Code,
treatment_function.description = Title,
treatment_function.category = Category
),
by = "treatment_function"
)
### Admission method ----
data_admissions = data_admissions %>%
left_join(
lookup_admission_method %>%
select(
admission_method = Code,
admission_method.description = Description,
admission_method.category = Category
),
by = "admission_method"
)
dependent = NULL
explanatory = c("admission_method.category",
"treatment_function.category",
"primary_diagnosis.chapter")
data_admissions %>%
summary_factorlist(
dependent = dependent,
explanatory = explanatory,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts() %>%
kable(align = c("l", "l", "r", "r", "r"))
data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, admission_method.category, .drop = FALSE) %>%
group_by(admission_method.category) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA)) %>%
ungroup() %>%
mutate(date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ admission_method.category)
data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, treatment_function.category, .drop = FALSE) %>%
group_by(treatment_function.category) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA)) %>%
ungroup() %>%
mutate(date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ treatment_function.category)
data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, primary_diagnosis.chapter, .drop = FALSE) %>%
group_by(primary_diagnosis.chapter) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA)) %>%
ungroup() %>%
mutate(date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ primary_diagnosis.chapter, ncol = 3)
data_admissions %>%
mutate(treatment_function.description = paste0(treatment_function, ": ",
treatment_function.description)) %>%
count(treatment_function.description) %>%
arrange(desc(n)) %>%
mutate(n = paste0(n, " (", format(round(n/sum(n)*100, 1), nsmall = 1), ")")) %>%
filter() %>%
kable(align = c("l", "r"),
col.names = c("Specialty", "n (%)"))
data_admissions %>%
mutate(primary_diagnosis.description = paste0(primary_diagnosis, ": ",
primary_diagnosis.description)) %>%
count(primary_diagnosis.description) %>%
arrange(desc(n)) %>%
mutate(n = paste0(n, " (", format(round(n/sum(n)*100, 1), nsmall = 1), ")")) %>%
filter() %>%
kable(align = c("l", "r"),
col.names = c("Primary diagnosis", "n (%)"))
data_admissions %>%
mutate(
length_of_stay = (discharge_date - admission_date) %>%
as.numeric(),
length_of_stay.factor = length_of_stay %>%
cut(breaks = c(-Inf, 0:6, 13, 29, Inf)) %>%
fct_recode(
"0" = "(-Inf,0]",
"1" = "(0,1]",
"2" = "(1,2]",
"3" = "(2,3]",
"4" = "(3,4]",
"5" = "(4,5]",
"6" = "(5,6]",
"7-13" = "(6,13]",
"14-29" = "(13,29]",
"30+"   = "(29, Inf]",
)
) %>%
ggplot(aes(length_of_stay.factor)) +
geom_bar() +
labs(x = "Length of stay (days)")
data_outpatient %>%
mutate(
date = outpatient_date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
View(data_gp)
View(data_outpatient)
data_gp %>%
mutate(
date = date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
data_gp %>%
mutate(
date = date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE)
data_gp %>%
mutate(
date = date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date(),
n = n %>% plyr::round_any(10)) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
data_admissions %>%
mutate(treatment_function.description = paste0(treatment_function, ": ",
treatment_function.description)) %>%
count(treatment_function.description) %>%
arrange(desc(n)) %>%
mutate(
n = n %>% plyr::round_any(10),
n = paste0(n, " (", format(round(n/sum(n)*100, 1), nsmall = 1), ")")) %>%
filter() %>%
kable(align = c("l", "r"),
col.names = c("Specialty", "n (%)"))
data_admissions %>%
mutate(
length_of_stay = (discharge_date - admission_date) %>%
as.numeric(),
length_of_stay.factor = length_of_stay %>%
cut(breaks = c(-Inf, 0:6, 13, 29, Inf)) %>%
fct_recode(
"0" = "(-Inf,0]",
"1" = "(0,1]",
"2" = "(1,2]",
"3" = "(2,3]",
"4" = "(3,4]",
"5" = "(4,5]",
"6" = "(5,6]",
"7-13" = "(6,13]",
"14-29" = "(13,29]",
"30+"   = "(29, Inf]",
)
)
data_admissions %>%
mutate(
length_of_stay = (discharge_date - admission_date) %>%
as.numeric(),
length_of_stay.factor = length_of_stay %>%
cut(breaks = c(-Inf, 0:6, 13, 29, Inf)) %>%
fct_recode(
"0" = "(-Inf,0]",
"1" = "(0,1]",
"2" = "(1,2]",
"3" = "(2,3]",
"4" = "(3,4]",
"5" = "(4,5]",
"6" = "(5,6]",
"7-13" = "(6,13]",
"14-29" = "(13,29]",
"30+"   = "(29, Inf]",
)
) %>%
count(length_of_stay.factor)
data_admissions %>%
mutate(
length_of_stay = (discharge_date - admission_date) %>%
as.numeric(),
length_of_stay.factor = length_of_stay %>%
cut(breaks = c(-Inf, 0:6, 13, 29, Inf)) %>%
fct_recode(
"0" = "(-Inf,0]",
"1" = "(0,1]",
"2" = "(1,2]",
"3" = "(2,3]",
"4" = "(3,4]",
"5" = "(4,5]",
"6" = "(5,6]",
"7-13" = "(6,13]",
"14-29" = "(13,29]",
"30+"   = "(29, Inf]",
)
) %>%
count(length_of_stay.factor) %>%
mutate(n = n %>% plyr::round_any(10))
data_admissions %>%
mutate(
length_of_stay = (discharge_date - admission_date) %>%
as.numeric(),
length_of_stay.factor = length_of_stay %>%
cut(breaks = c(-Inf, 0:6, 13, 29, Inf)) %>%
fct_recode(
"0" = "(-Inf,0]",
"1" = "(0,1]",
"2" = "(1,2]",
"3" = "(2,3]",
"4" = "(3,4]",
"5" = "(4,5]",
"6" = "(5,6]",
"7-13" = "(6,13]",
"14-29" = "(13,29]",
"30+"   = "(29, Inf]",
)
) %>%
count(length_of_stay.factor) %>%
mutate(n = n %>% plyr::round_any(10)) %>%
ggplot(aes(length_of_stay.factor, n)) +
geom_col() +
labs(x = "Length of stay (days)")
