.x %>%
transmute(patient_id,
cohort)
})
library(tidyverse)
KM_codelists = list.files("codelists",
pattern = "user-kate-mansfield*.csv")
KM_codelists = list.files("codelists",
pattern = "user-kate-mansfield*")
files_KM_codelists = list.files("codelists",
pattern = "user-kate-mansfield*")
KM_codelists = files_KM_codelists %>%
map(
function(.x) {
read_csv(file = here::here("codelists", .x))
}
)
disorders_codelist = read_csv(
here::here("analysis", "codelists", "snomed-disorder.csv")
)
View(disorders_codelist)
intersect(c(a,b), c(b,c))
intersect(c(1,2), c(2,3))
KM_codelists = files_KM_codelists %>%
map(
function(.x) {
codelist = read_csv(file = here::here("codelists", .x))
n_row = nrow(codelist)
n_in_disorder = intersect(codelist$code, disorders_codelist$code)
perc_in_disorder = n_in_disorder/n_row
return(perc_in_disorder)
}
)
KM_codelists = files_KM_codelists %>%
map(
function(.x) {
codelist = read_csv(file = here::here("codelists", .x))
n_row = nrow(codelist)
n_in_disorder = intersect(codelist$code, disorders_codelist$code)
perc_in_disorder = n_in_disorder/n_row
tibble(file = .x,
perc_in_disorder = perc_in_disorder)
}
) %>%
bind_rows()
View(KM_codelists)
KM_codelists = files_KM_codelists %>%
map(
function(.x) {
codelist = read_csv(file = here::here("codelists", .x))
n_row = nrow(codelist)
n_in_disorder = intersect(codelist$code, disorders_codelist$code) %>%
length()
perc_in_disorder = n_in_disorder/n_row
tibble(file = .x,
perc_in_disorder = perc_in_disorder)
}
) %>%
bind_rows()
View(KM_codelists)
library(tidyverse)
files_KM_codelists = list.files("codelists",
pattern = "user-kate-mansfield*")
disorders_codelist = read_csv(
here::here("analysis", "codelists", "snomed-disorder.csv")
)
KM_codelists = files_KM_codelists %>%
map(
function(.x){
codelist = read_csv(file = here::here("codelists", .x))
}
)
perc_in_disorder = KM_codelists %>%
map(
function(.x) {
n_row = nrow(.x)
n_in_disorder = intersect(.x$code, disorders_codelist$code) %>%
length()
perc_in_disorder = n_in_disorder/n_row
tibble(file = .x,
perc_in_disorder = perc_in_disorder)
}
) %>%
bind_rows()
View(perc_in_disorder)
setdiff(c(1:5), c(2:6))
not_in_disorder = KM_codelists %>%
map(
function(.x){
.x %>%
filter(!code %in% disorders_codelist$code)
}
)
View(not_in_disorder)
not_in_disorder = KM_codelists %>%
map(
function(.x){
.x %>%
filter(!code %in% disorders_codelist$code)
}
) %>%
bind_rows()
View(not_in_disorder)
not_in_disorder$code %>% class()
not_in_disorder = KM_codelists %>%
map(
function(.x){
.x %>%
filter(!code %in% disorders_codelist$code)
}
) %>%
bind_rows() %>%
mutate(code = code %>% as.character())
View(not_in_disorder)
KM = KM_codelists %>%
bind_rows()
View(KM)
finding_codelist = read_csv(
here::here("analysis", "codelists", "snomed-finding.csv")
)
intersect(finding_codelist$code, KM$code)
View(perc_in_disorder)
perc_in_disorder = KM_codelists %>%
map(
function(.x) {
n_row = nrow(.x)
n_in_disorder = intersect(.x$code,
c(disorders_codelist$code,
finding_codelist$code)) %>%
length()
perc_in_disorder = n_in_disorder/n_row
tibble(file = .x,
perc_in_disorder = perc_in_disorder)
}
) %>%
bind_rows()
perc_in_disorder = KM_codelists %>%
map(
function(.x) {
n_row = nrow(.x)
n_in_disorder = intersect(.x$code,
c(disorders_codelist$code,
finding_codelist$code)) %>%
length()
perc = n_in_disorder/n_row
tibble(file = .x,
perc = perc)
}
) %>%
bind_rows()
View(perc_in_disorder)
perc_in_disorder = KM_codelists %>%
map(
function(.x) {
n_row = nrow(.x)
n_in_disorder = intersect(.x$code,
c(disorders_codelist$code,
finding_codelist$code)) %>%
length()
perc = n_in_disorder/n_row
tibble(perc = perc)
}
) %>%
bind_rows()
View(perc_in_disorder)
observable_entity_codelist = read_csv(
here::here("analysis", "codelists", "snomed-observable-entity.csv")
)
View(observable_entity_codelist)
files_KM_codelists
KM_codelists = files_KM_codelists %>%
map(
function(.x){
codelist = read_csv(file = here::here("codelists", .x)) %>%
mutate(category = gsub("user-kate-mansfield-", "", .x) %>%
gsub(".csv", "", .))
}
)
KM = KM_codelists %>%
bind_rows()
View(KM)
KM$code %>% unique()
KM$code %>% unique() %>% length()
View(perc_in_disorder)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Create directory for outputs ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "diagnostics"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "data_outpatient"), showWarnings = FALSE, recursive=TRUE)
# Load patient IDs
data_id = read_rds(here::here("output", "data", "data_id.rds"))
# Data Files ----
files_outpatient = list.files(path = here::here("output", "data_weekly"),
pattern = "input_outpatient_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
# Read outpatient data from csv ----
data_outpatient = here::here("output", "data_weekly", files_outpatient) %>%
map(function(file){
file %>%
read_csv(col_types = read_column_type(.)) %>%
as_tibble()
})
# Extract diagnostics data  ----
diagnostics_outpatient = data_outpatient %>%
map(function(data){
n_row = nrow(data)
n_row_bad_id = data %>%
filter(!patient_id %in% data_id$patient_id) %>%
nrow()
n_col = ncol(data)
n_col_empty = data %>%
select_if(~(all(is.na(.)))) %>%
ncol()
nonzero_counts = data %>%
summarise(
nonzero_count_1 = (outpatient_count_1 > 0) %>% sum(),
nonzero_count_2 = (outpatient_count_2 > 0) %>% sum(),
nonzero_count_3 = (outpatient_count_3 > 0) %>% sum(),
nonzero_count_4 = (outpatient_count_4 > 0) %>% sum(),
nonzero_count_5 = (outpatient_count_5 > 0) %>% sum(),
nonzero_count_6 = (outpatient_count_6 > 0) %>% sum(),
nonzero_count_7 = (outpatient_count_7 > 0) %>% sum()
)
tibble(n_row, n_row_bad_id, n_col, n_col_empty) %>%
bind_cols(nonzero_counts)
}) %>%
bind_rows() %>%
mutate(file = files_outpatient) %>%
relocate(file)
View(diagnostics_outpatient)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Create directory for outputs ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "diagnostics"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "data_outpatient"), showWarnings = FALSE, recursive=TRUE)
# Load patient IDs
data_id = read_rds(here::here("output", "data", "data_id.rds"))
# Data Files ----
files_outpatient = list.files(path = here::here("output", "data_weekly"),
pattern = "input_outpatient_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
# Read outpatient data from csv ----
data_outpatient = here::here("output", "data_weekly", files_outpatient) %>%
map(function(file){
file %>%
read_csv(col_types = read_column_type(.)) %>%
as_tibble()
})
# Extract diagnostics data  ----
diagnostics_outpatient = data_outpatient %>%
map(function(data){
n_row = nrow(data)
n_row_bad_id = data %>%
filter(!patient_id %in% data_id$patient_id) %>%
nrow()
n_col = ncol(data)
n_col_empty = data %>%
select_if(~(all(is.na(.)))) %>%
ncol()
nonzero_counts = data %>%
summarise(
nonzero_count_1 = (outpatient_count_1 > 0) %>% sum(),
nonzero_count_2 = (outpatient_count_2 > 0) %>% sum(),
nonzero_count_3 = (outpatient_count_3 > 0) %>% sum(),
nonzero_count_4 = (outpatient_count_4 > 0) %>% sum(),
nonzero_count_5 = (outpatient_count_5 > 0) %>% sum(),
nonzero_count_6 = (outpatient_count_6 > 0) %>% sum(),
nonzero_count_7 = (outpatient_count_7 > 0) %>% sum(),
nonzero_count_week = (outpatient_count_week > 0) %>% sum()
)
tibble(n_row, n_row_bad_id, n_col, n_col_empty) %>%
bind_cols(nonzero_counts)
}) %>%
bind_rows() %>%
mutate(file = files_outpatient) %>%
relocate(file)
# Filter out bad patient IDs, pivot longer ----
data_outpatient = map2(
.x = data_outpatient,
.y = files_outpatient,
.f = function(.data, .file_list){
.data %>%
filter(patient_id %in% data_id$patient_id) %>%
pivot_longer(
cols = -patient_id,
names_to = c("index"),
names_pattern = "outpatient_count_(\\d+)",
values_to = "value",
values_drop_na = FALSE
) %>%
filter(value > 0) %>%
mutate(
index = index %>% as.numeric(),
date = .file_list %>%
str_extract(
pattern = "20\\d{2}-\\d{2}-\\d{2}(?=\\.csv\\.gz)") %>%
ymd() + (index - 1)
)
}) %>%
bind_rows() %>%
select(-index)
View(data_outpatient)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Create directory for outputs ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "diagnostics"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "data_outpatient"), showWarnings = FALSE, recursive=TRUE)
# Load patient IDs
data_id = read_rds(here::here("output", "data", "data_id.rds"))
# Data Files ----
files_outpatient = list.files(path = here::here("output", "data_weekly"),
pattern = "input_outpatient_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
# Read outpatient data from csv ----
data_outpatient = here::here("output", "data_weekly", files_outpatient) %>%
map(function(file){
file %>%
read_csv(col_types = read_column_type(.)) %>%
as_tibble()
})
# Extract diagnostics data  ----
diagnostics_outpatient = data_outpatient %>%
map(function(data){
n_row = nrow(data)
n_row_bad_id = data %>%
filter(!patient_id %in% data_id$patient_id) %>%
nrow()
n_col = ncol(data)
n_col_empty = data %>%
select_if(~(all(is.na(.)))) %>%
ncol()
nonzero_counts = data %>%
summarise(
nonzero_count_1 = (outpatient_count_1 > 0) %>% sum(),
nonzero_count_2 = (outpatient_count_2 > 0) %>% sum(),
nonzero_count_3 = (outpatient_count_3 > 0) %>% sum(),
nonzero_count_4 = (outpatient_count_4 > 0) %>% sum(),
nonzero_count_5 = (outpatient_count_5 > 0) %>% sum(),
nonzero_count_6 = (outpatient_count_6 > 0) %>% sum(),
nonzero_count_7 = (outpatient_count_7 > 0) %>% sum(),
nonzero_count_week = (outpatient_count_week > 0) %>% sum()
)
tibble(n_row, n_row_bad_id, n_col, n_col_empty) %>%
bind_cols(nonzero_counts)
}) %>%
bind_rows() %>%
mutate(file = files_outpatient) %>%
relocate(file)
data_outpatient[[1]]%>%
filter(patient_id %in% data_id$patient_id) %>%
pivot_longer(
cols = -patient_id,
names_to = c("index"),
names_pattern = "outpatient_count_(\\d+)",
values_to = "value",
values_drop_na = FALSE
)
data_outpatient[[1]]%>%
filter(patient_id %in% data_id$patient_id) %>%
select(-outpatient_count_week) %>%
pivot_longer(
cols = -patient_id,
names_to = c("index"),
names_pattern = "outpatient_count_(\\d+)",
values_to = "value",
values_drop_na = FALSE
)
# Filter out bad patient IDs, pivot longer ----
data_outpatient = map2(
.x = data_outpatient,
.y = files_outpatient,
.f = function(.data, .file_list){
.data %>%
filter(patient_id %in% data_id$patient_id) %>%
select(-outpatient_count_week) %>%
pivot_longer(
cols = -patient_id,
names_to = c("index"),
names_pattern = "outpatient_count_(\\d+)",
values_to = "value",
values_drop_na = FALSE
) %>%
filter(value > 0) %>%
mutate(
index = index %>% as.numeric(),
date = .file_list %>%
str_extract(
pattern = "20\\d{2}-\\d{2}-\\d{2}(?=\\.csv\\.gz)") %>%
ymd() + (index - 1)
)
}) %>%
bind_rows() %>%
select(-index)
View(data_outpatient)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Create directory for processed data and diagnostics ----
dir.create(here::here("output", "data"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "diagnostics"), showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "descriptives", "data_gp"), showWarnings = FALSE, recursive=TRUE)
# Load patient IDs
data_id = read_rds(here::here("output", "data", "data_id.rds"))
# Data Files ----
files_gp_disorder = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_disorder_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_finding = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_finding_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_procedure = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_procedure_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_regime_therapy = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_regime_therapy_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_observable_entity = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_observable_entity_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp_specimen = list.files(
path = here::here("output", "data_weekly"),
pattern = "input_gp_specimen_20\\d{2}-\\d{2}-\\d{2}.csv.gz")
files_gp = c(files_gp_disorder, files_gp_finding, files_gp_procedure,
files_gp_regime_therapy, files_gp_observable_entity,
files_gp_specimen)
# Read GP data from csv ----
data_gp = here::here("output", "data_weekly", files_gp) %>%
map(function(file){
file %>%
read_csv(col_types = read_column_type(.)) %>%
as_tibble()
})
# Extract diagnostics data  ----
diagnostics_gp = data_gp %>%
map(function(data){
n_row = nrow(data)
n_row_bad_id = data %>%
filter(!patient_id %in% data_id$patient_id) %>%
nrow()
n_col = ncol(data)
n_col_empty = data %>%
select_if(~(all(is.na(.)))) %>%
ncol()
nonzero_counts = data %>%
summarise(
nonzero_count_1 = (gp_count_1 > 0) %>% sum(),
nonzero_count_2 = (gp_count_2 > 0) %>% sum(),
nonzero_count_3 = (gp_count_3 > 0) %>% sum(),
nonzero_count_4 = (gp_count_4 > 0) %>% sum(),
nonzero_count_5 = (gp_count_5 > 0) %>% sum(),
nonzero_count_6 = (gp_count_6 > 0) %>% sum(),
nonzero_count_7 = (gp_count_7 > 0) %>% sum()
)
tibble(n_row, n_row_bad_id, n_col, n_col_empty) %>%
bind_cols(nonzero_counts)
}) %>%
bind_rows() %>%
mutate(file = files_gp) %>%
relocate(file)
# simulated data to test
set.seed(10)
ftime <- rexp(200)
fstatus <- sample(0:2,200,replace=TRUE)
cov <- matrix(runif(600),nrow=200)
dimnames(cov)[[2]] <- c('x1','x2','x3')
print(z <- crr(ftime,fstatus,cov))
library(cmprsk)
print(z <- crr(ftime,fstatus,cov))
summary(z)
# quadratic in time for first cov
crr(ftime,fstatus,cov,cbind(cov[,1],cov[,1]),function(Uft) cbind(Uft,Uft^2))
# quadratic in time for first cov
x = crr(ftime,fstatus,cov,cbind(cov[,1],cov[,1]),function(Uft) cbind(Uft,Uft^2))
summary(x)
library(finalfit)
View(crrmulti)
sample(letters(1:4), 20, replace = T)
sample(letters[1:4], 20, replace = T)
x = sample(letters[1:4], 20, replace = T)
sum(x == "a")
y = c("a", "b")
sum(x == y)
x == y
x
x %in% y
sum(x %in% y)
sum(x == y)
x == y
x = sample(c("a", "b"), 20, replace = T)
x
x == "a"
sum(x == "a")
sum(x == "b")
sum(x == y)
x == y
x = sample(c("a", "b"), 19, replace = T)
x == y
