write_csv(table_yearly_resource,
here::here("output", "diagnostics", "resource_by_age_group",
"table_yearly_resource.csv")
)
# Plot incidence
plot_yearly_resource = table_yearly_resource %>%
ggplot(aes(index_date, incidence_1000, colour = age_group_indexed)) +
geom_line() + geom_point() +
facet_wrap(~ resource, scales = "free_y") +
scale_y_continuous(limits = c(0, NA), name = "Incidence (count per 1000 CYP)")
ggsave(filename = here::here("output", "diagnostics", "resource_by_age_group",
"plot_yearly_resource.jpeg"),
plot = plot_yearly_resource,
height = 6, width = 6, units = "in")
View(yearly_resource)
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_results.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script calculates summary patient characteristics stratified by latent
# class from the LCLMM model. Mean observed secondary care healthcare use during
# the 12 month follow-up period is plotted with bootstrapped confidence intervals.
# Load packages ----
library(tidyverse)
library(finalfit)
library(lcmm)
library(splines2)
library(nnet)
library(broom)
library(broom.helpers)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1
resource_type = "beddays"
} else{
ng = args[[1]] %>% as.integer()
resource_type = args[[2]]
}
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Disclosure control parameters ----
count_round  = global_var$disclosure_count_round
count_redact = global_var$disclosure_redact
# Directories ----
dir_lcmm_summary_tbl     = here::here("output", "lcmm", resource_type, "summary_tbl")
dir_lcmm_obs_trajectory  = here::here("output", "lcmm", resource_type, "obs_trajectory")
dir_lcmm_pred_trajectory = here::here("output", "lcmm", resource_type, "pred_trajectory")
dir_lcmm_model_summary   = here::here("output", "lcmm", resource_type, "model_summary")
dir_lcmm_multinomial     = here::here("output", "lcmm", resource_type, "multinomial")
## Create new output directories ----
dir.create(dir_lcmm_summary_tbl,     showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_obs_trajectory,  showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_pred_trajectory, showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_model_summary,   showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_multinomial,     showWarnings = FALSE, recursive=TRUE)
# Plot theme ----
theme_set(theme_bw())
# Bootstrap samples ----
B = 500
# Load data ----
data_resource       = read_rds(here::here("output", "data", "data_resource.rds"))
data_resource_lcmm  = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
data_positives_lcmm = read_rds(here::here("output", "data", "data_positives_lcmm.rds"))
lcmm_model          = read_rds(here::here("output", "lcmm", resource_type, "models",
paste0("lcmm_model_", ng, ".rds")))
# Join class to patient data ----
data_positives_lcmm = data_positives_lcmm %>%
left_join(
lcmm_model$pprob %>%
as_tibble() %>%
select(patient_id, class),
by = "patient_id"
) %>%
replace_na(list(class = 0)) %>%
mutate(
class = class %>%
factor() %>%
ff_label("Class")
)
# Table of patient characteristics by class ----
dependent_var = "class"
explanatory_var = c(
# Follow-up
"follow_up_days",
# Demographics
"age", "age_group", "sex", "ethnicity", "imd_Q5_2019", "region_2019",
"rural_urban_2019",
# Shielding
"shielding",
# Comorbidities
"comorbidity_count_factor",
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Vaccination status
"vaccination_status",
# Illness severity 2 weeks after positive test
"illness_severity_2wks", "pims_ts",
# Previous healthcare use
"n_beddays_pre_covid_1yr", "beddays_pre_covid_1yr",
"n_outpatient_pre_covid_1yr", "outpatient_pre_covid_1yr",
"n_gp_pre_covid_1yr", "gp_pre_covid_1yr"
)
## Summary factorlist ----
tbl_summary = data_positives_lcmm %>%
summary_factorlist(
dependent = dependent_var,
explanatory = explanatory_var,
cont = "median",
total_col = FALSE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts(count_round) %>%
ff_redact_counts(count_redact)
## Save summary table ----
write_csv(tbl_summary,
here::here("output", "lcmm", resource_type, "summary_tbl",
paste0("tbl_summary_", ng, ".csv")))
# Create observed trajectories by class ----
## Calculate observed trajectories by class ----
data_resource = data_resource %>%
select(patient_id, date_indexed,
resource_use = all_of(paste0("n_", resource_type))) %>%
mutate(
week_indexed = case_when(
date_indexed == 0 ~ 0,
date_indexed < 0 ~ floor(date_indexed/7),
date_indexed > 0 ~ ceiling(date_indexed/7)),
period = case_when(
week_indexed < 0 ~ "prior",
week_indexed == 0 ~ "index",
week_indexed < 3 ~ "immediate",
week_indexed >= 3 ~ "follow_up"
)) %>%
group_by(patient_id, week_indexed, period) %>%
summarise(
resource_use = sum(resource_use),
days = n()
)
## Join class to resource data ----
data_resource = data_resource %>%
left_join(
data_positives_lcmm %>%
select(patient_id, class),
by = "patient_id"
)
## Bootstrapped 95% confidence intervals over B realisations ----
tbl_obs_trajectory = data_resource %>%
filter(days == 7, week_indexed > -53, week_indexed < 55) %>%
group_by(class, period, week_indexed) %>%
summarise(
n_patient = n(),
n_events = sum(resource_use),
resource_use = list(Hmisc::smean.cl.boot(resource_use,
conf.int = 0.95,
B = B))
) %>%
unnest_wider(resource_use) %>%
ungroup()
View(tbl_obs_trajectory)
plyr::round_any(5,3)
View(tbl_obs_trajectory)
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_results.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script calculates summary patient characteristics stratified by latent
# class from the LCLMM model. Mean observed secondary care healthcare use during
# the 12 month follow-up period is plotted with bootstrapped confidence intervals.
# Load packages ----
library(tidyverse)
library(finalfit)
library(lcmm)
library(splines2)
library(nnet)
library(broom)
library(broom.helpers)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1
resource_type = "beddays"
} else{
ng = args[[1]] %>% as.integer()
resource_type = args[[2]]
}
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Disclosure control parameters ----
count_round  = global_var$disclosure_count_round
count_redact = global_var$disclosure_redact
# Directories ----
dir_lcmm_summary_tbl     = here::here("output", "lcmm", resource_type, "summary_tbl")
dir_lcmm_obs_trajectory  = here::here("output", "lcmm", resource_type, "obs_trajectory")
dir_lcmm_pred_trajectory = here::here("output", "lcmm", resource_type, "pred_trajectory")
dir_lcmm_model_summary   = here::here("output", "lcmm", resource_type, "model_summary")
dir_lcmm_multinomial     = here::here("output", "lcmm", resource_type, "multinomial")
## Create new output directories ----
dir.create(dir_lcmm_summary_tbl,     showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_obs_trajectory,  showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_pred_trajectory, showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_model_summary,   showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_multinomial,     showWarnings = FALSE, recursive=TRUE)
# Plot theme ----
theme_set(theme_bw())
# Bootstrap samples ----
B = 500
# Load data ----
data_resource       = read_rds(here::here("output", "data", "data_resource.rds"))
data_resource_lcmm  = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
data_positives_lcmm = read_rds(here::here("output", "data", "data_positives_lcmm.rds"))
lcmm_model          = read_rds(here::here("output", "lcmm", resource_type, "models",
paste0("lcmm_model_", ng, ".rds")))
# Join class to patient data ----
data_positives_lcmm = data_positives_lcmm %>%
left_join(
lcmm_model$pprob %>%
as_tibble() %>%
select(patient_id, class),
by = "patient_id"
) %>%
replace_na(list(class = 0)) %>%
mutate(
class = class %>%
factor() %>%
ff_label("Class")
)
# Table of patient characteristics by class ----
dependent_var = "class"
explanatory_var = c(
# Follow-up
"follow_up_days",
# Demographics
"age", "age_group", "sex", "ethnicity", "imd_Q5_2019", "region_2019",
"rural_urban_2019",
# Shielding
"shielding",
# Comorbidities
"comorbidity_count_factor",
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Vaccination status
"vaccination_status",
# Illness severity 2 weeks after positive test
"illness_severity_2wks", "pims_ts",
# Previous healthcare use
"n_beddays_pre_covid_1yr", "beddays_pre_covid_1yr",
"n_outpatient_pre_covid_1yr", "outpatient_pre_covid_1yr",
"n_gp_pre_covid_1yr", "gp_pre_covid_1yr"
)
## Summary factorlist ----
tbl_summary = data_positives_lcmm %>%
summary_factorlist(
dependent = dependent_var,
explanatory = explanatory_var,
cont = "median",
total_col = FALSE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts(count_round) %>%
ff_redact_counts(count_redact)
## Save summary table ----
write_csv(tbl_summary,
here::here("output", "lcmm", resource_type, "summary_tbl",
paste0("tbl_summary_", ng, ".csv")))
# Create observed trajectories by class ----
## Calculate observed trajectories by class ----
data_resource = data_resource %>%
select(patient_id, date_indexed,
resource_use = all_of(paste0("n_", resource_type))) %>%
mutate(
week_indexed = case_when(
date_indexed == 0 ~ 0,
date_indexed < 0 ~ floor(date_indexed/7),
date_indexed > 0 ~ ceiling(date_indexed/7)),
period = case_when(
week_indexed < 0 ~ "prior",
week_indexed == 0 ~ "index",
week_indexed < 3 ~ "immediate",
week_indexed >= 3 ~ "follow_up"
)) %>%
group_by(patient_id, week_indexed, period) %>%
summarise(
resource_use = sum(resource_use),
days = n()
)
## Join class to resource data ----
data_resource = data_resource %>%
left_join(
data_positives_lcmm %>%
select(patient_id, class),
by = "patient_id"
)
## Bootstrapped 95% confidence intervals over B realisations ----
tbl_obs_trajectory = data_resource %>%
filter(days == 7, week_indexed > -53, week_indexed < 55) %>%
group_by(class, period, week_indexed) %>%
summarise(
n_patient = n(),
n_events = sum(resource_use),
resource_use = list(Hmisc::smean.cl.boot(resource_use,
conf.int = 0.95,
B = B))
) %>%
unnest_wider(resource_use) %>%
ungroup()
## Apply disclosure controls ----
tbl_obs_trajectory = tbl_obs_trajectory %>%
mutate(
n_patient = if_else(n_patient <= count_redact, NA_real_,
n_patient %>% plyr::round_any(count_round)),
n_events = if_else(n_patient <= count_redact, NA_real_, n_events),
Mean = if_else(n_patient <= count_redact, NA_real_, n_event / n_patient),
Lower = if_else(n_patient <= count_redact, NA_real_, Lower),
Upper = if_else(n_patient <= count_redact, NA_real_, Upper),
)
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_results.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script calculates summary patient characteristics stratified by latent
# class from the LCLMM model. Mean observed secondary care healthcare use during
# the 12 month follow-up period is plotted with bootstrapped confidence intervals.
# Load packages ----
library(tidyverse)
library(finalfit)
library(lcmm)
library(splines2)
library(nnet)
library(broom)
library(broom.helpers)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1
resource_type = "beddays"
} else{
ng = args[[1]] %>% as.integer()
resource_type = args[[2]]
}
# Load custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Disclosure control parameters ----
count_round  = global_var$disclosure_count_round
count_redact = global_var$disclosure_redact
# Directories ----
dir_lcmm_summary_tbl     = here::here("output", "lcmm", resource_type, "summary_tbl")
dir_lcmm_obs_trajectory  = here::here("output", "lcmm", resource_type, "obs_trajectory")
dir_lcmm_pred_trajectory = here::here("output", "lcmm", resource_type, "pred_trajectory")
dir_lcmm_model_summary   = here::here("output", "lcmm", resource_type, "model_summary")
dir_lcmm_multinomial     = here::here("output", "lcmm", resource_type, "multinomial")
## Create new output directories ----
dir.create(dir_lcmm_summary_tbl,     showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_obs_trajectory,  showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_pred_trajectory, showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_model_summary,   showWarnings = FALSE, recursive=TRUE)
dir.create(dir_lcmm_multinomial,     showWarnings = FALSE, recursive=TRUE)
# Plot theme ----
theme_set(theme_bw())
# Bootstrap samples ----
B = 500
# Load data ----
data_resource       = read_rds(here::here("output", "data", "data_resource.rds"))
data_resource_lcmm  = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
data_positives_lcmm = read_rds(here::here("output", "data", "data_positives_lcmm.rds"))
lcmm_model          = read_rds(here::here("output", "lcmm", resource_type, "models",
paste0("lcmm_model_", ng, ".rds")))
# Join class to patient data ----
data_positives_lcmm = data_positives_lcmm %>%
left_join(
lcmm_model$pprob %>%
as_tibble() %>%
select(patient_id, class),
by = "patient_id"
) %>%
replace_na(list(class = 0)) %>%
mutate(
class = class %>%
factor() %>%
ff_label("Class")
)
# Table of patient characteristics by class ----
dependent_var = "class"
explanatory_var = c(
# Follow-up
"follow_up_days",
# Demographics
"age", "age_group", "sex", "ethnicity", "imd_Q5_2019", "region_2019",
"rural_urban_2019",
# Shielding
"shielding",
# Comorbidities
"comorbidity_count_factor",
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Vaccination status
"vaccination_status",
# Illness severity 2 weeks after positive test
"illness_severity_2wks", "pims_ts",
# Previous healthcare use
"n_beddays_pre_covid_1yr", "beddays_pre_covid_1yr",
"n_outpatient_pre_covid_1yr", "outpatient_pre_covid_1yr",
"n_gp_pre_covid_1yr", "gp_pre_covid_1yr"
)
## Summary factorlist ----
tbl_summary = data_positives_lcmm %>%
summary_factorlist(
dependent = dependent_var,
explanatory = explanatory_var,
cont = "median",
total_col = FALSE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts(count_round) %>%
ff_redact_counts(count_redact)
## Save summary table ----
write_csv(tbl_summary,
here::here("output", "lcmm", resource_type, "summary_tbl",
paste0("tbl_summary_", ng, ".csv")))
# Create observed trajectories by class ----
## Calculate observed trajectories by class ----
data_resource = data_resource %>%
select(patient_id, date_indexed,
resource_use = all_of(paste0("n_", resource_type))) %>%
mutate(
week_indexed = case_when(
date_indexed == 0 ~ 0,
date_indexed < 0 ~ floor(date_indexed/7),
date_indexed > 0 ~ ceiling(date_indexed/7)),
period = case_when(
week_indexed < 0 ~ "prior",
week_indexed == 0 ~ "index",
week_indexed < 3 ~ "immediate",
week_indexed >= 3 ~ "follow_up"
)) %>%
group_by(patient_id, week_indexed, period) %>%
summarise(
resource_use = sum(resource_use),
days = n()
)
## Join class to resource data ----
data_resource = data_resource %>%
left_join(
data_positives_lcmm %>%
select(patient_id, class),
by = "patient_id"
)
## Bootstrapped 95% confidence intervals over B realisations ----
tbl_obs_trajectory = data_resource %>%
filter(days == 7, week_indexed > -53, week_indexed < 55) %>%
group_by(class, period, week_indexed) %>%
summarise(
n_patient = n(),
n_events = sum(resource_use),
resource_use = list(Hmisc::smean.cl.boot(resource_use,
conf.int = 0.95,
B = B))
) %>%
unnest_wider(resource_use) %>%
ungroup()
## Apply disclosure controls ----
tbl_obs_trajectory = tbl_obs_trajectory %>%
mutate(
n_patient = if_else(n_patient <= count_redact, NA_real_,
n_patient %>% plyr::round_any(count_round)),
n_events = if_else(n_patient <= count_redact, NA_real_, n_events),
Mean = if_else(n_patient <= count_redact, NA_real_, n_events / n_patient),
Lower = if_else(n_patient <= count_redact, NA_real_, Lower),
Upper = if_else(n_patient <= count_redact, NA_real_, Upper),
)
View(tbl_obs_trajectory)
View(tbl_obs_trajectory)
tbl_obs_trajectory = tbl_obs_trajectory %>%
mutate(across(c(n_patient, n_events, Mean, Lower, Upper), as.character)) %>%
replace_na(list(n_patient = "[REDACTED]", n_events = "[REDACTED]",
Mean = "[REDACTED]", Lower = "[REDACTED]",
Upper = "[REDACTED]"))
View(tbl_summary)
View(tbl_obs_trajectory)
