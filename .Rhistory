filter(level_2 %in% c("Yes", "0")) %>%
select(resource_type, year = level_1, comorb = var_2,
comorb_label = var_label, estimate, ci_lower, ci_upper) %>%
mutate(
comorb = case_when(
comorb == "comorbidity_count.factor" ~ "no_comorbidity",
TRUE ~ comorb
),
comorb_label = case_when(
comorb_label == "Comorbidity count" ~ "No comorbidity",
TRUE ~ comorb_label
),
resource_type = case_when(
resource_type == "gp" ~ "Healthcare episode",
resource_type == "outpatient" ~ "Outpatient appointment",
resource_type == "admissions" ~ "Inpatient admissions",
resource_type == "beddays" ~ "Inpatient bed-days"
) %>%
factor() %>%
fct_relevel("Healthcare episode", "Outpatient appointment",
"Inpatient admissions", "Inpatient bed-days"),
year = year %>%
factor() %>%
fct_rev()
) %>%
mutate(
comorb = comorb %>%
factor() %>%
fct_relevel(
"no_comorbidity",
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Comorbidity interactions
"asthma_with_cardiovascular", "cystic_fibrosis_with_cardiovascular",
"other_respiratory_with_cardiovascular",
"epilepsy_with_cardiovascular", "headaches_with_cardiovascular",
"other_neurological_with_cardiovascular",
"asthma_with_epilepsy", "cystic_fibrosis_with_epilepsy",
"other_respiratory_with_epilepsy",
"asthma_with_headaches", "cystic_fibrosis_with_headaches",
"other_respiratory_with_headaches",
"asthma_with_other_neurological", "cystic_fibrosis_with_other_neurological",
"other_respiratory_with_other_neurological")
) %>%
arrange(resource_type, year, comorb) %>%
mutate(
comorb_label = comorb_label %>%
factor() %>%
fct_relevel(unique(comorb_label))
)
x %>%
filter(!str_detect(comorb, "_with")) %>%
ggplot(aes(y = year, x = estimate, xmin = ci_lower, xmax = ci_upper,
colour = year)) +
geom_point() +
geom_errorbar(width = 0.5) +
geom_vline(xintercept = 0, size = 0.5) +
facet_grid(comorb_label ~ resource_type, switch = "y") +
scale_y_discrete(position = "right") +
theme(strip.text.y.left = element_text(angle = 0),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank()) +
labs(
y = NULL,
x = "Incidence rate ratio",
colour = "Year"
) +
guides(colour = guide_legend(reverse = TRUE))
x %>%
#filter(!str_detect(comorb, "_with")) %>%
ggplot(aes(y = year, x = estimate, xmin = ci_lower, xmax = ci_upper,
colour = year)) +
geom_point() +
geom_errorbar(width = 0.5) +
geom_vline(xintercept = 0, size = 0.5) +
facet_grid(comorb_label ~ resource_type, switch = "y") +
scale_y_discrete(position = "right") +
theme(strip.text.y.left = element_text(angle = 0),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank()) +
labs(
y = NULL,
x = "Incidence rate ratio",
colour = "Year"
) +
guides(colour = guide_legend(reverse = TRUE))
ggsave()
# Load packages ----
library(tidyverse)
library(lubridate)
# Set plot theme ----
theme_set(theme_bw())
# Create output directory ----
dir.create(here::here("output", "comorbidity_yearly", "irr_summarised"),
showWarnings = FALSE, recursive=TRUE)
# Import IRRs for each resource and comorbidity ----
tbl_irr = c("gp", "outpatient", "admissions", "beddays") %>%
map(function(resource_type){
irr_files = list.files(here::here("output", "comorbidity_yearly", resource_type,
"incidence_rate_ratio"))
irr_files %>% map(function(irr_file){
read_csv(here::here("output", "comorbidity_yearly", resource_type,
"incidence_rate_ratio", irr_file)) %>%
mutate(
file = irr_file,
resource_type = resource_type
)
}) %>%
bind_rows()
}) %>%
bind_rows()
# Clean table ----
tbl_irr = tbl_irr %>%
filter(level_2 %in% c("Yes", "0")) %>%
select(resource_type, year = level_1, comorb = var_2,
comorb_label = var_label, estimate, ci_lower, ci_upper) %>%
mutate(
comorb = case_when(
comorb == "comorbidity_count.factor" ~ "no_comorbidity",
TRUE ~ comorb
),
comorb_label = case_when(
comorb_label == "Comorbidity count" ~ "No comorbidity",
TRUE ~ comorb_label
),
resource_type = case_when(
resource_type == "gp" ~ "Healthcare episode",
resource_type == "outpatient" ~ "Outpatient appointment",
resource_type == "admissions" ~ "Inpatient admissions",
resource_type == "beddays" ~ "Inpatient bed-days"
) %>%
factor() %>%
fct_relevel("Healthcare episode", "Outpatient appointment",
"Inpatient admissions", "Inpatient bed-days"),
year = year %>%
factor() %>%
fct_rev()
) %>%
mutate(
comorb = comorb %>%
factor() %>%
fct_relevel(
"no_comorbidity",
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Comorbidity interactions
"asthma_with_cardiovascular", "cystic_fibrosis_with_cardiovascular",
"other_respiratory_with_cardiovascular",
"epilepsy_with_cardiovascular", "headaches_with_cardiovascular",
"other_neurological_with_cardiovascular",
"asthma_with_epilepsy", "cystic_fibrosis_with_epilepsy",
"other_respiratory_with_epilepsy",
"asthma_with_headaches", "cystic_fibrosis_with_headaches",
"other_respiratory_with_headaches",
"asthma_with_other_neurological", "cystic_fibrosis_with_other_neurological",
"other_respiratory_with_other_neurological")
) %>%
arrange(resource_type, year, comorb) %>%
mutate(
comorb_label = comorb_label %>%
factor() %>%
fct_relevel(unique(comorb_label))
)
## Save IRR table
write_csv(tbl_irr,
here::here("output", "comorbidity_yearly", "irr_summarised",
"tbl_irr.csv"))
# Create IRR plot ----
plot_irr = tbl_irr %>%
ggplot(aes(y = year, x = estimate, xmin = ci_lower, xmax = ci_upper,
colour = year)) +
geom_point() +
geom_errorbar(width = 0.5) +
geom_vline(xintercept = 0, size = 0.5) +
facet_grid(comorb_label ~ resource_type, switch = "y") +
scale_y_discrete(position = "right") +
theme(strip.text.y.left = element_text(angle = 0),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major.y = element_blank()) +
labs(
y = NULL,
x = "Incidence rate ratio",
colour = "Year"
) +
guides(colour = guide_legend(reverse = TRUE))
# Save IRR plot ----
ggsave(filename = plot_irr.jpeg,
plot = plot_irr,
path = here::here("output", "comorbidity_yearly", "irr_summarised"),
width = 6, height = 9, units = "in")
# Save IRR plot ----
ggsave(filename = "plot_irr.jpeg",
plot = plot_irr,
path = here::here("output", "comorbidity_yearly", "irr_summarised"),
width = 6, height = 9, units = "in")
# Save IRR plot ----
ggsave(filename = "plot_irr.jpeg",
plot = plot_irr,
path = here::here("output", "comorbidity_yearly", "irr_summarised"),
width = 8, height = 10, units = "in")
# Save IRR plot ----
ggsave(filename = "plot_irr.jpeg",
plot = plot_irr,
path = here::here("output", "comorbidity_yearly", "irr_summarised"),
width = 12, height = 10, units = "in")
# Save IRR plot ----
ggsave(filename = "plot_irr.jpeg",
plot = plot_irr,
path = here::here("output", "comorbidity_yearly", "irr_summarised"),
width = 12, height = 12, units = "in")
library(tidyverse)
library(lubridate)
library(finalfit)
# Source custom functions ----
source(here::here("analysis", "00_utility_functions.R"))
# Command arguments ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
resource_type  = "outpatient"
model_type     = "poisson"
} else{
resource_type  = args[[1]]
model_type     = args[[2]]
}
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
# Disclosure control parameters ----
count_round  = global_var$disclosure_count_round
count_redact = global_var$disclosure_redact
# Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Create output directory folders ----
dir.create(here::here("output", "comorbidity_multivar", model_type),
showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "comorbidity_multivar", model_type, resource_type, "model_coef"),
showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "comorbidity_multivar", model_type, resource_type, "model_metrics"),
showWarnings = FALSE, recursive=TRUE)
dir.create(here::here("output", "comorbidity_multivar", model_type, resource_type, "incidence_rate_ratio"),
showWarnings = FALSE, recursive=TRUE)
# Load cohort data ----
data_cohort = read_rds(here::here("output", "data", "data_cohort.rds"))
# Extract variable labels ----
var_labs = extract_variable_label(data_cohort[[1]])
# Bind yearly extracts, drop unused levels, and relabel ----
data_cohort = data_cohort%>%
bind_rows() %>%
mutate(across(where(is.factor), fct_drop)) %>%
ff_relabel(var_labs)
# Calculate days under observation ----
# Earliest of calander year-end, death date or study end date less 1st Jan
# (except for outpatient data where records begin from 1st April 2019)
data_cohort = data_cohort %>%
mutate(
days = (pmin(ymd(paste0(cohort, "-12-31")), death_date, study_end_date,
na.rm = TRUE) -
if_else(resource_type == "outpatient" & cohort == 2019,
ymd("2019-04-01"), ymd(paste0(cohort, "-01-01")))) %>%
as.numeric() + 1
)
# Extract variable labels ----
var_labs = extract_variable_label(data_cohort)
# Create interaction comorbidity variables ----
data_cohort = data_cohort %>%
mutate(
# Other neuro with other respiratory ----
other_neurological_with_other_respiratory =
if_else(other_neurological == "Yes" & other_respiratory == "Yes",
"Yes", "No") %>%
factor() %>%
ff_label("Other neurological with other respiratory conditions"),
# Other neuro with cardiovascular ----
other_neurological_with_cardiovascular =
if_else(other_neurological == "Yes" & cardiovascular == "Yes",
"Yes", "No") %>%
factor() %>%
ff_label("Other neurological with other cardiovascular conditions"),
# Other respiratory with cardiovascular ----
other_respiratory_with_cardiovascular =
if_else(other_respiratory == "Yes" & cardiovascular == "Yes",
"Yes", "No") %>%
factor() %>%
ff_label("Other respiratory with cardiovascular conditions")
)
# List of explanatory variables----
var_explanatory = c(
# Demographics ----
"age_group", "sex", "ethnicity", "imd_Q5_2019", "region_2019",
"rural_urban_2019",
# Comorbidities ----
"mental_health_disorders", "neurodevelopmental_and_behavioural",
"asthma", "cystic_fibrosis", "other_respiratory",
"cardiovascular", "epilepsy", "headaches", "other_neurological",
"gastrointestinal_conditions", "genitourinary", "cancer",
"non_malignant_haematological", "immunological", "chronic_infections",
"rheumatology", "congenital_malformation", "diabetes", "other_endocrine",
"metabolic", "transplant", "palliative_care",
# Comorbidity interactions
"other_neurological_with_other_respiratory",
"other_neurological_with_cardiovascular",
"other_respiratory_with_cardiovascular"
)
# Retain regression variables in dataset ----
data_cohort = data_cohort %>%
select(all_of(c("patient_id", "days", var_explanatory)), year = cohort) %>%
mutate(year = year %>% factor()) %>%
drop_na() %>%
filter(days > 0)
# Summary table
tbl_cohort_summary = data_cohort %>%
summary_factorlist(
dependent = "year",
explanatory = var_explanatory,
cont = "median",
total_col = FALSE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
ff_round_counts(count_round) %>%
ff_redact_counts(count_redact)
## Save Summary table -----
write_csv(tbl_cohort_summary,
here::here("output", "comorbidity_multivar", model_type,
paste0("tbl_cohort_summary_", resource_type, ".csv")))
# Calculate yearly resource use ----
if(resource_type == "gp"){
data_resource = read_rds(here::here("output", "data", "data_gp.rds"))
data_resource = data_resource %>%
filter(patient_id %in% data_cohort$patient_id) %>%
filter(str_starts(code_type, "KM_") |
str_starts(code_type, "mapped_1") |
str_starts(code_type, "mapped_2"))%>%
distinct(patient_id, gp_date) %>%
mutate(year = year(gp_date)) %>%
count(patient_id, year)
} else if (resource_type == "outpatient"){
data_resource = read_rds(here::here("output", "data", "data_outpatient.rds"))
data_resource = data_resource %>%
filter(patient_id %in% data_cohort$patient_id) %>%
filter(is.na(specialty)) %>%
mutate(year = year(outpatient_date)) %>%
group_by(patient_id, year) %>%
summarise(n = sum(outpatient_count)) %>%
ungroup()
} else if (resource_type == "admissions" | resource_type == "beddays"){
data_resource = read_rds(here::here("output", "data", "data_admissions.rds"))
if (resource_type == "admissions"){
data_resource = data_resource %>%
filter(patient_id %in% data_cohort$patient_id) %>%
mutate(year = year(admission_date)) %>%
count(patient_id, year)
} else {
data_resource = seq(year(study_start_date),
year(study_end_date - days(1))) %>%
as.list() %>%
map(function(year){
data_resource %>%
filter(patient_id %in% data_cohort$patient_id) %>%
select(patient_id, admission_date, discharge_date) %>%
mutate(
year = year,
start_date = ymd(paste0(year, "-01-01")),
end_date = if_else(year == 2022,
ymd("2022-04-30"),
(start_date + years(1) - days(1)))
) %>%
filter(admission_date <= end_date,
discharge_date >= start_date) %>%
mutate(
length_of_stay = case_when(
admission_date == discharge_date ~ 0.5, # day-case
TRUE ~ (pmin(discharge_date, end_date) -
pmax(admission_date, start_date)) %>% as.numeric()
)
)%>%
group_by(patient_id, year) %>%
summarise(
n = sum(length_of_stay) %>% round()
) %>%
ungroup()
})%>%
bind_rows()
}
}
# Add resource data to patient data, replace NAs with 0 count ----
data_cohort = data_cohort %>%
left_join(
data_resource %>%
mutate(year = year %>% as.character()) %>%
select(patient_id, year, n),
by = c("patient_id", "year")
) %>%
replace_na(list(n = 0)) %>%
rename(health_contact = n) %>%
mutate(year = year %>% factor())
# Label lookup table ----
lookup_label = tibble(
var = names(var_labs),
var_label = var_labs
)
# Model formula ----
model_formula = as.formula(
paste0("health_contact ~ ",
paste0("year*(", paste0(var_explanatory, collapse = " + "),
") + offset(log(days))")))
# Fit model ----
if(model_type == "poisson"){
model_fit = glm(formula = model_formula, family = "poisson", data = data_cohort)
} else if (model_type == "nb"){
model_fit = MASS::glm.nb(formula = model_formula, data = data_cohort)
}
# Model coefficient ----
tbl_model_coef = model_fit %>%
broom::tidy()
write_csv(tbl_model_coef,
here::here("output", "comorbidity_multivar", model_type, resource_type,
"model_coef", "tbl_model_coef_.csv"))
# Model metrics ----
tbl_model_metrics = model_fit %>%
broom::glance()
write_csv(tbl_model_metrics,
here::here("output", "comorbidity_multivar", model_type, resource_type,
"model_metrics", "tbl_model_metrics.csv"))
level_2 = data_cohort[,"age_group"] %>% levels()
tbl_irr = expand_grid(level_1, level_2) %>%
mutate(var_1 = "year",
var_2 = "age_group") %>%
relocate(var_1, var_2) %>%
group_by(level_2) %>%
mutate(ref_1 = if_else(row_number() == 1, TRUE, FALSE)) %>%
group_by(level_1) %>%
mutate(ref_2 = if_else(row_number() == 1, TRUE, FALSE)) %>%
ungroup() %>%
filter(!(ref_1 == TRUE & ref_2 == TRUE)) %>% # Remove both reference
rowwise() %>%
mutate(
lincom_term = case_when(
ref_1 == FALSE & ref_2 == TRUE  ~ paste0(var_1, level_1),
ref_1 == TRUE  & ref_2 == FALSE ~ paste0(var_2, level_2),
ref_1 == FALSE & ref_2 == FALSE ~ paste0(c(paste0(var_1, level_1),
paste0(var_2, level_2),
paste0(var_1, level_1, ":", var_2, level_2)),
collapse = "+"),
TRUE ~ NA_character_
)
)
# IRR - linear combination ----
level_1 = data_cohort[,"year"] %>% levels()
tbl_irr = expand_grid(level_1, level_2) %>%
mutate(var_1 = "year",
var_2 = "age_group") %>%
relocate(var_1, var_2) %>%
group_by(level_2) %>%
mutate(ref_1 = if_else(row_number() == 1, TRUE, FALSE)) %>%
group_by(level_1) %>%
mutate(ref_2 = if_else(row_number() == 1, TRUE, FALSE)) %>%
ungroup() %>%
filter(!(ref_1 == TRUE & ref_2 == TRUE)) %>% # Remove both reference
rowwise() %>%
mutate(
lincom_term = case_when(
ref_1 == FALSE & ref_2 == TRUE  ~ paste0(var_1, level_1),
ref_1 == TRUE  & ref_2 == FALSE ~ paste0(var_2, level_2),
ref_1 == FALSE & ref_2 == FALSE ~ paste0(c(paste0(var_1, level_1),
paste0(var_2, level_2),
paste0(var_1, level_1, ":", var_2, level_2)),
collapse = "+"),
TRUE ~ NA_character_
)
)
View(tbl_irr)
View(tbl_irr)
tbl_irr = expand_grid(level_1, level_2) %>%
mutate(var_1 = "year",
var_2 = "age_group") %>%
relocate(var_1, var_2) %>%
group_by(level_2) %>%
mutate(ref_1 = if_else(row_number() == 1, TRUE, FALSE)) %>%
group_by(level_1) %>%
mutate(ref_2 = if_else(row_number() == 1, TRUE, FALSE)) %>%
ungroup() %>%
filter(!(ref_2 == TRUE)) %>% # Remove both reference
rowwise() %>%
mutate(
lincom_term = case_when(
ref_1 == FALSE & ref_2 == TRUE  ~ paste0(var_1, level_1),
ref_1 == TRUE  & ref_2 == FALSE ~ paste0(var_2, level_2),
ref_1 == FALSE & ref_2 == FALSE ~ paste0(c(paste0(var_1, level_1),
paste0(var_2, level_2),
paste0(var_1, level_1, ":", var_2, level_2)),
collapse = "+"),
TRUE ~ NA_character_
)
)
View(tbl_irr)
