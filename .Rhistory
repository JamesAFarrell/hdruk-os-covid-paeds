ungroup()
write_csv(tbl_weekly_testing_by_result,
here::here(dir_output, "tbl_weekly_testing_by_result.csv"))
plot_weekly_testing_by_result = tbl_weekly_testing_by_result %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"),
by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ result)
ggsave("plot_weekly_testing_by_result.jpeg",
plot_weekly_testing_by_result,
path = dir_output,
height = 5, width = 7)
# Combine with lookup table ----
## Admissions data ----
### Primary diagnosis ----
data_admissions = data_admissions %>%
left_join(
lookup_icd10 %>%
mutate(
code = code %>% ff_label("Primary diagnosis"),
description_short = description_short %>% ff_label("Primary diagnosis"),
chapter_short = chapter_short %>% ff_label("Primary diagnosis"),
) %>%
select(
primary_diagnosis = code,
primary_diagnosis.description = description_short,
primary_diagnosis.chapter = chapter_short
),
by = "primary_diagnosis"
)
### Treatment function ----
data_admissions = data_admissions %>%
left_join(
lookup_treatment_function %>%
select(
treatment_function = Code,
treatment_function.description = Title,
treatment_function.category = Category
),
by = "treatment_function"
)
### Admission method ----
data_admissions = data_admissions %>%
left_join(
lookup_admission_method %>%
select(
admission_method = Code,
admission_method.description = Description,
admission_method.category = Category
),
by = "admission_method"
)
dependent = NULL
explanatory = c("admission_method.category",
"treatment_function.category",
"primary_diagnosis.chapter")
tbl_summary_admissions = data_admissions %>%
summary_factorlist(
dependent = dependent,
explanatory = explanatory,
add_col_totals = TRUE,
na_include = TRUE
)
write_csv(tbl_summary_admissions,
here::here(dir_output, "tbl_summary_admissions.csv"))
tbl_summary_admissions %>%
ff_round_counts() %>%
kable(align = c("l", "l", "r", "r", "r"))
tbl_weekly_admissions = data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date(),
n = n %>% plyr::round_any(count_round))
write_csv(tbl_weekly_admissions,
here::here(dir_output, "tbl_weekly_admissions.csv"))
plot_weekly_admissions = tbl_weekly_admissions %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
ggsave("plot_weekly_admissions.jpeg",
plot_weekly_admissions,
path = dir_output,
height = 5, width = 7)
plot_weekly_admissions
tbl_weekly_admissions_by_method = data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, admission_method.category, .drop = FALSE) %>%
group_by(admission_method.category) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA)) %>%
ungroup() %>%
mutate(date = date %>% as_date(),
n = n %>% plyr::round_any(count_round))
write_csv(tbl_weekly_admissions_by_method,
here::here(dir_output, "tbl_weekly_admissions_by_method.csv"))
plot_weekly_admission_by_method = tbl_weekly_admissions_by_method %>%
drop_na(admission_method.category) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ admission_method.category)
ggsave("plot_weekly_admission_by_method.jpeg",
plot_weekly_admission_by_method,
path = dir_output,
height = 5, width = 7)
plot_weekly_admission_by_method
tbl_weekly_admissions_by_specialty = data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, treatment_function.category, .drop = FALSE) %>%
group_by(treatment_function.category) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA)) %>%
ungroup() %>%
mutate(date = date %>% as_date(),
n = n %>% plyr::round_any(count_round))
write_csv(tbl_weekly_admissions_by_specialty,
here::here(dir_output, "tbl_weekly_admissions_by_specialty.csv"))
plot_weekly_admissions_by_specialty = tbl_weekly_admissions_by_specialty %>%
drop_na(treatment_function.category) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ treatment_function.category)
ggsave("plot_weekly_admissions_by_specialty.jpeg",
plot_weekly_admissions_by_specialty,
path = dir_output,
height = 5, width = 7)
plot_weekly_admissions_by_specialty
tbl_weekly_admissions_by_diagnosis = data_admissions %>%
mutate(
date = admission_date %>% cut(breaks = "week")
) %>%
count(date, primary_diagnosis.chapter, .drop = FALSE) %>%
group_by(primary_diagnosis.chapter) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA)) %>%
ungroup() %>%
mutate(date = date %>% as_date(),
n = n %>% plyr::round_any(count_round))
write_csv(tbl_weekly_admissions_by_diagnosis,
here::here(dir_output, "tbl_weekly_admissions_by_diagnosis.csv"))
plot_weekly_admissions_by_diagnosis = tbl_weekly_admissions_by_diagnosis %>%
drop_na(primary_diagnosis.chapter) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ primary_diagnosis.chapter, ncol = 4)
ggsave("plot_weekly_admissions_by_diagnosis.jpeg",
plot_weekly_admissions_by_diagnosis,
path = dir_output,
height = 10, width = 14)
plot_weekly_admissions_by_diagnosis
tbl_admissions_by_specialty = data_admissions %>%
mutate(treatment_function.description = paste0(treatment_function, ": ",
treatment_function.description)) %>%
count(treatment_function.description) %>%
arrange(desc(n)) %>%
mutate(
n = n %>% plyr::round_any(count_round),
n = paste0(n, " (", format(round(n/sum(n)*100, 1), nsmall = 1), ")"))
write_csv(tbl_admissions_by_specialty,
here::here(dir_output, "tbl_admissions_by_specialty.csv"))
tbl_admissions_by_specialty %>%
kable(align = c("l", "r"),
col.names = c("Specialty", "n (%)"))
tbl_admissions_by_diagnosis = data_admissions %>%
mutate(primary_diagnosis.description = paste0(primary_diagnosis, ": ",
primary_diagnosis.description)) %>%
count(primary_diagnosis.description) %>%
arrange(desc(n)) %>%
mutate(
n = n %>% plyr::round_any(count_round),
n = paste0(n, " (", format(round(n/sum(n)*100, 1), nsmall = 1), ")")) %>%
filter()
write_csv(tbl_admissions_by_diagnosis,
here::here(dir_output, "tbl_admissions_by_diagnosis.csv"))
tbl_admissions_by_diagnosis %>%
kable(align = c("l", "r"),
col.names = c("Primary diagnosis", "n (%)"))
tbl_length_of_stay = data_admissions %>%
mutate(
length_of_stay = (discharge_date - admission_date) %>%
as.numeric(),
length_of_stay.factor = length_of_stay %>%
cut(breaks = c(-Inf, 0:6, 13, 29, Inf)) %>%
fct_recode(
"0" = "(-Inf,0]",
"1" = "(0,1]",
"2" = "(1,2]",
"3" = "(2,3]",
"4" = "(3,4]",
"5" = "(4,5]",
"6" = "(5,6]",
"7-13" = "(6,13]",
"14-29" = "(13,29]",
"30+"   = "(29, Inf]",
)
) %>%
count(length_of_stay.factor) %>%
mutate(n = n %>% plyr::round_any(count_round))
write_csv(tbl_length_of_stay,
here::here(dir_output, "tbl_length_of_stay.csv"))
plot_length_of_stay = tbl_length_of_stay %>%
ggplot(aes(length_of_stay.factor, n)) +
geom_col() +
labs(x = "Length of stay (days)")
ggsave("plot_length_of_stay.jpeg",
plot_length_of_stay,
path = dir_output,
height = 5, width = 7)
plot_length_of_stay
tbl_weekly_outpatient = data_outpatient %>%
mutate(
date = outpatient_date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date(),
n = n %>% plyr::round_any(count_round))
write_csv(tbl_weekly_outpatient,
here::here(dir_output, "tbl_weekly_outpatient.csv"))
plot_weekly_outpatient = tbl_weekly_outpatient %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
ggsave("plot_weekly_outpatient.jpeg",
plot_weekly_outpatient,
path = dir_output,
height = 5, width = 7)
plot_weekly_outpatient
tbl_weekly_gp = data_gp %>%
mutate(
date = gp_date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date(),
n = n %>% plyr::round_any(count_round))
write_csv(tbl_weekly_gp,
here::here(dir_output, "tbl_weekly_gp.csv"))
plot_weekly_gp = tbl_weekly_gp %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
ggsave("plot_weekly_gp.jpeg",
plot_weekly_gp,
path = dir_output,
height = 5, width = 7)
plot_weekly_gp
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
library(scales)
library(zoo)
library(knitr)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_lookup_tables.R"))
# Output directories
dir.create(here::here("output", "descriptives", "healthcare_use_2019_2022"),
showWarnings = FALSE, recursive=TRUE)
# Plot theme
theme_set(theme_bw())
# Disclosure control parameters
count_round = 15
# Load global variables ----
global_var = jsonlite::read_json(path = here::here("analysis", "global_variables.json"))
## Study dates ----
study_start_date = ymd(global_var$start_date)
study_end_date   = ymd(global_var$end_date)
tp_start_date    = ymd(global_var$tp_start_date)
tp_end_date      = ymd(global_var$tp_end_date)
fup_start_date   = ymd(global_var$fup_start_date)
# Load datasets
data_patient = read_rds(here::here("output", "data", "data_patient.rds"))
data_testing = read_rds(here::here("output", "data", "data_testing.rds"))
data_admissions = read_rds(here::here("output", "data", "data_admissions.rds"))
data_outpatient = read_rds(here::here("output", "data", "data_outpatient.rds"))
data_gp = read_rds(here::here("output", "data", "data_gp.rds"))
# Cohort construction ----
index_date = c("2019-01-01",
"2020-01-01",
"2021-01-01",
"2022-01-01") %>%
ymd() %>%
as.list()
data_criteria = map(.x = index_date,
.data_patient = data_patient,
.f = function(.index_date, .data_patient){
data_criteria = .data_patient %>%
transmute(
patient_id,
index_date = .index_date,
cohort = year(index_date),
age_indexed = time_length(
interval(date_of_birth, .index_date),
unit = "years"
) %>%
ff_label("Age on 1st January (years)"),
age_group_indexed = age_indexed %>%
cut(
breaks = c(-Inf, 4, 7, 11, 15, 18, Inf),
labels = c("Under 4", "4-6", "7-10", "11-14", "15-17", "18+")
)%>%
ff_label("Age group on 1st January (years)"),
is_alive = is.na(death_date) | death_date > index_date,
isnot_nosocomial = covid_nosocomial == "No",
isnot_descrepant_result = covid_discrepant_test == "No",
is_age_4_or_more = age_indexed >= 4,
is_age_under_18 = age_indexed < 18,
include = is_alive &
isnot_nosocomial &
isnot_descrepant_result &
is_age_4_or_more & is_age_under_18
)
}
)
data_cohort = data_criteria %>%
map(
function(.data_criteria){
data_cohort = .data_criteria %>%
filter(include) %>%
select(patient_id, cohort, index_date, age_indexed, age_group_indexed) %>%
left_join(
data_patient, by = "patient_id"
)
}
)
# Inclusion flowchart ----
flowchart = data_criteria %>%
map(
function(.data_criteria){
## Create inclusion flowchart ----
flowchart = .data_criteria %>%
transmute(
patient_id,
cohort,
c0 = TRUE,
c1 = c0 & isnot_nosocomial,
c2 = c1 & isnot_descrepant_result,
c3 = c2 & is_alive,
c4 = c3 & (is_age_4_or_more & is_age_under_18),
) %>%
select(-patient_id) %>%
group_by(cohort) %>%
summarise(
across(.fns=sum)
) %>%
pivot_longer(
cols=-cohort,
names_to="criteria",
values_to="n"
) %>%
group_by(cohort) %>%
mutate(
n = n %>% plyr::round_any(count_round)
) %>%
mutate(
n_exclude = lag(n) - n,
pct_all = (n/first(n)) %>% percent(0.1),
pct_exclude_step = (n_exclude/lag(n)) %>% percent(0.1),
crit = str_extract(criteria, "^c\\d+"),
criteria = fct_case_when(
crit == "c0" ~ "OpenSAFELY extract: Registered with GP, alive, with age >1 and <18 years on 01 January 2019",
crit == "c1" ~ "-  with no probable nosocomial infection",
crit == "c2" ~ "-  with no same-day discrepent RT-PCR test result",
crit == "c3" ~ "-  is alive on 1st January",
crit == "c4" ~ "-  with age between 4 and 17 years inclusive",
TRUE ~ NA_character_
)
) %>%
mutate(n_exclude = n_exclude %>% as.character()) %>%
replace_na(
list(n_exclude = "-", pct_exclude_step = "-")
)
}
) %>%
bind_rows()
tbl_flowchart = flowchart %>%
select(cohort, criteria, n, n_exclude, pct_all, pct_exclude_step) %>%
group_by(cohort) %>%
mutate(cohort = if_else(row_number() == 1, cohort %>% as.character(), ""))
write_csv(tbl_flowchart,
here::here("output", "descriptives", "healthcare_use_2019_2022",
"tbl_flowchart.csv"))
# Cohort summary ----
explanatory_var = c(
"age_indexed",
"age_group_indexed",
"sex",
"ethnicity",
"imd_Q5_2019",
"region_2019",
"rural_urban_2019",
"covid_status_tp",
"covid_status_fup",
"covid_test_neg_tp_count",
"covid_test_pos_tp_count",
"covid_test_neg_fup_count",
"covid_test_pos_fup_count",
"asthma",
"cancer",
"diabetes",
"epilepsy",
"severe_mental_illness",
"cerebral_palsy",
"chronic_infections",
"devices_and_stomas",
"endocrine_disorders",
"gastrointestinal_disorders",
"haematological_disorders",
"immunological_disorders",
"learning_and_behaviour_difficulties",
"mental_illness",
"musculoskeletal_and_rheum",
"transplant"
)
tbl_cohort_summary = data_cohort %>%
map(
.explanatory_var = explanatory_var,
.f = function(.data_cohort, .explanatory_var){
.data_cohort %>%
mutate(cohort = cohort %>% factor()) %>%
summary_factorlist(
dependent = "cohort",
explanatory = .explanatory_var,
total_col = FALSE,
add_col_totals = TRUE,
na_include = TRUE
) %>%
mutate(row_num = row_number())
}) %>%
reduce(left_join, by = c("row_num", "label", "levels")) %>%
select(-row_num) %>%
ff_round_counts(count_round)
write_csv(tbl_cohort_summary,
here::here("output", "descriptives", "healthcare_use_2019_2022",
"tbl_cohort_summary.csv"))
# Monthly counts ----
admission_counts = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates) %>%
mutate(date_period = floor_date(dates, unit = "month")) %>%
count(patient_id, date_period)
outpatient_counts = data_outpatient %>%
mutate(date_period = floor_date(outpatient_date, unit = "month")) %>%
count(patient_id, date_period)
gp_counts = data_gp %>%
mutate(date_period = floor_date(gp_date, unit = "month")) %>%
count(patient_id, date_period)
View(admission_counts)
x = data_cohort[[1]]
View(x)
data_cohort %>%
map(function(.x){
.x %>%
transmute(patient_id,
date = list(seq(index_date,
index_date + year(1) - days(1),
by = "month"))) %>%
unnest(date)
})
data_cohort %>%
map(function(.x){
.x %>%
transmute(patient_id,
date = list(seq(index_date[1],
index_date[1] + year(1) - days(1),
by = "month"))) %>%
unnest(date)
})
data_cohort %>%
map(function(.x){
.x %>%
transmute(patient_id,
cohort)
})
