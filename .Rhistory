# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]]
}
# Load resource data ----
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
# Spline parameters ----
n_degree = 3
n_knots  = 7
# Bind spline terms to data ----
data_resource_lcmm2 = data_resource_lcmm %>%
bind_cols(
data_resource_lcmm %>%
pull(indexed_month) %>%
bSpline(degree = n_degree, knots = n_knots) %>%
as_tibble() %>%
rename_with(.fn = ~paste0("bSpline_", letters[as.integer(.)])))
# Model formulae ----
formula_fixed = as.formula(
paste0("hospital_use ~ ", paste0("bSpline_", 1:(n_degree + 1), collapse = "+")))
formula_random = as.formula(
paste0("~ ", paste0("bSpline_", 1:(n_degree + 1), collapse = "+")))
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
data_resource_lcmm2 = as.data.frame(data_resource_lcmm2)
# Run LCMM model ----
## Set model parameters ----
max_iter = 2000 # Maximum number of iterations
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_model.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script clusters healthcare-use trajectories using a latent class linear
# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]]
}
# Load resource data ----
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
# Spline parameters ----
n_degree = 3
n_knots  = 7
# Bind spline terms to data ----
data_resource_lcmm2 = data_resource_lcmm %>%
bind_cols(
data_resource_lcmm %>%
pull(indexed_month) %>%
bSpline(degree = n_degree, knots = n_knots) %>%
as_tibble() %>%
rename_with(.fn = ~paste0("bSpline_", letters[as.integer(.)])))
# Model formulae ----
formula_fixed = as.formula(
paste0("hospital_use ~ ", paste0("bSpline_", 1:(n_degree + 1), collapse = "+")))
formula_random = as.formula(
paste0("~ ", paste0("bSpline_", 1:(n_degree + 1), collapse = "+")))
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
data_resource_lcmm2 = as.data.frame(data_resource_lcmm2)
# Run LCMM model ----
## Set model parameters ----
max_iter = 2000 # Maximum number of iterations
lcmm_model = hlme(hospital_use ~bSpline(indexed_month, degree = 3, knots = 7),
random = ~bSpline(indexed_month, degree = 3, knots = 7),
subject = "patient_id",
ng = ng,
maxiter = max_iter,
data = data_resource_lcmm,
verbose = TRUE)
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_model.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script clusters healthcare-use trajectories using a latent class linear
# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]]
}
# Load resource data ----
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
# Spline parameters ----
n_degree = 3
n_knots  = 7
# Bind spline terms to data ----
data_resource_lcmm2 = data_resource_lcmm %>%
bind_cols(
data_resource_lcmm %>%
pull(indexed_month) %>%
bSpline(degree = n_degree, knots = n_knots) %>%
as_tibble() %>%
rename_with(.fn = ~paste0("bSpline_", letters[as.integer(.)])))
# Model formulae ----
formula_fixed = as.formula(
paste0("hospital_use ~ ", paste0("bSpline_", 1:(n_degree + 1), collapse = "+")))
formula_random = as.formula(
paste0("~ ", paste0("bSpline_", 1:(n_degree + 1), collapse = "+")))
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
data_resource_lcmm2 = as.data.frame(data_resource_lcmm2)
# Run LCMM model ----
## Set model parameters ----
max_iter = 1 # Maximum number of iterations
## Run lcmm ----
if (ng == 1){
lcmm_model = hlme(hospital_use ~bSpline(indexed_month, degree = 3, knots = 7),
random = ~bSpline(indexed_month, degree = 3, knots = 7),
subject = "patient_id",
ng = ng,
maxiter = max_iter,
data = data_resource_lcmm,
verbose = TRUE)
}
View(hlme)
lcmm_model = hlme(hospital_use ~bSpline(indexed_month, degree = 3, knots = 7),
random = ~bSpline(indexed_month, degree = 3, knots = 7),
subject = "patient_id",
ng = ng,
maxiter = max_iter,
data = data_resource_lcmm,
verbose = TRUE)
matrix(0, 50, 1)
matrix(0, "a", 1)
subject = "patient_id"
data = data_resource_lcmm
ng = 1
nom.subject <- as.character(subject)
newdata <- data
if (!isTRUE(all.equal(as.character(cl$subset), character(0)))) {
cc <- cl
cc <- cc[c(1, which(names(cl) == "subset"))]
cc[[1]] <- as.name("model.frame")
cc$formula <- formula(paste("~", paste(colnames(data),
collapse = "+")))
cc$data <- data
cc$na.action <- na.pass
newdata <- eval(cc)
}
cl <- match.call()
cl
View(data)
?hlme
View(hlme)
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_model.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script clusters healthcare-use trajectories using a latent class linear
# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]]
}
# Load resource data ----
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
# Run LCMM model ----
## Set model parameters ----
max_iter = 2000 # Maximum number of iterations
fixed = hospital_use ~ bSpline(indexed_month, degree = 3, knots = 7)
fixed
random = ~bSpline(indexed_month, degree = 3, knots = 7)
subject="patient_id"
ng = 1
maxiter=max_iter
data=data_resource_lcmm
idiag = FALSE
nwg = FALSE
cor = NULL
convB = 1e-04
convL = 1e-04
convG = 1e-04
pprior = NULL
maxiter = 500
subset = NULL
na.action = 1
posfix = NULL
verbose = FALSE
returndata = FALSE
var.time = NULL
partialH = FALSE
nproc = 1
clustertype = NULL
ptm <- proc.time()
cl <- match.call()
args <- as.list(match.call(hlme))[-1]
nom.subject <- as.character(subject)
nom.prior <- as.character(args$prior)
if (!missing(mixture) & ng == 1)
stop("No mixture can be specified with ng=1")
ncor0 <- 0
cor.type <- cl$cor[1]
cor.time <- cl$cor[2]
cor <- paste(cor.type, cor.time, sep = "-")
if (all.equal(cor, character(0)) != TRUE) {
if (substr(cor, 1, 2) == "AR") {
ncor0 <- 2
}
else if (substr(cor, 1, 2) == "BM") {
ncor0 <- 1
}
else {
stop("The argument cor must be of type AR or BM")
}
if (!(strsplit(cor, "-")[[1]][2] %in% colnames(data)))
stop("Unable to find time variable from argument cor in data")
else {
cor.var.time <- strsplit(cor, "-")[[1]][2]
}
}
if (all.equal(cor, character(0)) != TRUE) {
if (substr(cor, 1, 2) == "AR") {
ncor0 <- 2
}
else if (substr(cor, 1, 2) == "BM") {
ncor0 <- 1
}
else {
stop("The argument cor must be of type AR or BM")
}
if (!(strsplit(cor, "-")[[1]][2] %in% colnames(data)))
stop("Unable to find time variable from argument cor in data")
else {
cor.var.time <- strsplit(cor, "-")[[1]][2]
}
}
X0.names2 <- c("intercept")
int.fixed <- 0
int.mixture <- 0
int.random <- 0
m <- match.call()[c(1, match(c("data", "subset", "na.action"),
names(match.call()), 0))]
m$formula <- terms(fixed)
m$na.action = na.action
m[[1]] <- as.name("model.frame")
m <- eval(m, sys.parent())
na.fixed <- attr(m, "na.action")
if (mixture[[2]] != "-1") {
m <- match.call()[c(1, match(c("data", "subset", "na.action"),
names(match.call()), 0))]
m$formula <- terms(mixture)
m$na.action <- na.action
m[[1]] <- as.name("model.frame")
m <- eval(m, sys.parent())
na.mixture <- attr(m, "na.action")
}
if (random[[2]] != "-1") {
m <- match.call()[c(1, match(c("data", "subset", "na.action"),
names(match.call()), 0))]
m$formula <- terms(random)
m$na.action <- na.action
m[[1]] <- as.name("model.frame")
m <- eval(m, sys.parent())
na.random <- attr(m, "na.action")
}
cc <- cl
cc <- cc[c(1, which(names(cl) == "subset"))]
cc[[1]] <- as.name("model.frame")
cc$formula <- formula(paste("~", paste(colnames(data),
collapse = "+")))
cc$data <- data
cc$na.action <- na.pass
newdata <- eval(cc)
View(newdata)
cc
attributes(newdata)$terms <- NULL
X_fixed <- model.matrix(fixed, data = newdata)
View(X_fixed)
if (any(colnames(X_fixed) == "(Intercept)")) {
ii <- which(colnames(X_fixed) == "(Intercept)")
colnames(X_fixed)[ii] <- "intercept"
int.fixed <- 1
}
nom.fixed <- inddepvar.fixed <- inddepvar.fixed.nom <- colnames(X_fixed)
if (int.fixed > 0)
inddepvar.fixed <- inddepvar.fixed[-ii]
if (mixture[[2]] != "-1") {
X_mixture <- model.matrix(mixture, data = newdata)
if (any(colnames(X_mixture) == "(Intercept)")) {
ii <- which(colnames(X_mixture) == "(Intercept)")
colnames(X_mixture)[ii] <- "intercept"
int.mixture <- 1
}
nom.mixture <- inddepvar.mixture <- inddepvar.mixture.nom <- colnames(X_mixture)
if (int.mixture > 0)
inddepvar.mixture <- inddepvar.mixture[-ii]
id.X_mixture <- 1
}
pprior0 <- matrix(0, length(IND), ng)
IND <- newdata[, nom.subject]
IND
pprior0 <- matrix(0, length(IND), ng)
pprior0
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_model.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script clusters healthcare-use trajectories using a latent class linear
# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]]
}
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
data_resource_lcmm = data_resource_lcmm %>%
rename(patientid = patient_id)
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
# Run LCMM model ----
## Set model parameters ----
max_iter = 2000 # Maximum number of iterations
lcmm_model = hlme(fixed = hospital_use ~ bSpline(indexed_month, degree = 3, knots = 7),
random = ~bSpline(indexed_month, degree = 3, knots = 7),
subject="patientid",
ng=ng,
maxiter=max_iter,
data=data_resource_lcmm,
verbose = FALSE)
paste0("pprior_", 1:ng)
matrix(1/ng, nrow = nrow(data_resource_lcmm), ncol = ng)
matrix(1/ng, nrow = nrow(data_resource_lcmm), ncol = ng) %>%
as_tibble()
matrix(dimnames =     matrix(1/ng, nrow = nrow(data_resource_lcmm), ncol = ng,
dimnames = list(row_names = NULL,
col_names = paste0("pprior_", 1:ng))) %>%
as_tibble())
matrix(1/ng, nrow = nrow(data_resource_lcmm), ncol = ng,
dimnames = list(row_names = "row",
col_names = paste0("pprior_", 1:ng))) %>%
as_tibble()
# Source custom functions ----
source(here::here("analysis", "12_0_LCMM_functions.R"))
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_model.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script clusters healthcare-use trajectories using a latent class linear
# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Source custom functions ----
source(here::here("analysis", "12_0_LCMM_functions.R"))
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]]
}
# Load resource data ----
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
data_resource_lcmm = data_resource_lcmm %>%
mutate(patient_id = patient_id %>% as.character())
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
# Run LCMM model ----
## Set model parameters ----
max_iter = 2000 # Maximum number of iterations
lcmm_model = hlme(hospital_use ~ bSpline(indexed_month, degree = 3, knots = 7),
random = ~bSpline(indexed_month, degree = 3, knots = 7),
subject = "patient_id",
ng = ng,
maxiter = max_iter,
data = data_resource_lcmm,
verbose = FALSE)
here::here("output", "lcmm", "models",
paste0("lcmm_model_", ng, ".rds"))
?read_rds
# Studying the Long-term Impact of COVID-19 in Kids (SLICK)
#
# 12_LCMM_model.R
# Centre for Medical Informatics, Usher Institute, University of Edinburgh 2022
# School of Informatics, University of Edinburgh 2022
# Written by: Karthik Mohan, James Farrell
#
# This script clusters healthcare-use trajectories using a latent class linear
# mixed model (LCLMM) with a spline basis. The resulting model is saved to file.
# Load packages ----
library(tidyverse)
library(lcmm)
library(splines2)
# Output directories ----
dir_lcmm_models = here::here("output", "lcmm", "models")
# Create output directories ----
dir.create(dir_lcmm_models, showWarnings = FALSE, recursive=TRUE)
# Command arguments to set number of clusters ----
args = commandArgs(trailingOnly=TRUE)
if(length(args) == 0){
ng = 1 # will hard code ng = 1 to 5 in .yaml
} else{
ng = args[[1]] %>% as.integer()
}
# Load resource data ----
data_resource_lcmm = read_rds(here::here("output", "data", "data_resource_lcmm.rds"))
# Convert to data.frame ----
data_resource_lcmm = as.data.frame(data_resource_lcmm)
# Run LCMM model ----
## Set model parameters ----
max_iter = 2000 # Maximum number of iterations
library(tictoc)
ng = 5
# Load lcmm model with ng = 1
lcmm_model_1 = read_rds(here::here("output", "lcmm", "models", "lcmm_model_1.rds"))
tic()
# Run hlme ----
lcmm_model = hlme(fixed = hospital_use~bSpline(indexed_month, degree = 3, knots = 7),
random= ~bSpline(indexed_month, degree = 3, knots = 7),
mixture = ~bSpline(indexed_month, degree = 3, knots = 7),
classmb = ~1,
ng = ng,
B = lcmm_model_1,
data = data_resource_lcmm,
subject = "patient_id",
maxiter = max_iter,
verbose = FALSE)
toc()
tic()
# Run hlme ----
lcmm_model = hlme(fixed = hospital_use~bSpline(indexed_month, degree = 3, knots = 7),
random= ~bSpline(indexed_month, degree = 3, knots = 7),
mixture = ~bSpline(indexed_month, degree = 3, knots = 7),
classmb = ~1,
ng = ng,
B = lcmm_model_1,
data = data_resource_lcmm,
subject = "patient_id",
maxiter = max_iter,
verbose = FALSE,
nproc = 4)
toc()
library(lcmm)
View(hlme)
View(mla)
?makeCluster
