ff_label("Pregnency and delivery"),
severe_obesity = case_when(
!is.na(severe_obesity_date) ~ "Yes",
TRUE ~ "No"
) %>%
factor() %>%
ff_label("Severe obesity"),
)
# Covid status, counts and test dates ----
## First positive test date ----
data_patient = data_patient %>%
left_join(
data_testing %>%
filter(result == "Positive") %>%
group_by(patient_id) %>%
filter(row_number() == 1) %>%
select(patient_id, covid_pos_test_date_1 = test_date),
by = "patient_id"
)
## Count tests by result by period ----
data_patient = data_patient %>%
left_join(
data_testing %>%
mutate(
result_abr = if_else(result == "Positive", "pos", "neg"),
test_period = case_when(
test_date < tp_start_date ~ NA_character_,
test_date <= tp_end_date  ~ "tp", # Testing period
test_date <= study_end_date ~ "fup", # Follow-up period
TRUE ~ NA_character_
),
result_period = paste0(result_abr, "_", test_period)
) %>%
group_by(patient_id) %>%
count(result_period) %>%
pivot_wider(
names_from = result_period,
names_glue = "covid_test_{result_period}_count",
values_from = n,
),
by = "patient_id"
) %>%
replace_na(
list(covid_test_neg_tp_count = 0,
covid_test_pos_tp_count = 0,
covid_test_neg_fup_count = 0,
covid_test_pos_fup_count = 0)
) %>%
mutate(
covid_test_neg_tp_count = covid_test_neg_tp_count %>%
ff_label("Negative covid test count (testing period)"),
covid_test_pos_tp_count = covid_test_pos_tp_count %>%
ff_label("Positive covid test count (testing period)"),
covid_test_neg_fup_count = covid_test_neg_fup_count %>%
ff_label("Negative covid test count (follow-up period)"),
covid_test_pos_fup_count = covid_test_pos_fup_count %>%
ff_label("Positive covid test count (follow-up period)")
)
## Assign covid status ----
data_patient = data_patient %>%
mutate(covid_status = case_when(
covid_test_pos_tp_count > 0 ~ "Positive",
covid_test_neg_tp_count > 0 ~ "Negative",
TRUE ~ "Untested") %>%
factor() %>%
ff_label("SARS-CoV-2 status (testing period)"),
)
# Exclusion criteria variables ----
## Potential nosocomial infection ----
## Defined as a positive covid test after day 7 in hospital and on or before 7th
##  day following discharge
data_patient = data_patient %>%
left_join(
data_admissions %>%
left_join(
data_patient %>%
select(patient_id, covid_pos_test_date_1),
by = "patient_id") %>%
mutate(
covid_nosocomial = case_when(
# Length of stay less than 7 days: Not nosocomial
(discharge_date - admission_date) < 7 ~ NA_character_,
# Length of stay 7+ days: Nosocomial if positive after day 7 in hospital
# and on or before day 7 following discharge, otherwise not nosocomial
(admission_date + days(7) < covid_pos_test_date_1) &
(discharge_date + days(7) >= covid_pos_test_date_1) ~ "Yes",
TRUE ~ NA_character_
) %>%
ff_label("Nosocomial infection")) %>%
filter(covid_nosocomial == "Yes") %>%
select(patient_id, covid_nosocomial) %>%
group_by(patient_id) %>%
slice(1) %>%
ungroup(),
by = "patient_id"
) %>%
replace_na(list(covid_nosocomial = "No"))
## Discrepant test result ----
data_patient = data_patient %>%
left_join(
data_testing %>%
group_by(patient_id) %>%
mutate(
covid_test_pos_1 = first(test_date[result == "Positive"])
) %>%
ungroup() %>%
filter(test_date == covid_test_pos_1 & result == "Negative") %>%
mutate(covid_discrepant_test = "Yes") %>%
select(patient_id, covid_discrepant_test),
by = "patient_id"
) %>%
replace_na(list(covid_discrepant_test = "No"))
# Save data as rds ----
write_rds(data_patient,
here::here("output", "data", "data_patient.rds"),
compress="gz")
data_patient = tibble(
patient_id = 1:1000,
asthma = sample(c(0,1), 1000, replace = TRUE, prob = c(0.95, 0.05))
)
data_patient = tibble(
patient_id = 1:1000,
asthma = sample(c(0,1), 1000, replace = TRUE, prob = c(0.95, 0.05))
)
library(tidyverse)
data_patient = tibble(
patient_id = 1:1000,
asthma = sample(c(0,1), 1000, replace = TRUE, prob = c(0.95, 0.05))
)
library(lubridate)
data_admissions = tibble(
patient_id = sample(1:1000, 200, replace = TRUE),
admission_date = sample(seq(ymd("2019-01-01"), ymd("2022-05-01"), by = day),
200, replace = TRUE)
)
data_admissions = tibble(
patient_id = sample(1:1000, 200, replace = TRUE),
admission_date = sample(seq(ymd("2019-01-01"), ymd("2022-05-01"), by = "day"),
200, replace = TRUE)
)
data_admissions = tibble(
patient_id = sample(1:1000, 200, replace = TRUE),
admission_date = sample(seq(ymd("2019-01-01"), ymd("2022-05-01"), by = "day"),
200, replace = TRUE),
discharge_date = admission_date + rpois(200, 2)
)
View(data_admissions)
View(data_patient)
data_admissions_daily = data_admissions %>%
mutate(dates = list(admission_date:discharge_date))
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(admission_date:discharge_date))
View(data_admissions_daily)
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest()
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
View(data_admissions_daily)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates) %>%
mutate(month = floor_date(dates, unit = "month"))
View(data_admissions_daily)
library(tidyverse)
library(lubridate)
n_patient = 1000
n_admissions = 200
start_date = ymd("2019-01-01")
end_date = ymd("2022-05-01")
data_admissions_monthly_count = data_patient %>%
expand(test = 1:2)
View(data_admissions_monthly_count)
data_admissions_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(test = 1:2)
View(data_admissions_monthly_count)
data_admissions_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, unit = "month"))
data_admissions_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month"))
View(data_admissions_monthly_count)
data_admissions_monthly_count = data_admissions_daily %>%
count(patient_id, month)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
data_admissions_monthly_count = data_admissions_daily %>%
count(patient_id, month)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
data_admissions_monthly_count = data_admissions_daily %>%
mutate(month = floor_date(dates, unit = "month")) %>%
count(patient_id, month)
View(data_admissions_monthly_count)
library(tidyverse)
library(lubridate)
n_patient = 1000
n_admissions = 200
start_date = ymd("2019-01-01")
end_date = ymd("2022-05-01")
data_patient = tibble(
patient_id = 1:n_patient,
asthma = sample(c(0,1), n_patient, replace = TRUE, prob = c(0.95, 0.05))
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
n_admissions, replace = TRUE),
discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
data_admissions_monthly_count = data_admissions_daily %>%
mutate(month = floor_date(dates, unit = "month")) %>%
count(patient_id, month)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month"))
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(data_admissions_monthly_count, by = c("patient_id", "month"))
View(data_all_monthly_count)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(data_admissions_monthly_count, by = c("patient_id", "month")) %>%
replace_na(n = 0)
View(data_all_monthly_count)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(data_admissions_monthly_count, by = c("patient_id", "month")) %>%
replace_na(list(n = 0))
View(data_all_monthly_count)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(
data_admissions_monthly_count,
by = c("patient_id", "month")
) %>%
replace_na(list(n = 0)) %>%
left_join(
data_patient %>% select(patient_id, asthma),
by = "patient_id"
)
View(data_all_monthly_count)
monthly_mean_by_asthma = data_all_monthly_count %>%
group_by(month, asthma) %>%
summarise(mean = mean(n))
View(monthly_mean_by_asthma)
monthly_mean_by_asthma %>%
ggplot(aes(month, mean, colour = asthma)) +
geom_line()
library(tidyverse)
library(lubridate)
n_patient = 1000
n_admissions = 200
start_date = ymd("2019-01-01")
end_date = ymd("2022-05-01")
data_patient = tibble(
patient_id = 1:n_patient,
asthma = sample(c(0,1), n_patient, replace = TRUE, prob = c(0.95, 0.05)) %>%
factor()
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
n_admissions, replace = TRUE),
discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
data_admissions_monthly_count = data_admissions_daily %>%
mutate(month = floor_date(dates, unit = "month")) %>%
count(patient_id, month)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(
data_admissions_monthly_count,
by = c("patient_id", "month")
) %>%
replace_na(list(n = 0)) %>%
left_join(
data_patient %>% select(patient_id, asthma),
by = "patient_id"
)
monthly_mean_by_asthma = data_all_monthly_count %>%
group_by(month, asthma) %>%
summarise(mean = mean(n))
monthly_mean_by_asthma %>%
ggplot(aes(month, mean, colour = asthma)) +
geom_line()
library(tidyverse)
library(lubridate)
n_patient = 1000
n_admissions = 200
start_date = ymd("2019-01-01")
end_date = ymd("2022-05-01")
data_patient = tibble(
patient_id = 1:n_patient,
asthma = sample(c(0,1), n_patient, replace = TRUE, prob = c(0.95, 0.05)) %>%
factor()
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
n_admissions, replace = TRUE),
discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
n_admissions, replace = TRUE),
#discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
#admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
n_admissions, replace = TRUE),
#discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
#admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
#                        n_admissions, replace = TRUE),
#discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(, ymd("2022-05-01"), by = "day"),
n_admissions, replace = TRUE),
#discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(start_date, end_date, by = "day"),
n_admissions, replace = TRUE),
discharge_date = admission_date + rpois(n_admissions, 2)
)
library(tidyverse)
library(lubridate)
n_patient = 1000
n_admissions = 200
start_date = ymd("2019-01-01")
end_date = ymd("2022-05-01")
data_patient = tibble(
patient_id = 1:n_patient,
asthma = sample(c(0,1), n_patient, replace = TRUE, prob = c(0.95, 0.05)) %>%
factor()
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(start_date, end_date, by = "day"),
n_admissions, replace = TRUE),
discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
data_admissions_monthly_count = data_admissions_daily %>%
mutate(month = floor_date(dates, unit = "month")) %>%
count(patient_id, month)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(
data_admissions_monthly_count,
by = c("patient_id", "month")
) %>%
replace_na(list(n = 0)) %>%
left_join(
data_patient %>% select(patient_id, asthma),
by = "patient_id"
)
monthly_mean_by_asthma = data_all_monthly_count %>%
group_by(month, asthma) %>%
summarise(mean = mean(n))
monthly_mean_by_asthma %>%
ggplot(aes(month, mean, colour = asthma)) +
geom_line()
monthly_mean_by_asthma %>%
ggplot(aes(month, mean, colour = asthma)) +
geom_line() +
geom_point()
library(tidyverse)
library(lubridate)
n_patient = 10000
n_admissions = 2000
start_date = ymd("2019-01-01")
end_date = ymd("2022-05-01")
data_patient = tibble(
patient_id = 1:n_patient,
asthma = sample(c(0,1), n_patient, replace = TRUE, prob = c(0.95, 0.05)) %>%
factor()
)
data_admissions = tibble(
patient_id = sample(1:1000, n_admissions, replace = TRUE),
admission_date = sample(seq(start_date, end_date, by = "day"),
n_admissions, replace = TRUE),
discharge_date = admission_date + rpois(n_admissions, 2)
)
data_admissions_daily = data_admissions %>%
rowwise() %>%
mutate(dates = list(seq(admission_date, discharge_date, by = "day"))) %>%
unnest(dates)
data_admissions_monthly_count = data_admissions_daily %>%
mutate(month = floor_date(dates, unit = "month")) %>%
count(patient_id, month)
data_all_monthly_count = data_patient %>%
group_by(patient_id) %>%
expand(month = seq(start_date, end_date, by = "month")) %>%
left_join(
data_admissions_monthly_count,
by = c("patient_id", "month")
) %>%
replace_na(list(n = 0)) %>%
left_join(
data_patient %>% select(patient_id, asthma),
by = "patient_id"
)
monthly_mean_by_asthma = data_all_monthly_count %>%
group_by(month, asthma) %>%
summarise(mean = mean(n))
monthly_mean_by_asthma %>%
ggplot(aes(month, mean, colour = asthma)) +
geom_line() +
geom_point()
knitr::opts_chunk$set(echo = FALSE, message=FALSE,
warning=FALSE)
# Load packages ----
library(tidyverse)
library(lubridate)
library(finalfit)
library(scales)
library(zoo)
library(knitr)
# Load custom functions and lookup tables ----
source(here::here("analysis", "00_utility_functions.R"))
source(here::here("analysis", "00_lookup_tables.R"))
# Plot theme
theme_set(theme_bw())
data_testing = read_rds(here::here("output", "data", "data_testing.rds"))
data_testing %>%
mutate(
date = test_date %>% cut(breaks = "week")
) %>%
count(date, .drop = FALSE) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom")
data_testing %>%
mutate(
date = test_date %>% cut(breaks = "week")
) %>%
count(date, result, .drop = FALSE) %>%
group_by(result) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ungroup() %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "3 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ result)
data_testing %>%
mutate(
date = test_date %>% cut(breaks = "week")
) %>%
count(date, result, .drop = FALSE) %>%
group_by(result) %>%
mutate(roll_mean = rollmean(n, 4, align = "right", fill = NA),
date = date %>% as_date()) %>%
ungroup() %>%
ggplot(aes(date, n)) +
geom_col() +
geom_line(aes(date, roll_mean, linetype = "4-week averge"), colour = "red") +
scale_x_date(labels = date_format("%b\n%Y"),
breaks = seq(from = ymd("2015-01-01"), to = ymd("2022-12-01"), by = "6 month")) +
labs(y = "Weekly count", x = NULL, linetype = NULL) +
theme(legend.position = "bottom") +
facet_wrap(~ result)
# Load datasets
data_patient = read_rds(here::here("output", "data", "data_patient.rds"))
